#  File      : /afs/psi.ch/user/f/flechsig/phase/src/phase/Makefile.linux
#  Date      : <24 Jun 02 09:57:06 flechsig> 
#  Time-stamp: <31 Oct 03 12:39:36 flechsig> 
#  Author    : Uwe Flechsig, flechsig@psi.ch

#  $Source$ 
#  $Date$
#  $Revision$ 
#  $Author$ 
#

#########################################################################
# Makefile PHASE on LINUX 
# tested with RedHat 6.1 and SUSE 6
# at least the first part of the makefile must be modified if necessary
#########################################################################
# 1) paths
# remarks: 
# the library olib should be installed at a common directory INSTPATH0
# the program olib should be installed at a personal account INSTPATH1
SRCDIR      = .
INSTPATH0   = /usr/local/phase
INSTPATH1   = ~/phase
BUILDPATH   = ~/phase
CERNLIB     = /cern/2000/lib
#CERNLIB    = /usr/local/cern/2000/lib
#########################################################################
# 2) tools
SHELL       = /bin/sh 
CC          = gcc -v
PP          = g77 -E -o
FOR         = f77
AR	    = ar -rv 
YACC        = bison -y
INSTALL     = /usr/bin/install -c
INSTALLDATA = /usr/bin/install -c -m 644
MAKE        = make
#########################################################################
# 3) switches
DEBUG	= -DDEBUG
DEFS    = -DLINUX $(DEBUG) -DCADDR_T         # caddr_t in header file
CDEBUG  = -gdwarf
FDEBUG  = -g -C -B111 
LINUX_C	= -I/usr/X11R6/include -D_POSIX_SOURCE -DNOLOCK 
CFLAGS  = $(CDEBUG) -I. -I$(SRCDIR) $(LINUX_C) $(DEFS) -c 
FFLAGS  = $(FDEBUG) -c -f -B108 -W -s -N3 -N51 -N22 -N33
LDFLAGS = -L/usr/X11R6/lib -lXm -lMrm -lXt -lXext -lXp -lX11 -lm -lc -lnsl
#FFLAGS for absoft f77 compiler
#	-g generate debugging information
#	-c generate object files
#     	-f fold to lower case
#	-B108 append a single underscore to funtion names
#	-W allow > 72 columns
#	-s force all program storage to be treated as static and initialized
#	   to zero (weglassen???)
#	-N3 include record length information for sequential, unformated files
#	-N51 interpret RECL specifier as a number of 32bit words in a record
#	-C Check array boundaries (for debugging only)
#	-B111 Validate FPU stack after procedure calls (for debugging only)
#	-m0 give more error messages
#	-N22 append underscore to common block names (wichtig wegen pawc)
#       -N33 pack structures (kein alignment) 

.phony: all makewhat    
#########################################################################
PROGRAM = phaseopti
OLIB    = phaseoptilib.a
#########################################################################
LIBS    = $(INSTPATH0)/lib/$(OLIB) $(INSTPATH0)/lib/phaselib.a \
          -L/usr/absoft/lib -lf77math -lfio -lU77 -lV77 -lf77math -lg2c\
          -L$(CERNLIB) -lpawlib -lpacklib \
          -lgraflib -lgrafX11 -lpacklib -lmathlib -lkernlib -lg2c 
#	  -Xlinker -defsym -Xlinker MAIN__=main
#########################################################################
OBJECTC = phaseopti.o
OBJECTF = cost.o 
########################################################################
OLIBOS  = ../phase/activate_proc.o ../phase/phasec.o ../phase/bline.o \
	  ../phase/phasefor.o ../phase/rtrace.o ../phase/phasegraf.o \
          ../phase/geometrypck.o ../phase/initdatset.o \
          ../phase/mirrorpck.o ../phase/phasegraffor.o ../phase/pst.o \
          ../phase/phase_integration.o ../phase/phase_source.o \
          treiber.o optisubc.o ../phase/phase0.o ../phase/cutils.o
########################################################################
PHASEHS = phaseopti.h
AUX     = Makefile.linux Makefile.bessy Makefile.psicl0 
SRCC    = phaseopti.c 
SRCF    = cost.fpp 
SRCS    = $(PHASEHS) $(SRCC) $(SRCF)
#########################################################################
#                            targets                                    # 
all: 	
	@echo "Making $(PROGRAM) for LINUX..." 
	$(MAKE) $(PROGRAM)   
#########################################################################
# Dependencies section
$(PROGRAM): $(OBJECTC) $(OBJECTF)
	$(CC)  -o $@  $(OBJECTC) $(OBJECTF) $(LDFLAGS) $(LIBS)
##########################################################################
%.o : %.c $(PHASEHS)
	$(CC) $(CFLAGS) -o $@ $< 

%.o : %.for phase_struct.for
	$(FOR) $(FFLAGS) $@ $<   

%.o : %.f
	$(FOR) $(FFLAGS) $< 

#preprocessor
%.f : %.fpp
	$(PP) $@ $<
##########################################################################
# olib
olib: $(OLIBOS)
	$(AR) $(OLIB) $(OLIBOS)  
	ranlib -v $(OLIB)
##########################################################################
install: all
	@echo "to install the olib use target: install-olib"
	$(INSTALL) $(PROGRAM) $(INSTPATH1)/bin/$(PROGRAM)

install-olib:
	@echo "install the library..."
	$(INSTALL) $(OLIB) $(INSTPATH0)/lib/$(OLIB)

clear:
	@echo "delete objects and exe..."  
	rm *.o *~ core $(PROGRAM)

TAGS:   $(SRCS)
	etags $(SRCS)
     
clean:
	rm -f *.o  core
     
distclean: clean
	rm -f TAGS  config.status

dist: $(SRCS) $(AUX)
	echo phase-`sed \
	-e '/VERSION_STRING/!d' \
	-e 's/[^0-9.]*\([0-9.]*\).*/\1/' \
	-e 'q' \
	version.h` > .fname
	-rm -rf `cat .fname`
	mkdir `cat .fname`
	ln $(SRCS) $(AUX) `cat .fname`
	-rm -rf `cat .fname`.fname
	tar -czhf `cat .fname`.tgz `cat .fname`
	-rm -Rf `cat .fname`
	ln `cat .fname`.tgz $(BUILDPATH)/release
####################      end makefile       ###############################
#end /home/pss060/sls/flechsig/phase/src/phase/Makefile.linux