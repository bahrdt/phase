;; -*-idlwave-*-
;  File      : /afs/psi.ch/user/f/flechsig/phase/src/phaseidl/crl.pro
;  Date      : <11 Jul 13 08:23:00 flechsig> 
;  Time-stamp: <29 Aug 13 15:55:02 flechsig> 
;  Author    : Uwe Flechsig, uwe.flechsig&#64;psi.&#99;&#104;

;  $Source$ 
;  $Date$
;  $Revision$ 
;  $Author$ 

;; test routine for crl

;+ 
; NAME:
;   crl_focus_1A.idl
;
;
; PURPOSE:
;   plot beam size as function of distgance from CRL.  
;   determines smallest spot and the corresponding distance
;
; CATEGORY:
;   phase_calc
;
;
; CALLING SEQUENCE:
;
;
;
; INPUTS:
;   
;
;
; OPTIONAL INPUTS:
;
;
;
; KEYWORD PARAMETERS:
;
; OUTPUTS:
;
;
;
; OPTIONAL OUTPUTS:
;
;
;
; COMMON BLOCKS:
;
;
;
; SIDE EFFECTS:
;
;
;
; RESTRICTIONS:
;   material properties hard coded - only Be so far
;
; PROCEDURE:
;
;
;
; EXAMPLE:
;   @crl_focus_1A.idl
;
;
; MODIFICATION HISTORY:
;    11.7.2013 UF
;    22.8.2013 RF  renamed from crl_rolf.idl to  crl_focus_1A.idl
;
; cd /home/scratch/phase/src/idlphase 
;
;-------------------- R e a d  I n p u t   F i l e s ---------------------------
;--------- Get Screen size in pixel -----------
;
!P.POSITION=[0.1, 0.1, 0.9,0.9]

print, !P.CHARSIZE

device, Get_Screen_size=size
screenX=size[0]
ScreenY=size[1]
Wx=ScreenX/4
Wy=ScreenY/4


if n_elements(Nz)         eq 0 then Nz         = 9
if n_elements(wavelength) eq 0 then wavelength = 1e-10
if n_elements(sourcedist) eq 0 then sourcedist = 0
if n_elements(waist)      eq 0 then waist      = 27.7e-6 
if n_elements(drift)      eq 0 then drift      = 120.
if n_elements(focusdist)  eq 0 then focusdist  = 11.715
if n_elements(nimages)    eq 0 then nimages    = 35          ;; number of foci to try around focusdist +/- 0.5 depth
if n_elements(depth)      eq 0 then depth      = 1.          ;; depth for focus search

fname0     ='/afs/psi.ch/project/phase/data/SwissFEL.out.dfl.h5'
stat       = dblarr(7)

;
;h5_read, fname0, z_vec=z_vec, y_vec=y_vec, wavelength=wavelength, zcomp=zcomp
;
;     bamp   =abs(zcomp)
;     bphase=atan(zcomp,/phase)
;    emf_statistics, bamp, y_vec=y_vec, z_vec=z_vec
; 
;     window,1, RETAIN=2, XSIZE=wx, YSIZE=wy ,XPOS=screenx-wx,YPOS=screeny-1*wy 
;     mycontour, bamp  ,z_vec*1e3,y_vec*1e3, xtitle='z (mm) ', ytitle='y (mm)', title='Source (amp)  ',xrange=[-0.3,0.3] ,yrange=[-0.3,0.3];
;
;     window,2, RETAIN=2, XSIZE=wx, YSIZE=wy ,XPOS=screenx-2*wx,YPOS=screeny-1*wy 
;     mycontour, bphase,z_vec*1e3,y_vec*1e3, xtitle='z (mm) ', ytitle='y (mm)', title='Source (phase)',xrange=[-0.3,0.3] ,yrange=[-0.3,0.3]
;gaussbeam, dist=0, Nz=21, sizez= 6e-4, z_vec=z_vec, y_vec=y_vec, bcomp=field , w0=27.7e-6 ,  wavelength=1e-10

gaussbeam, dist=sourcedist, Nz=Nz, sizez= 6e-4, z_vec=z_vec, y_vec=y_vec, field=field , w0=waist,  wavelength=wavelength
;; field from file
;; h5_read, fname0, z_vec=z_vec, y_vec=y_vec, wavelength=wavelength, zcomp=field
;; end file

bamp = abs(field)
bamp = bamp/max(bamp)
fit  = gauss2dfit(bamp, stat, z_vec, y_vec) 

title= 'Source '+  string(sourcedist,FORMAT="(f6.1)") + 'm size='+  string(stat(2)*1e6,FORMAT="(f6.1)")+ ' x ' +string(stat(3)*1e6,FORMAT="(f6.1)") + textoidl(' \mum^2')
window,1, RETAIN=2, XSIZE=wx, YSIZE=wy ,XPOS=screenx-wx,YPOS=screeny-1*wy 

mycontour, bamp, z_vec*1e3, y_vec*1e3, xtitle='z (mm)', ytitle='y (mm)', title=title

if (sourcedist ne 0) then  window,2, RETAIN=2, XSIZE=wx, YSIZE=wy ,XPOS=screenx-2*wx,YPOS=screeny-1*wy 
if (sourcedist ne 0) then  bamp = atan(bcomp,/phase)
if (sourcedist ne 0) then  mycontour, bamp,z_vec*1e3,y_vec*1e3, xtitle='z (mm)', ytitle='y (mm)', title='Source: Gaussbeam (phase)'


print, 'call drift', drift, ' m'
 
propfourier , drift=drift, z_vec=z_vec, y_vec=y_vec, field=field, wavelength=wavelength
; prophuygens, field=field, z_vec=z_vec, y_vec=y_vec, drift=drift, wavelength=wavelength, Nu=200, Nv=200, Npi=0, plot=0

propphase = atan(field,/phase)
propamp   = abs(field)  
propamp   = propamp/max(propamp)

fit   = gauss2dfit(propamp, stat, z_vec, y_vec) 
title = 'Prop. to ' +  string(drift,FORMAT="(f6.1)") + 'm size='+  string(stat(2)*1e6, FORMAT="(f6.1)")+ ' x ' +string(stat(3)*1e6, FORMAT="(f6.1)")+ textoidl(' \mum^2')

window,3, RETAIN=2, XSIZE=wx, YSIZE=wy ,XPOS=screenx-wx, YPOS=screeny-2*wy 
mycontour, propamp,z_vec*1e3,y_vec*1e3, xtitle='z (mm)', ytitle='y (mm)', title=title+ ' (amp)'

window,4, RETAIN=2, XSIZE=wx, YSIZE=wy ,XPOS=screenx-2*wx, YPOS=screeny-2*wy 
mycontour, propphase, z_vec*1e3, y_vec*1e3, xtitle='z (mm)', ytitle='y (mm)', title=title + ' (phase)'

;;;;;;;;;;;;;;;;;;;;; crl ;;;;;;;;;;;;;;;;;;;;;;;;
print, 'call crl'
crl, z_vec=z_vec, y_vec=y_vec, radius=48e-6 ,size=500e-6, field=field, crlamp=crlamp, crlphase=crlphase, wavelength=wavelength

window,5, RETAIN=2, XSIZE=wx, YSIZE=wy , XPOS=screenx-wx, YPOS=screeny-3*wy 
mycontour, crlamp, z_vec*1e3, y_vec*1e3, xtitle='z (mm) ', ytitle='y (mm)', title='CRL (amp)', xrange=[-0.3,0.3], yrange=[-0.3,0.3], zrange=[0.9, 1.0]
     
window,6, RETAIN=2, XSIZE=wx, YSIZE=wy ,XPOS=screenx-2*wx, YPOS=screeny-3*wy 
mycontour, crlphase, z_vec*1e3, y_vec*1e3, xtitle='z (mm) ', ytitle='y (mm)', title='CRL (phase)' ;;,xrange=[-0.3,0.3] ,yrange=[-0.3,0.3]

result= dblarr(3, Nimages)

bcomp = field   ;; save field

;; loop to find focus
for i = 0, (Nimages-1) do begin & $
  imagedist= focusdist+ depth* (i/(nimages-1.0)- 0.5) & $
  print, 'imagdist = ', imagedist &  $ 
  field= bcomp & $
  propfourier , drift=imagedist, z_vec=z_vec, y_vec=y_vec, field=field, wavelength=wavelength  & $
  bamp= abs(field) & $ 
  bamp= bamp/max(bamp) & $
  fit = gauss2dfit(bamp, stat, z_vec, y_vec)  & $
  result(0,i) = imagedist &  $
  result(1,i) = stat(2) & $
  result(2,i) = stat(3) & $ 
endfor
print, '************************'
print, 'loop done - print result'
print, '************************'
   
title = 'image size (amplitude), source dist = ' + string(drift,FORMAT="(f6.1)") + ' m' + ' waist = '+ string(waist*1e6,FORMAT="(f5.1)")+ textoidl(' \mum')
window, 20, retain=2, XSIZE=wx, YSIZE=wy ,XPOS=screenx-3*wx, YPOS=screeny-4*wy 
plot,   result(0,*), result(1,*)*1e6, xtitle='distance from CRL (m) ', ytitle=textoidl('rms (\mum)'), title=title,  /nodata ;;charsize=2
oplot,  result(0,*), result(1,*)*1e6, color=1
oplot,  result(0,*), result(2,*)*1e6, color=2
legend, ['horizontal','vertical'], linestyle=[0,0], color=[1,2]

print, '***************************'
print, 'calculate and print minimum'
print, '***************************'

; plot the image with the smallest cross section
print, ' minimum amplitude cross section (m) rms: ',  min(result(1,*)), ', FWHM: ', 2.35*min(result(1,*))
drift1 =  result(0, !c) ;; System variable !c contains subscript of minimum, see help for function MIN
print, ' at distance ', drift1 , ' m'

field=bcomp
propfourier , drift=drift1, z_vec=z_vec, y_vec=y_vec, field=field, wavelength=wavelength

bamp = abs(field)
bamp = bamp/max(bamp)
bamp2= bamp^2                     ;;; UF was soll das - intensity is ampl^2
fit  = gauss2dfit(bamp2, stat, z_vec, y_vec)

title = 'smallest spot at ' + string(drift1,FORMAT="(f5.1)") + ' m, size = '+ string(stat[2]*1e6, FORMAT="(f4.2)")+ textoidl(' \mum (rms)')

mima= 10.   ; for xrange

window,7, RETAIN=2, XSIZE=wx, YSIZE=wy ,XPOS=screenx-wx, YPOS=screeny-4*wy 
mycontour, bamp2  ,z_vec*1e6, y_vec*1e6, xtitle=textoidl('z (\mum)'), ytitle=textoidl('y (\mum)'), title= 'Intensity: '+title, xrange=[-mima,mima] ,yrange=[-mima,mima]

bphase = atan(field,/PHASE)

window,8, RETAIN=2, XSIZE=wx, YSIZE=wy ,XPOS=screenx-2*wx, YPOS=screeny-4*wy 
mycontour, bphase, z_vec*1e6, y_vec*1e6, xtitle=textoidl('z (\mum)'), ytitle=textoidl('y (\mum)'), title= title, xrange=[-mima,mima] ,yrange=[-mima,mima]

print, 'spatial resolution (mm) = ', (z_vec[1]-z_vec[0])*1e3
;; end





