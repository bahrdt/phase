! File      : /home/pss060/sls/flechsig/phase/src/gui/phase.uil
! Date      : <22 Oct 99 09:54:11 flechsig> 
! Time-stamp: <29 Sep 00 13:52:18 flechsig> 
! Author    : Flechsig Uwe OVGA/203a 4535, flechsig@psi.ch
!
! Datei: USERDISK_3:[FLECHSIG.PHASE.PHASEUIL]PHASE.UIL
! Datum: 19.JUL.1994
! Stand: 29-MAY-1996
! Autor: FLECHSIG, BESSY Berlin

module  PHASE
        version = '0.95'
        names = case_sensitive
                  
        objects = {
                XmSeparator    = gadget ;
                XmLabel        = gadget ;
                XmPushButton   = gadget ;
                XmToggleButton = gadget ;
                }

procedure                                  
        activate_proc      (integer);
        toggle_proc        (integer); 
	create_proc        (integer); 
        list_proc          (integer); 
        exit_proc          (string);
        sens_help_proc     (compound_string);   
        help_system_proc   (string);   
        ok_color_proc      ();
        apply_color_proc   ();
        cancel_color_proc  (); 
        FileSelectionProc  (integer);
        SelectionProc      (integer);

/************************ Include Files ******************************/

include file "phasevalue.uil";             !Konstanten          
include file "filemenu.uil";  
include file "editmenu.uil"; 
include file "commandsmenu.uil";       
include file "helpmenu.uil";     
                                   

!************************* Main *****************************************

object                                  
        S_MAIN_WINDOW : XmMainWindow {
            controls {                  ! S_MAIN_WINDOW has two children.
                XmMenuBar       MMenuBar;
                XmScrolledText	MainList;
		     };                
            };

object
    MainList : XmScrolledText 
    {
        arguments {
            XmNeditable         = false;
            XmNeditMode	        = XmMULTI_LINE_EDIT;
            XmNmaxLength	= 8000;
            XmNbackground	= color('yellow', background);
            };                  
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kMainList);
            XmNhelpCallback     = procedure sens_help_proc(k_command_help); 
            };                   
        };
                                                              

! Now define the menu bar and the pulldown widgets in the menu bar.

object
    MMenuBar : XmMenuBar {
        arguments {                     
            XmNorientation      = XmHORIZONTAL;
            XmNmenuHelpWidget   = XmCascadeButton HelpMenuEntry;   
            };
        controls {                              
            XmCascadeButton     FileMenuEntry;
            XmCascadeButton     EditMenuEntry;
            XmCascadeButton     CommandMenuEntry;    
            XmCascadeButton     OptionsMenuEntry;  
            XmCascadeButton     InfoMenuEntry;  
            XmCascadeButton     HelpMenuEntry;    
            };
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kMenuBar);
            XmNhelpCallback     = procedure sens_help_proc(k_menu_bar_help);  
            };                              
        };

object
    FileMenuEntry : XmCascadeButton {
        arguments {
            XmNlabelString      = !#iso_greek
					"File";
            XmNmnemonic         = keysym("F");  };    
        controls {
            XmPulldownMenu        file_menu;      };
        callbacks {
            !XmNcascadingCallback = procedure pull_proc   (kFilePDMe);
            MrmNcreateCallback   = procedure create_proc (kFilePDMe);
            XmNhelpCallback      = procedure sens_help_proc(k_file_help);
            };
        };
                                                                       
object
    EditMenuEntry : XmCascadeButton {
        arguments {
            XmNlabelString      = "Edit";
            XmNmnemonic         = keysym("E");
            };
        controls {
            XmPulldownMenu        edit_menu;
            };
        callbacks {
            !XmNcascadingCallback = procedure pull_proc   (kEditPDMe);
            MrmNcreateCallback   = procedure create_proc (kEditPDMe); 
            XmNhelpCallback      = procedure sens_help_proc(k_edit_help); 
            };
        };                
                    
object
    CommandMenuEntry : XmCascadeButton {
        arguments {
            XmNlabelString      = "Commands";
            XmNmnemonic         = keysym("C");
            };
        controls {
            XmPulldownMenu      CommandMenu;
            };
        callbacks {
            !XmNcascadingCallback = procedure pull_proc     (kCommandPDMe);
            MrmNcreateCallback   = procedure create_proc   (kCommandPDMe); 
            XmNhelpCallback      = procedure sens_help_proc(k_command_help); 
            };
        };

object   
    OptionsMenuEntry : XmCascadeButton {
        arguments {
            XmNlabelString       = "Options"; 
            XmNmnemonic          = keysym("O");  
            XmNmappedWhenManaged = false;
            };
        controls {
            XmPulldownMenu      options_menu;
            };
        callbacks {                        
            MrmNcreateCallback  = procedure create_proc   (k_options_pdme);
            XmNhelpCallback     = procedure sens_help_proc(k_options_help);
            }; 
        };      


object   
    InfoMenuEntry : XmCascadeButton {
        arguments {
            XmNlabelString      = "Info"; 
            XmNmnemonic         = keysym("I");  
        !    XmNmappedWhenManaged = false;
            };
       ! controls {
       !     XmPulldownMenu      options_menu;
       !     };    
        callbacks {   
            XmNactivateCallback = procedure activate_proc (kSetupInfo); 
            MrmNcreateCallback  = procedure create_proc   (kInfoMenuEntry); 
            XmNhelpCallback     = procedure sens_help_proc(k_options_help);
            }; 
        };      

object
    HelpMenuEntry : XmCascadeButton {                 
        arguments { 
            XmNlabelString      = "Help";
            XmNmnemonic         = keysym("H");
            };          
        controls { 
            XmPulldownMenu      help_menu;
            };
        callbacks {
            XmNhelpCallback     = procedure sens_help_proc(k_help_help);
            };     
        };
!!!!!!!!!!!!!!!!!!!!!!!!!! Ende Main Menu Bar !!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!  Toplevel Widgets  !!!!!!!!!!!!!!!!!!!!!!!!!!!

object           
    nyi : XmInformationDialog {         
        arguments {
            XmNdialogTitle      = "Information";
            XmNmessageString    = "This feature is not yet implemented.";
            XmNdefaultPosition  = true;
            XmNautoUnmanage     = true;
            XmNnoResize         = true;
            };
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kNyi);   };
        };

object           
    SetupInfo : XmInformationDialog {         
        arguments {
            XmNdialogTitle      = "Setup Information";
            XmNmessageString    = kSetupInfoString;
            XmNmessageAlignment = XmALIGNMENT_CENTER;
	    XmNdefaultPosition  = true;
            XmNautoUnmanage     = true;
            XmNnoResize         = true;
            };
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kSetupInfo);   };
        };

object           
    DisableInfo : XmInformationDialog {         
        arguments {
            XmNdialogTitle      = "Disable Information";
            XmNmessageString    = kDisableInfoString;
            XmNmessageAlignment = XmALIGNMENT_CENTER;
	    XmNdefaultPosition  = true;
            XmNautoUnmanage     = true;
            XmNnoResize         = true;
            };
        };
!************************ Options Menue ********************************

!The colormix widget object   
!not available on linux commneted out 28.10.99
!object
!    main_color : DXmColorMixDialog 
!        {
!        arguments            
!            {
!            XmNdialogTitle      = "Background Color";
!            DXmNmainLabel       = compound_string("Colormix");
!            };      
!        callbacks                
!            {
!            XmNhelpCallback     = procedure sens_help_proc(k_options_help);
!            XmNcancelCallback   = procedure cancel_color_proc();
!            XmNokCallback       = procedure ok_color_proc();
!            XmNapplyCallback    = procedure apply_color_proc();
!            };                            
!        };  
! The options pulldown entry and its associated pulldown menu.

object                    
    options_menu : XmPulldownMenu {
        controls {
            XmPushButton        m_options_control_button;
            };
        callbacks {
            MrmNcreateCallback  = procedure create_proc (k_options_menu);
            XmNhelpCallback     = procedure sens_help_proc(k_options_help);
            };
        };
            
object
    m_options_control_button : XmPushButton {
        arguments {              
            XmNlabelString      = 'Background Color...'; 
            XmNsensitive        = false; 
	    XmNmnemonic         = keysym("C");  
            };     
        callbacks {
            MrmNcreateCallback  = procedure create_proc (k_create_options);
            XmNactivateCallback = procedure activate_proc (k_create_options); 
            XmNhelpCallback     = procedure sens_help_proc(k_options_help);
            };                        
        };                 

                   
end module;
! end /home/pss060/sls/flechsig/phase/src/gui/phase.uil