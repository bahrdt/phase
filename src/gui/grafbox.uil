! File      : /home/vms/flechsig/vms/phas/phaseuil/grafbox.uil
! Date      : <11 Apr 97 14:15:22 flechsig> 
! Time-stamp: <14 Nov 97 13:39:14 flechsig> 
! Author    : Uwe Flechsig, flechsig@exp.bessy.de

! Datei: USERDISK_3:[FLECHSIG.PHASE.PHASEUIL]GRAFBOX.UIL
! Datum: 19.JUL.1994
! Stand:  27-FEB-1997
! Autor: FLECHSIG, BESSY Berlin


/************************* Definition der grafik Box  ********************/

object
    CGrafBox  : XmFormDialog {                   
        arguments {
            XmNdialogTitle      = "Graphic Box";
            XmNdialogStyle      = XmDIALOG_MODELESS;
            XmNnoResize         = true;
            XmNdefaultPosition  = false;
            XmNx                = 250;
            XmNy                = 350;
            XmNautoUnmanage     = false;
            XmNallowOverlap     = false;
            XmNdefaultButton    = XmPushButton CGrOK;
            XmNcancelButton     = XmPushButton CGrCancel;
            XmNhorizontalSpacing = 10;
            XmNverticalSpacing  = 20;
            XmNnavigationType   = XmEXCLUSIVE_TAB_GROUP;
            };
            controls {
            XmForm              CGrInputForm;
            XmSeparator         CGrSeparator; 
            XmPushButton        CGrOK;
            XmPushButton        CGrApply;
            XmPushButton        CGrDefault;
            XmPushButton        CGrCancel;    
            XmSeparator         CGrSeparator1; 
            };          
        callbacks { MrmNcreateCallback = procedure create_proc(kCGrBox);};
        };   

object
    CGrInputForm : XmForm {
        arguments {
            XmNshadowType       = XmSHADOW_IN;
            XmNshadowThickness  = 3;
            XmNtopAttachment    = XmATTACH_FORM;
            XmNtopOffset        = 10;      
            XmNleftAttachment   = XmATTACH_FORM;    
            XmNrightAttachment  = XmATTACH_FORM;    
            XmNrightOffset      = 10; 
            XmNallowOverlap     = false;
            XmNnavigationType   = XmEXCLUSIVE_TAB_GROUP;
            XmNforeground       = color('white');   
            XmNbackground       = color('blue');      
                         };
        controls {
            XmRowColumn         CGrRC;
            XmText              CGrT5;
            XmLabel             CGrT5Label;
            XmToggleButton      CGrPSFile;    
            XmPushButton        CGrPSFilenameButton;  
            XmSeparator         CGrSep11;   
            XmSeparator         CGrSep12; 
	    XmSeparator         CGrSep13; 
            XmOptionMenu        CGrOptMenu;    
            XmOptionMenu        CGrOptMenu1;   
                       	};
        };

object
    CGrSep11 : XmSeparator  widget {
        arguments {
            XmNtopAttachment    = XmATTACH_WIDGET;      
            XmNleftAttachment   = XmATTACH_FORM;    
            XmNrightAttachment  = XmATTACH_FORM;    
	    XmNtopWidget        = XmText  CGrT5;
            XmNtopOffset        = 3; 
	    XmNseparatorType    = XmSHADOW_ETCHED_IN;  
            XmNorientation      = XmHORIZONTAL;
            !XmNshadowThickness	= 8;      
	};      
        };  


object
    CGrSep12 : XmSeparator widget {
        arguments {
            XmNtopAttachment    = XmATTACH_WIDGET;      
            XmNleftAttachment   = XmATTACH_FORM;    
            XmNrightAttachment  = XmATTACH_FORM;  
	    XmNtopWidget        = XmRowColumn CGrRC;  
            XmNseparatorType    = XmSHADOW_ETCHED_IN;
            !XmNshadowThickness	= 8;      

	};      
        }; 
     
object
    CGrSep13 : XmSeparator  widget {
        arguments {
            XmNtopAttachment    = XmATTACH_WIDGET;      
            XmNbottomAttachment = XmATTACH_WIDGET;   
            XmNleftAttachment   = XmATTACH_WIDGET;  
	    XmNtopWidget        = XmSeparator  CGrSep11; 
            XmNbottomWidget     = XmSeparator  CGrSep12; 
	    XmNleftOffset       = 10; 
            XmNleftWidget 	= XmRowColumn CGrRC;  
	    XmNseparatorType    = XmSHADOW_ETCHED_IN;  
            XmNorientation      = XmVERTICAL;
            !XmNshadowThickness	= 8;      
	};      
        };  

object
    CGrOptMenu : XmOptionMenu {
        arguments {  
            XmNbackground       = color('blue'); 
            XmNforeground       = color('white');
	   !XmNlabelString      = "Optmenu";
            XmNmenuHistory      = XmPushButton CGr3Button;
            XmNtopAttachment    = XmATTACH_WIDGET; 
            XmNtopWidget        = XmSeparator  CGrSep11; 
            XmNtopOffset        = 4;
            XmNrightAttachment  = XmATTACH_FORM;
            XmNrightOffset      = 6;
            XmNnavigationType   = XmEXCLUSIVE_TAB_GROUP;
            };
        controls {                                                             
            XmPulldownMenu        CGrOptPdme;
            };
        callbacks {                                                   
            MrmNcreateCallback  = procedure create_proc (kCGrOptMenu); 
            }; 

       };

object
     CGrOptPdme : XmPulldownMenu widget {
     arguments {  
               ! XmNforeground       = color('blue'); 
               ! XmNbackground       = color('white');   
               };      
	controls {
            XmPushButton        CGr3Button;     
            XmPushButton        CGrDivButton;     
            XmPushButton        CGrPhiButton;   
            XmPushButton        CGrScatterButton;  
	    XmPushButton        CGrhorButton;     
            XmPushButton        CGrvertButton;     
            XmPushButton        CGrBoxButton;     
	    XmPushButton        CGrArrowButton;  
            XmPushButton        CGrCharButton;     
	    XmPushButton        CGrTextButton;     
            XmPushButton        CGrContButton;     
            XmPushButton        CGrColButton;    
	    XmPushButton        CGrLegoButton; 
            XmPushButton        CGrLego1Button; 
            XmPushButton        CGrLego2Button; 
	    XmPushButton        CGrSurfButton;
            XmPushButton        CGrSurf1Button;     
            XmPushButton        CGrSurf2Button; 
            XmPushButton        CGrSurf3Button;     
            XmPushButton        CGrSurf4Button;     
                                   };
        };

object
    CGrOptMenu1 : XmOptionMenu {
        arguments {  
            XmNbackground       = color('blue'); 
            XmNforeground       = color('white');
	   !XmNlabelString      = "Optmenu";
            XmNmenuHistory       = XmPushButton CGRTakeResult;
            XmNtopAttachment    = XmATTACH_WIDGET; 
            XmNtopWidget        = XmOptionMenu  CGrOptMenu; 
            XmNtopOffset        = -2;
            XmNrightAttachment  = XmATTACH_FORM;
            XmNrightOffset      = 6;
            XmNnavigationType   = XmEXCLUSIVE_TAB_GROUP;
            };
        controls {                                                             
            XmPulldownMenu        CGrOptPdme1;
            };
        callbacks {                                                   
            MrmNcreateCallback  = procedure create_proc (kCGrOptMenu1); 
            }; 
};

object
CGrOptPdme1 : XmPulldownMenu widget {
  arguments {  
    ! XmNforeground       = color('blue'); 
    ! XmNbackground       = color('white');   
  };      
  controls {
    XmPushButton   CGRTakeFile; 
    XmPushButton   CGRTakeSource; 
    XmPushButton   CGRTakeResult;
    XmPushButton   CGRfd1phmax;
    XmPushButton   CGRinumb; 
    XmPushButton   CGRS1;
    XmPushButton   CGRS2; 
    XmPushButton   CGRS3; 
    XmPushButton   CGRyreal; 
    XmPushButton   CGRzreal;
    XmPushButton   CGRyimag; 
    XmPushButton   CGRzimag;
    XmPushButton   CGRsimpreal; 
    XmPushButton   CGRsimpimag;
    XmPushButton   CGRsintreal; 
    XmPushButton   CGRsintimag;
    XmPushButton   CGRsimpampl; 
    XmPushButton   CGRsimpphas;
    XmPushButton   CGRd12;
  };
};


object
    CGrScatterButton : XmPushButton {
        arguments {
            XmNlabelString      = "SCATer plot";
                  };
              };            

object
    CGrBoxButton : XmPushButton {
        arguments {
            XmNlabelString      = "BOX plot";
                  };
              };   

object
    CGrArrowButton : XmPushButton {
        arguments {
            XmNlabelString      = "ARRow plot";
                  };
              };   

object
    CGrCharButton : XmPushButton {
        arguments {
            XmNlabelString      = "CHAR plot";
                  };
              };   

object
    CGrTextButton : XmPushButton {
        arguments {
            XmNlabelString      = "TEXT plot";
                  };
                };   

object
    CGrLegoButton : XmPushButton {
        arguments {
            XmNlabelString      = "LEGO plot";
                  };
              };   

object
    CGrLego1Button : XmPushButton {
        arguments {
            XmNlabelString      = "LEGO1 plot";
                  };
                };   

object
    CGrLego2Button : XmPushButton {
        arguments {
            XmNlabelString      = "LEGO2 plot";
                  };
                };   

object
    CGrSurfButton : XmPushButton {
        arguments {
            XmNlabelString      = "SURFace plot";
                  };
                };            

object
    CGrSurf1Button : XmPushButton {
        arguments {
            XmNlabelString      = "SURF1 plot";
                  };
                };            

object
    CGrSurf2Button : XmPushButton {
        arguments {
            XmNlabelString      = "SURF2 plot";
                  };
                };            

object
    CGrSurf3Button : XmPushButton {
        arguments {
            XmNlabelString      = "SURF3 plot";
                  };
                }; 

object
    CGrSurf4Button : XmPushButton {
        arguments {
            XmNlabelString      = "SURF4 plot";
                  };
                };  

object
    CGrContButton : XmPushButton {
        arguments {
            XmNlabelString      = "CONTour plot";
                  };
                };   

object
    CGrColButton : XmPushButton {
        arguments {
            XmNlabelString      = "COLour plot";
                  };
                };      

object
    CGrhorButton : XmPushButton {
        arguments {
            XmNlabelString      = "horizontal profile";
                  };
                };      

object
    CGrvertButton : XmPushButton {
        arguments {
            XmNlabelString      = "vertical profile";
                  };
                };      

object
    CGr3Button : XmPushButton {
        arguments {
            XmNlabelString      = "footprint";
                  };
                };    

object
    CGrDivButton : XmPushButton {
        arguments {
            XmNlabelString      = "divergency";
                  };
                };      

object
    CGrPhiButton : XmPushButton {
        arguments {
            XmNlabelString      = "resolution";
                  };
        
        };      

object 
    CGRTakeFile : XmPushButton {
        arguments {
            XmNlabelString      = "Data from file";
            		};
            };       
                                       
object 
    CGRTakeSource : XmPushButton {
        arguments {
            XmNlabelString      = "Source";
            		};
            };    

object 
    CGRTakeResult : XmPushButton {
        arguments {
            XmNlabelString      = "Result";
            		};
            };      

object 
    CGRfd1phmax : XmPushButton {
        arguments {
            XmNlabelString      = "fd1phmax";
            		};
            };      

object 
    CGRinumb : XmPushButton {
        arguments {
            XmNlabelString      = "inumb";
            		};
            };      

object 
CGRS1 : XmPushButton {
  arguments {
    XmNlabelString      = "Stokes P. S1";
  };
};   

object 
CGRS2 : XmPushButton {
  arguments {
    XmNlabelString      = "Stokes P. S2";
  };
};      

object 
CGRS3 : XmPushButton {
  arguments {
    XmNlabelString      = "Stokes P. S3";
  };
};   

object 
CGRyreal : XmPushButton {
  arguments {
    XmNlabelString      = "Ey real";
  };
};   

object 
CGRzreal : XmPushButton {
  arguments {
    XmNlabelString      = "Ez real";
  };
};   

object 
CGRyimag : XmPushButton {
  arguments {
    XmNlabelString      = "Ey imag.";
  };
};   

object 
CGRzimag : XmPushButton {
  arguments {
    XmNlabelString      = "Ez imag.";
  };
};   

object 
CGRsimpreal : XmPushButton {
  arguments {
    XmNlabelString      = "simp real";
  };
};   

object 
CGRsimpimag : XmPushButton {
  arguments {
    XmNlabelString      = "simp imag.";
  };
};   

object 
CGRsintreal : XmPushButton {
  arguments {
    XmNlabelString      = "sint real";
  };
};   

object 
CGRsintimag : XmPushButton {
  arguments {
    XmNlabelString      = "sint imag.";
  };
};   

object 
CGRsimpampl : XmPushButton {
  arguments {
    XmNlabelString      = "simp ampl.";
  };
};   

object 
CGRsimpphas : XmPushButton {
  arguments {
    XmNlabelString      = "simp phase";
  };
};   

object 
CGRd12 : XmPushButton {
  arguments {
    XmNlabelString      = "d12";
  };
};   

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
object
    CGrRC : XmRowColumn {
        arguments {
            XmNtopAttachment    = XmATTACH_WIDGET;      
            XmNtopWidget        = XmSeparator CGrSep11;
            XmNtopOffset        = 5;      
	    XmNnumColumns	= 3;
            XmNpacking		= XmPACK_COLUMN;
            XmNorientation      = XmVERTICAL;  
            XmNbackground       = color('blue');   
            XmNforeground       = color('white');   
	    XmNleftAttachment   = XmATTACH_FORM;    
            XmNleftOffset       = 10; 
         }; 
        controls {
            XmText              CGrT1; 
	    XmText              CGrT3;   
	    XmLabel             CGrT2Label;   
            XmLabel             CGrT4Label;  
	    XmText              CGrT2;  
	    XmText              CGrT4;        
          };
        };      
  
!******************************* Texte ****************************
object  
    CGrT1 : XmText  {
        arguments  {
             XmNcolumns          = 10;
             XmNrows             = 1;
             XmNmaxLength        = 10;
             XmNvalue            = "";
                               };
        callbacks  {
            MrmNcreateCallback  = procedure create_proc (kCGrT1);
                   };        
    };

object
    CGrT2Label : XmLabel  {          
        arguments {
            XmNlabelString      =  " < z [mm] < "; 
                  };     
	callbacks {
            MrmNcreateCallback  = procedure create_proc (kCGrT2Label);
        };        
    };

object  
    CGrT2 : XmText {
        arguments {
             XmNcolumns          = 10;
             XmNrows             = 1;
             XmNmaxLength        = 10;
             XmNvalue            = "";    
   };
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kCGrT2);
        };
    };

object  
    CGrT3 : XmText {
        arguments {
             XmNcolumns          = 10;
             XmNrows             = 1;
             XmNmaxLength        = 10;
             XmNvalue            = "";  
                                };
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kCGrT3);  };
    };

object
    CGrT4Label : XmLabel {          
        arguments {
              XmNlabelString      =  " < y [mm] < "; 
         };
          callbacks {
              MrmNcreateCallback  = procedure create_proc (kCGrT4Label);  };
        };

object  
    CGrT4 : XmText {
        arguments {
             XmNcolumns          = 10;
             XmNrows             = 1;
             XmNmaxLength        = 10;
             XmNvalue            = "";  
	    };
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kCGrT4); };
    };

object  
    CGrT5 : XmText {
        arguments {
            XmNcolumns          = 50;
            XmNrows             = 1;
            XmNmaxLength        = 50;
            XmNvalue            = "PHASE- graphic output";  
	    XmNtopAttachment    = XmATTACH_FORM;     
            XmNtopOffset        = 4;
            XmNrightAttachment  = XmATTACH_FORM;  
            XmNrightOffset      = 4;  
            XmNleftAttachment   = XmATTACH_WIDGET;  
	    XmNleftWidget       = XmLabel CGrT5Label;
  };
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kCGrT5);  };
    };

object
    CGrT5Label : XmLabel {          
        arguments { 
	     XmNtopAttachment    = XmATTACH_FORM;     
             XmNlabelString      = "header: ";
             XmNtopOffset        = 7;
             XmNleftAttachment   = XmATTACH_FORM;
             XmNleftOffset       = 4;
	          
	 }; 
};        

object
    CGrPSFile : XmToggleButton {
        arguments {
            XmNlabelString      = "create PS- File";
            XmNtopAttachment    = XmATTACH_WIDGET; 
	    XmNtopWidget        = XmSeparator CGrSep12; 
            XmNtopOffset        = 10; 
            XmNleftAttachment   = XmATTACH_FORM; 
            XmNleftOffset       = 10;  
            XmNselectColor	= gold;
 		};
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kCGrPSFile);  };
    };       

object
    CGrPSFilenameButton : XmPushButton  widget {
        arguments {
            XmNlabelString      = "Name";
            XmNtopWidget        = XmSeparator CGrSep12; 
            XmNtopAttachment    = XmATTACH_WIDGET;
            XmNtopOffset        = 5;  
            XmNbottomAttachment = XmATTACH_FORM;   
            XmNrightAttachment  = XmATTACH_FORM;
            XmNrightOffset      = 5; 
	    XmNbottomOffset     = 8;  
};
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kCGrPSFileButton);
            XmNactivateCallback = procedure activate_proc (kCGrPSFileButton); };
    };           


object
    CGrSeparator : XmSeparator {
        arguments {
            arguments             ESSeparatorArgs;      
            XmNtopWidget        = XmForm CGrInputForm;     };      
        };             

object
    CGrSeparator1 : XmSeparator {
        arguments {
            arguments             ESSeparatorArgs;      
            XmNtopWidget        = XmPushButton CGrOK;      };      
        };             
                   
object
    CGrOK : XmPushButton widget {
        arguments {
            arguments		  ESButtonArgs;    
	    XmNlabelString      = "OK";
            XmNtopWidget        = XmSeparator CGrSeparator;
            XmNleftAttachment   = XmATTACH_POSITION; 
            XmNleftPosition     = 10;   };
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kCGrOK);
            XmNactivateCallback = procedure activate_proc (kCGrOK);  };
    }; 

object
    CGrApply : XmPushButton widget {
        arguments {
            arguments		  ESButtonArgs;    
            XmNlabelString      = "Apply";
            XmNtopWidget        = XmSeparator CGrSeparator;
            XmNleftAttachment   = XmATTACH_WIDGET;
            XmNleftWidget       = XmPushButton CGrOK;
            XmNleftOffset       = 20;   
            };
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kCGrApply);
            XmNactivateCallback = procedure activate_proc (kCGrApply);
        };
    };              

object
    CGrDefault : XmPushButton widget {
        arguments {
            arguments		  ESButtonArgs;      
   	    XmNlabelString      = "Defaults";
            XmNtopWidget        = XmSeparator CGrSeparator;
            XmNleftAttachment   = XmATTACH_WIDGET;
            XmNleftWidget       = XmPushButton CGrApply;
            XmNleftOffset       = 20;   
            XmNrightAttachment  = XmATTACH_WIDGET;
            XmNrightWidget      = XmPushButton CGrCancel;
            XmNrightOffset      = 20;  };
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kCGrDefaults);
            XmNactivateCallback = procedure activate_proc (kCGrDefaults);
        };
    };              

object
    CGrCancel : XmPushButton widget {
        arguments {
            arguments		  ESButtonArgs;      
	    XmNlabelString      = "Cancel";
            XmNtopWidget        = XmSeparator CGrSeparator;
            XmNrightAttachment  = XmATTACH_POSITION;
            XmNrightPosition    = 90;  };
        callbacks {
            MrmNcreateCallback  = procedure create_proc (kCGrCancel);
            XmNactivateCallback = procedure activate_proc (kCGrCancel);  };
    };           

! end grafbox.uil