C$TEST NSNM                                                             NSNM0000
C***********************************************************************NSNM0020
C                                                                       NSNM0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SMNSX                             NSNM0060
C                                                                       NSNM0080
C***********************************************************************NSNM0100
C *** SMNSX EXAMPLE PROGRAM ***                                         NSNM0120
C                                                                       NSNM0140
C *** MINIMIZE F(X) = 0.1*S(X)**4 + SUM(I = 1(1)3) (I * (X(I) - 10)**2),NSNM0160
C *** WHERE S(X) = SUM(I = 1(1)3) X(I),                                 NSNM0180
C *** STARTING FROM     X = (2, 30, 9).                                 NSNM0200
C                                                                       NSNM0220
      INTEGER I, J, IWRITE, P                                           NSNM0240
      REAL FX, S(3,4), STEP, TOL, X(3)                                  NSNM0260
      EXTERNAL I1MACH, MNSX, QF, SMNSX                                  NSNM0280
      INTEGER I1MACH                                                    NSNM0300
      REAL MNSX, SMNSX                                                  NSNM0320
C                                                                       NSNM0340
C *** USE COMMON TO FIND NUMBER OF TIMES F(X) IS EVALUATED...           NSNM0360
C                                                                       NSNM0380
      INTEGER NF                                                        NSNM0400
      COMMON /SXCOMN/ NF                                                NSNM0420
C                                                                       NSNM0440
      DATA P/3/                                                         NSNM0460
C                                                                       NSNM0480
C  ***  BODY  ***                                                       NSNM0500
C                                                                       NSNM0520
C                                                                       NSNM0540
C *** FIRST SOLVE THE PROBLEM USING SMNSX...                            NSNM0560
C                                                                       NSNM0580
      X(1) = 2.E0                                                       NSNM0600
      X(2) = 3.E1                                                       NSNM0620
      X(3) = 9.E0                                                       NSNM0640
C                                                                       NSNM0660
      NF = 0                                                            NSNM0680
C     *** STEP AND TOL ARE USED AS BOTH INPUT AND OUTPUT PARAMETERS,    NSNM0700
C     *** SO WE MUST NOT PASS CONSTANTS FOR THEM.                       NSNM0720
      STEP = 1.E0                                                       NSNM0740
      TOL = 1.E-10                                                      NSNM0760
C                                                                       NSNM0780
      FX = SMNSX(QF, P, STEP, TOL, X)                                   NSNM0800
C                                                                       NSNM0820
C *** PRINT OUT THE SOLUTION (ON THE STANDARD OUTPUT UNIT) ***          NSNM0840
C                                                                       NSNM0860
      IWRITE = I1MACH(2)                                                NSNM0880
      WRITE(IWRITE,10) FX, TOL, STEP, X, NF                             NSNM0900
 10   FORMAT(21H SMNSX RETURNS F(X) =, E13.6,7H, TOL =, E10.3/          NSNM0920
     1       11H AND STEP =, E10.3/7H AT X =, 3E14.6/6H AFTER, I5,      NSNM0940
     2       21H FUNCTION EVALUATIONS)                                  NSNM0960
C                                                                       NSNM0980
C *** SOLVE THE PROBLEM AGAIN, THIS TIME USING MNSX...                  NSNM1000
C                                                                       NSNM1020
      X(1) = 2.0E0                                                      NSNM1040
      X(2) = 30.0E0                                                     NSNM1060
      X(3) = 9.0E0                                                      NSNM1080
C                                                                       NSNM1100
C                                                                       NSNM1120
C *** CREATE INITIAL SIMPLEX...                                         NSNM1140
C                                                                       NSNM1160
      DO 30 J = 1, 4                                                    NSNM1180
         DO 20 I = 1, 3                                                 NSNM1200
            S(I,J) = X(I) - 0.5E0                                       NSNM1220
 20         CONTINUE                                                    NSNM1240
         IF (J .LE. 3) S(J,J) = X(J) + 0.5E0                            NSNM1260
 30      CONTINUE                                                       NSNM1280
C                                                                       NSNM1300
      NF = 0                                                            NSNM1320
      TOL = 1.E-10                                                      NSNM1340
C                                                                       NSNM1360
      FX = MNSX(QF, 1000, P, P, S, TOL, X)                              NSNM1380
C                                                                       NSNM1400
C *** PRINT OUT THE SOLUTION ***                                        NSNM1420
C                                                                       NSNM1440
      WRITE(IWRITE,40) FX, TOL, X, NF                                   NSNM1460
 40   FORMAT(/20H MNSX RETURNS F(X) =, E13.6,10H AND TOL =, E10.3/      NSNM1480
     1       7H AT X =,3E14.6/6H AFTER, I5, 21H FUNCTION EVALUATIONS)   NSNM1500
 999  STOP                                                              NSNM1520
      END                                                               NSNM1540
      REAL FUNCTION QF(P, X)                                            QF  0000
C                                                                       QF  0020
C *** THIS ROUTINE COMPUTES THE OBJECTIVE FUNCTION, F(X)                QF  0040
C                                                                       QF  0060
      INTEGER P                                                         QF  0080
      REAL X(P)                                                         QF  0100
C                                                                       QF  0120
      INTEGER NF                                                        QF  0140
      COMMON /SXCOMN/ NF                                                QF  0160
C                                                                       QF  0180
      INTEGER I                                                         QF  0200
      REAL PT1, TEN, ZERO                                               QF  0220
C                                                                       QF  0240
      DATA PT1 /0.1E0/, TEN/1.E1/, ZERO/0.E0/                           QF  0260
C                                                                       QF  0280
C                                                                       QF  0300
      NF = NF + 1                                                       QF  0320
      QF = ZERO                                                         QF  0340
      DO 10 I = 1, P                                                    QF  0360
 10      QF = QF + X(I)                                                 QF  0380
      QF = PT1 * QF**4                                                  QF  0400
      DO 20 I = 1, P                                                    QF  0420
 20      QF = QF + I*(X(I) - TEN)**2                                    QF  0440
 999  RETURN                                                            QF  0460
      END                                                               QF  0480
C$TEST NSFA                                                             NSFA0000
C***********************************************************************NSFA0020
C                                                                       NSFA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM NSF1                              NSFA0060
C                                                                       NSFA0080
C***********************************************************************NSFA0100
C  EXAMPLE PROGRAM FOR NSF1 TO FIT                                      NSFA0120
C  N DATA POINTS (T,Y) TO CURVE                                         NSFA0140
C  C(1)*EXP(T*X)  +  C(2)                                               NSFA0160
C                                                                       NSFA0180
       INTEGER IWRITE                                                   NSFA0200
       REAL C(2), T(8), Y(8), TT(8), YY(8)                              NSFA0220
       DOUBLE PRECISION S                                               NSFA0240
       EXTERNAL GETAY                                                   NSFA0260
       COMMON /DATBLK/TT,YY                                             NSFA0280
       DATA T(1) /12.0/, T(2) /20.0/ ,T(3) /28.0/, T(4) /48.0/,         NSFA0300
     1 T(5)/120.0/, T(6) /240.0/, T(7) /900.0/, T(8) /2400.0/           NSFA0320
       DATA Y(1) /0.2342/, Y(2) /0.2244/ , Y(3) /0.2204/,               NSFA0340
     1 Y(4) /0.2149/, Y(5) /0.2063/, Y(6) /0.1983/,                     NSFA0360
     2 Y(7) /0.1842/, Y(8)/0.1761/                                      NSFA0380
C                                                                       NSFA0400
C  SET UP OUTPUT UNIT                                                   NSFA0420
C                                                                       NSFA0440
       IWRITE = I1MACH(2)                                               NSFA0460
C                                                                       NSFA0480
C  MOVE T AND Y VECTORS TO COMMON                                       NSFA0500
C                                                                       NSFA0520
       DO 2 I=1,8                                                       NSFA0540
         TT(I) = T(I)                                                   NSFA0560
         YY(I) = Y(I)                                                   NSFA0580
  2    CONTINUE                                                         NSFA0600
C                                                                       NSFA0620
        N = 8                                                           NSFA0640
        L =  2                                                          NSFA0660
       X1 = -10.0                                                       NSFA0680
       X2 =   0.001                                                     NSFA0700
C                                                                       NSFA0720
C  DO THE FIT                                                           NSFA0740
C                                                                       NSFA0760
       CALL NSF1(N, L, X, X1, X2, 1.E-6, C)                             NSFA0780
       WRITE(IWRITE, 4) X, C(1), C(2)                                   NSFA0800
  4      FORMAT(5H X = , E20.10/8H C(1) = ,E20.10/8H C(2) = , E20.10)   NSFA0820
C                                                                       NSFA0840
       WRITE(IWRITE, 5)                                                 NSFA0860
  5      FORMAT(//,19X,1HT,14X,6HREAL Y,14X,5HEST.Y,15X,5HERROR,/)      NSFA0880
       DO 100 I=1,N                                                     NSFA0900
         YEST = C(1)*EXP(T(I)*X)+C(2)                                   NSFA0920
         YERR = ABS(Y(I)-YEST)                                          NSFA0940
         WRITE(IWRITE, 6) T(I), Y(I), YEST, YERR                        NSFA0960
 100     S = S + YERR*YERR                                              NSFA0980
   6     FORMAT (4E20.10)                                               NSFA1000
       WRITE(IWRITE, 7) S                                               NSFA1020
   7     FORMAT(//,24HSUM OF ERRORS SQUARED = ,D20.10)                  NSFA1040
       STOP                                                             NSFA1060
       END                                                              NSFA1080
       SUBROUTINE GETAY(N,L,X,A,Y)                                      GETA0000
       INTEGER N,L                                                      GETA0020
       REAL A(N,L),X,Y(N)                                               GETA0040
       REAL T(8),YY(8)                                                  GETA0060
       COMMON /DATBLK/T,YY                                              GETA0080
       DO 100 I=1,N                                                     GETA0100
          A(I,1)=EXP(X*T(I))                                            GETA0120
          A(I,2)=1.0                                                    GETA0140
          Y(I)=YY(I)                                                    GETA0160
 100   CONTINUE                                                         GETA0180
       RETURN                                                           GETA0200
       END                                                              GETA0220
C$TEST NP2A                                                             NP2A0000
C***********************************************************************NP2A0020
C                                                                       NP2A0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SN2F                              NP2A0060
C                                                                       NP2A0080
C***********************************************************************NP2A0100
        INTEGER N,P                                                     NP2A0120
        EXTERNAL OSBN                                                   NP2A0140
        REAL Y(10),T(10),YY(10),X(5)                                    NP2A0160
        COMMON /YT/YY,T                                                 NP2A0180
C GENERATE DATA FOR PROBLEM                                             NP2A0200
        DATA Y(1)/8.44E-1/, Y(2) /9.36E-1/, Y(3) /8.81E-1/              NP2A0220
     1  Y(4)/7.84E-1/, Y(5)/ 6.85E-1/, Y(6)/6.03E-1/,                   NP2A0240
     2  Y(7) /5.38E-1/ , Y(8) /4.90E-1/, Y(9)/4.57E-1/                  NP2A0260
        P=5                                                             NP2A0280
        N=9                                                             NP2A0300
        DO 10 I=1,9                                                     NP2A0320
           YY(I) = Y(I)                                                 NP2A0340
           T(I)=-30.E0*FLOAT(I-1)                                       NP2A0360
 10     CONTINUE                                                        NP2A0380
C INITIALIZE X                                                          NP2A0400
        X(1)=0.5                                                        NP2A0420
        X(2)=1.5                                                        NP2A0440
        X(3)=-1.                                                        NP2A0460
        X(4)=.01                                                        NP2A0480
        X(5)=.02                                                        NP2A0500
C                                                                       NP2A0520
C SOLVE THE PROBLEM                                                     NP2A0540
C                                                                       NP2A0560
        CALL SN2F(N, P, X, OSBN, 100, 1.E-4)                            NP2A0580
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NP2A0600
        IWRITE = I1MACH(2)                                              NP2A0620
        WRITE(IWRITE, 20)(X(I),I=1,P)                                   NP2A0640
 20     FORMAT(10H SOLUTION-,5E15.5)                                    NP2A0660
        STOP                                                            NP2A0680
        END                                                             NP2A0700
        SUBROUTINE OSBN(N,P,X,NF,R)                                     OSBN0000
C THIS SUBROUTINE COMPUTES THE MODEL                                    OSBN0020
        INTEGER P, N, NF                                                OSBN0040
        REAL X(P), R(N)                                                 OSBN0060
        REAL Y(10), T(10)                                               OSBN0080
        COMMON /YT/ Y, T                                                OSBN0100
        DO 10 I=1,N                                                     OSBN0120
           R(I)=Y(I)-(X(1)+X(2)*EXP(X(4)*T(I))+X(3)*EXP(X(5)*T(I)))     OSBN0140
 10     CONTINUE                                                        OSBN0160
        RETURN                                                          OSBN0180
        END                                                             OSBN0200
C$TEST NP2B                                                             NP2B0000
C***********************************************************************NP2B0020
C                                                                       NP2B0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SN2FB                             NP2B0060
C                                                                       NP2B0080
C***********************************************************************NP2B0100
        INTEGER N,P                                                     NP2B0120
        EXTERNAL OSBN                                                   NP2B0140
        REAL Y(10),YY(10),T(10),X(5),B(2,5)                             NP2B0160
        COMMON /YT/YY,T                                                 NP2B0180
C GENERATE DATA FOR PROBLEM                                             NP2B0200
        DATA Y(1)/8.44E-1/, Y(2) /9.36E-1/, Y(3) /8.81E-1/              NP2B0220
     1  Y(4)/7.84E-1/, Y(5)/ 6.85E-1/, Y(6)/6.03E-1/,                   NP2B0240
     2  Y(7) /5.38E-1/ , Y(8) /4.90E-1/, Y(9)/4.57E-1/                  NP2B0260
        P=5                                                             NP2B0280
        N=9                                                             NP2B0300
        DO 10 I=1,9                                                     NP2B0320
           YY(I) = Y(I)                                                 NP2B0340
           T(I)=-30.E0*FLOAT(I-1)                                       NP2B0360
 10     CONTINUE                                                        NP2B0380
C INITIALIZE X                                                          NP2B0400
        X(1)=0.5                                                        NP2B0420
        X(2)=1.5                                                        NP2B0440
        X(3)=-1.                                                        NP2B0460
        X(4)=.01                                                        NP2B0480
        X(5)=.03                                                        NP2B0500
C SUPPLY BOUNDS                                                         NP2B0520
C                                                                       NP2B0540
C SET VARIABLES WE DO NOT WANT TO BE BOUNDED TO BIGGEST AND             NP2B0560
C AND SMALLEST NUMBERS IN THE MACHINE                                   NP2B0580
        BIG=R1MACH(2)                                                   NP2B0600
        DO 20 I=1, P                                                    NP2B0620
           B(1,I)=-BIG                                                  NP2B0640
           B(2,I)=BIG                                                   NP2B0660
 20     CONTINUE                                                        NP2B0680
        B(2,4)=0.125                                                    NP2B0700
        B(1,5)=0.03                                                     NP2B0720
C                                                                       NP2B0740
C SOLVE THE PROBLEM                                                     NP2B0760
C                                                                       NP2B0780
        CALL SN2FB(N, P, X, B, OSBN, 100, 1.E-4)                        NP2B0800
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NP2B0820
        IWRITE = I1MACH(2)                                              NP2B0840
        WRITE(IWRITE, 30)(X(I),I=1,P)                                   NP2B0860
 30     FORMAT(10H SOLUTION-,5E15.5)                                    NP2B0880
        STOP                                                            NP2B0900
        END                                                             NP2B0920
        SUBROUTINE OSBN(N,P,X,NF,R)                                     OSBN0000
        INTEGER P, N, NF                                                OSBN0020
        REAL X(P), R(N)                                                 OSBN0040
        REAL Y(10), T(10)                                               OSBN0060
        COMMON /YT/ Y, T                                                OSBN0080
        DO 10 I=1,N                                                     OSBN0100
           R(I)=Y(I)-(X(1)+X(2)*EXP(X(4)*T(I))+X(3)*EXP(X(5)*T(I)))     OSBN0120
 10     CONTINUE                                                        OSBN0140
        RETURN                                                          OSBN0160
        END                                                             OSBN0180
C$TEST NP2E                                                             NP2E0000
C***********************************************************************NP2E0020
C                                                                       NP2E0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SN2G                              NP2E0060
C                                                                       NP2E0080
C***********************************************************************NP2E0100
        INTEGER N,P                                                     NP2E0120
        EXTERNAL OSBN, OSBNJ                                            NP2E0140
        REAL Y(10),YY(10),T(10),X(5)                                    NP2E0160
        COMMON /YT/YY,T                                                 NP2E0180
C GENERATE DATA FOR PROBLEM                                             NP2E0200
        DATA Y(1)/8.44E-1/, Y(2) /9.36E-1/, Y(3) /8.81E-1/              NP2E0220
     1  Y(4)/7.84E-1/, Y(5)/ 6.85E-1/, Y(6)/6.03E-1/,                   NP2E0240
     2  Y(7) /5.38E-1/ , Y(8) /4.90E-1/, Y(9)/4.57E-1/                  NP2E0260
        P=5                                                             NP2E0280
        N=9                                                             NP2E0300
        DO 10 I=1,9                                                     NP2E0320
           YY(I) = Y(I)                                                 NP2E0340
           T(I)=-30.E0*FLOAT(I-1)                                       NP2E0360
 10     CONTINUE                                                        NP2E0380
C INITIALIZE X                                                          NP2E0400
        X(1)=0.5                                                        NP2E0420
        X(2)=1.5                                                        NP2E0440
        X(3)=-1.                                                        NP2E0460
        X(4)=.01                                                        NP2E0480
        X(5)=.02                                                        NP2E0500
C                                                                       NP2E0520
C SOLVE THE PROBLEM                                                     NP2E0540
C                                                                       NP2E0560
        CALL SN2G(N, P, X, OSBN, OSBNJ, 100, 1.E-4)                     NP2E0580
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NP2E0600
        IWRITE = I1MACH(2)                                              NP2E0620
        WRITE(IWRITE, 20)(X(I),I=1,P)                                   NP2E0640
 20     FORMAT(10H SOLUTION-,5E15.5)                                    NP2E0660
        STOP                                                            NP2E0680
        END                                                             NP2E0700
        SUBROUTINE OSBN(N,P,X,NF,R)                                     OSBN0000
C THIS SUBROUTINE COMPUTES THE MODEL                                    OSBN0020
        INTEGER P, N, NF                                                OSBN0040
        REAL X(P), R(N)                                                 OSBN0060
        REAL Y(10), T(10)                                               OSBN0080
        COMMON /YT/ Y, T                                                OSBN0100
        DO 10 I=1,N                                                     OSBN0120
           R(I)=Y(I)-(X(1)+X(2)*EXP(X(4)*T(I))+X(3)*EXP(X(5)*T(I)))     OSBN0140
 10     CONTINUE                                                        OSBN0160
        RETURN                                                          OSBN0180
        END                                                             OSBN0200
        SUBROUTINE OSBNJ(N,P,X,NF,J)                                    OSBN0000
C THIS SUBROUTINE COMPUTES THE JACOBIAN OF THE MODEL                    OSBN0020
        INTEGER P, N, NF                                                OSBN0040
        REAL X(P), J(N,P)                                               OSBN0060
        REAL Y(10), T(10)                                               OSBN0080
        COMMON /YT/ Y, T                                                OSBN0100
        DO 10 I=1,N                                                     OSBN0120
           J(I,1)=-1.0E0                                                OSBN0140
           J(I,2)=-EXP(X(4)*T(I))                                       OSBN0160
           J(I,3)=-EXP(X(5)*T(I))                                       OSBN0180
           J(I,4)=-T(I)*X(2)*EXP(X(4)*T(I))                             OSBN0200
           J(I,5)=-T(I)*X(3)*EXP(X(5)*T(I))                             OSBN0220
 10     CONTINUE                                                        OSBN0240
        RETURN                                                          OSBN0260
        END                                                             OSBN0280
C$TEST NP2F                                                             NP2F0000
C***********************************************************************NP2F0020
C                                                                       NP2F0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SN2GB                             NP2F0060
C                                                                       NP2F0080
C***********************************************************************NP2F0100
        INTEGER N,P                                                     NP2F0120
        EXTERNAL OSBN,OSBNJ                                             NP2F0140
        REAL Y(10),YY(10),T(10),X(5),B(2,5)                             NP2F0160
        COMMON /YT/YY,T                                                 NP2F0180
C GENERATE DATA FOR PROBLEM                                             NP2F0200
        DATA Y(1)/8.44E-1/, Y(2) /9.36E-1/, Y(3) /8.81E-1/              NP2F0220
     1  Y(4)/7.84E-1/, Y(5)/ 6.85E-1/, Y(6)/6.03E-1/,                   NP2F0240
     2  Y(7) /5.38E-1/ , Y(8) /4.90E-1/, Y(9)/4.57E-1/                  NP2F0260
        P=5                                                             NP2F0280
        N=9                                                             NP2F0300
        DO 10 I=1,9                                                     NP2F0320
           YY(I) = Y(I)                                                 NP2F0340
           T(I)=-30.E0*FLOAT(I-1)                                       NP2F0360
 10     CONTINUE                                                        NP2F0380
C INITIALIZE X                                                          NP2F0400
        X(1)=0.5                                                        NP2F0420
        X(2)=1.5                                                        NP2F0440
        X(3)=-1.                                                        NP2F0460
        X(4)=.01                                                        NP2F0480
        X(5)=.03                                                        NP2F0500
C SUPPLY BOUNDS                                                         NP2F0520
C                                                                       NP2F0540
C SET VARIABLES WE DO NOT WANT TO BE BOUNDED TO BIGGEST AND             NP2F0560
C AND SMALLEST NUMBERS IN THE MACHINE                                   NP2F0580
        BIG=R1MACH(2)                                                   NP2F0600
        DO 20 I=1, P                                                    NP2F0620
           B(1,I)=-BIG                                                  NP2F0640
           B(2,I)=BIG                                                   NP2F0660
 20     CONTINUE                                                        NP2F0680
        B(2,4)=0.125                                                    NP2F0700
        B(1,5)=0.03                                                     NP2F0720
C                                                                       NP2F0740
C SOLVE THE PROBLEM                                                     NP2F0760
C                                                                       NP2F0780
        CALL SN2GB(N, P, X, B, OSBN, OSBNJ, 100, 1.E-4)                 NP2F0800
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NP2F0820
        IWRITE = I1MACH(2)                                              NP2F0840
        WRITE(IWRITE, 30)(X(I),I=1,P)                                   NP2F0860
 30     FORMAT(10H SOLUTION-,5E15.5)                                    NP2F0880
        STOP                                                            NP2F0900
        END                                                             NP2F0920
        SUBROUTINE OSBN(N,P,X,NF,R)                                     OSBN0000
C THIS SUBROUTINE COMPUTES THE MODEL                                    OSBN0020
        INTEGER P, N, NF                                                OSBN0040
        REAL X(P), R(N)                                                 OSBN0060
        REAL Y(10), T(10)                                               OSBN0080
        COMMON /YT/ Y, T                                                OSBN0100
        DO 10 I=1,N                                                     OSBN0120
           R(I)=Y(I)-(X(1)+X(2)*EXP(X(4)*T(I))+X(3)*EXP(X(5)*T(I)))     OSBN0140
 10     CONTINUE                                                        OSBN0160
        RETURN                                                          OSBN0180
        END                                                             OSBN0200
        SUBROUTINE OSBNJ(N,P,X,NF,J)                                    OSBN0000
C THIS SUBROUTINE COMPUTES THE JACOBIAN OF THE MODEL                    OSBN0020
        INTEGER P, N, NF                                                OSBN0040
        REAL X(P), J(N,P)                                               OSBN0060
        REAL Y(10), T(10)                                               OSBN0080
        COMMON /YT/ Y, T                                                OSBN0100
        DO 10 I=1,N                                                     OSBN0120
           J(I,1)=-1.0E0                                                OSBN0140
           J(I,2)=-EXP(X(4)*T(I))                                       OSBN0160
           J(I,3)=-EXP(X(5)*T(I))                                       OSBN0180
           J(I,4)=-T(I)*X(2)*EXP(X(4)*T(I))                             OSBN0200
           J(I,5)=-T(I)*X(3)*EXP(X(5)*T(I))                             OSBN0220
 10     CONTINUE                                                        OSBN0240
        RETURN                                                          OSBN0260
        END                                                             OSBN0280
C$TEST NTLE                                                             NTLE0000
C***********************************************************************NTLE0020
C                                                                       NTLE0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SMNFB                             NTLE0060
C                                                                       NTLE0080
C***********************************************************************NTLE0100
        INTEGER N                                                       NTLE0120
        EXTERNAL ROSN                                                   NTLE0140
        REAL X(2), B(2,2)                                               NTLE0160
        N=2                                                             NTLE0180
C INITIALIZE X                                                          NTLE0200
        X(1)=-1.2                                                       NTLE0220
        X(2)=1.0                                                        NTLE0240
C SET UP THE BOUND ARRAY                                                NTLE0260
C R1MACH(2) CONTAINS THE LARGEST NUMBER IN THE MACHINE                  NTLE0280
        B(1,1)=-R1MACH(2)                                               NTLE0300
        B(2,1)=0.5                                                      NTLE0320
        B(1,2)=0.0                                                      NTLE0340
        B(2,2)=1.0                                                      NTLE0360
C                                                                       NTLE0380
C SOLVE THE PROBLEM                                                     NTLE0400
C                                                                       NTLE0420
        CALL SMNFB(N, X, B, ROSN, 100, 1.E-4)                           NTLE0440
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NTLE0460
        IWRITE=I1MACH(2)                                                NTLE0480
        WRITE(IWRITE,10)(X(I),I=1,N)                                    NTLE0500
 10     FORMAT(10H SOLUTION-,5E15.5)                                    NTLE0520
        STOP                                                            NTLE0540
        END                                                             NTLE0560
        SUBROUTINE ROSN(N,X,NF,F)                                       ROSN0000
C THIS SUBROUTINE COMPUTES THE  FUNCTION                                ROSN0020
        INTEGER N, NF                                                   ROSN0040
        REAL X(N), F                                                    ROSN0060
        F=100.0*(X(2)-X(1)*X(1))**2 + (1.0 - X(1))**2                   ROSN0080
        RETURN                                                          ROSN0100
        END                                                             ROSN0120
C$TEST NTLF                                                             NTLF0000
C***********************************************************************NTLF0020
C                                                                       NTLF0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SMNG                              NTLF0060
C                                                                       NTLF0080
C***********************************************************************NTLF0100
        INTEGER N                                                       NTLF0120
        EXTERNAL ROSN,ROSG                                              NTLF0140
        REAL X(2)                                                       NTLF0160
        N=2                                                             NTLF0180
C INITIALIZE X                                                          NTLF0200
        X(1)=-1.2                                                       NTLF0220
        X(2)=1.0                                                        NTLF0240
C                                                                       NTLF0260
C SOLVE THE PROBLEM                                                     NTLF0280
C                                                                       NTLF0300
        CALL SMNG(N, X, ROSN, ROSG, 100, 1.E-4)                         NTLF0320
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NTLF0340
        IWRITE=I1MACH(2)                                                NTLF0360
        WRITE(IWRITE,10)(X(I),I=1,N)                                    NTLF0380
 10     FORMAT(10H SOLUTION-,5E15.5)                                    NTLF0400
        STOP                                                            NTLF0420
        END                                                             NTLF0440
        SUBROUTINE ROSN(N,X,NF,F)                                       ROSN0000
C THIS SUBROUTINE COMPUTES THE  FUNCTION                                ROSN0020
        INTEGER N, NF                                                   ROSN0040
        REAL X(N), F                                                    ROSN0060
        F=100.0*(X(2)-X(1)*X(1))**2 + (1.0 - X(1))**2                   ROSN0080
        RETURN                                                          ROSN0100
        END                                                             ROSN0120
        SUBROUTINE ROSG(N,X,NF,G)                                       ROSG0000
C THIS SUBROUTINE COMPUTES THE GRADIENT                                 ROSG0020
        INTEGER N,NF                                                    ROSG0040
        REAL X(N), G(N)                                                 ROSG0060
        G(1)=200.0*(X(2)-X(1)*X(1))*(-2.0)*X(1) - 2.0*(1-X(1))          ROSG0080
        G(2)=200.0*(X(2)-X(1)*X(1))                                     ROSG0100
        RETURN                                                          ROSG0120
        END                                                             ROSG0140
C$TEST NTLH                                                             NTLH0000
C***********************************************************************NTLH0020
C                                                                       NTLH0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SMNGB                             NTLH0060
C                                                                       NTLH0080
C***********************************************************************NTLH0100
        INTEGER N                                                       NTLH0120
        EXTERNAL ROSN, ROSG                                             NTLH0140
        REAL X(2), B(2,2)                                               NTLH0160
        N=2                                                             NTLH0180
C INITIALIZE X                                                          NTLH0200
        X(1)=-1.2                                                       NTLH0220
        X(2)=1.0                                                        NTLH0240
C SET UP THE BOUND ARRAY                                                NTLH0260
C R1MACH(2) CONTAINS THE LARGEST NUMBER IN THE MACHINE                  NTLH0280
        B(1,1)=-R1MACH(2)                                               NTLH0300
        B(2,1)=0.5                                                      NTLH0320
        B(1,2)=0.0                                                      NTLH0340
        B(2,2)=1.0                                                      NTLH0360
C                                                                       NTLH0380
C SOLVE THE PROBLEM                                                     NTLH0400
C                                                                       NTLH0420
        CALL SMNGB(N, X, B, ROSN, ROSG, 100, 1.E-4)                     NTLH0440
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NTLH0460
        IWRITE=I1MACH(2)                                                NTLH0480
        WRITE(IWRITE,10)(X(I),I=1,N)                                    NTLH0500
 10     FORMAT(10H SOLUTION-,5E15.5)                                    NTLH0520
        STOP                                                            NTLH0540
        END                                                             NTLH0560
        SUBROUTINE ROSN(N,X,NF,F)                                       ROSN0000
C THIS SUBROUTINE COMPUTES THE  FUNCTION                                ROSN0020
        INTEGER N, NF                                                   ROSN0040
        REAL X(N), F                                                    ROSN0060
        F=100.0*(X(2)-X(1)*X(1))**2 + (1.0 - X(1))**2                   ROSN0080
        RETURN                                                          ROSN0100
        END                                                             ROSN0120
        SUBROUTINE ROSG(N,X,NF,G)                                       ROSG0000
C THIS SUBROUTINE COMPUTES THE GRADIENT                                 ROSG0020
        INTEGER N,NF                                                    ROSG0040
        REAL X(N), G(N)                                                 ROSG0060
        G(1)=200.0*(X(2)-X(1)*X(1))*(-2.0)*X(1) - 2.0*(1-X(1))          ROSG0080
        G(2)=200.0*(X(2)-X(1)*X(1))                                     ROSG0100
        RETURN                                                          ROSG0120
        END                                                             ROSG0140
C$TEST NTLK                                                             NTLK0000
C***********************************************************************NTLK0020
C                                                                       NTLK0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SMNH                              NTLK0060
C                                                                       NTLK0080
C***********************************************************************NTLK0100
        INTEGER N                                                       NTLK0120
        EXTERNAL ROSN,ROSGH                                             NTLK0140
        REAL X(2)                                                       NTLK0160
        N=2                                                             NTLK0180
C INITIALIZE X                                                          NTLK0200
        X(1)=-1.2                                                       NTLK0220
        X(2)=1.0                                                        NTLK0240
C                                                                       NTLK0260
C SOLVE THE PROBLEM                                                     NTLK0280
C                                                                       NTLK0300
        CALL SMNH(N, X, ROSN, ROSGH, 100, 1.E-4)                        NTLK0320
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NTLK0340
        IWRITE=I1MACH(2)                                                NTLK0360
        WRITE(IWRITE,10)(X(I),I=1,N)                                    NTLK0380
 10     FORMAT(10H SOLUTION-,5E15.5)                                    NTLK0400
        STOP                                                            NTLK0420
        END                                                             NTLK0440
        SUBROUTINE ROSN(N,X,NF,F)                                       ROSN0000
C THIS SUBROUTINE COMPUTES THE  FUNCTION                                ROSN0020
        INTEGER N, NF                                                   ROSN0040
        REAL X(N), F                                                    ROSN0060
        F=100.0*(X(2)-X(1)*X(1))**2 + (1.0 - X(1))**2                   ROSN0080
        RETURN                                                          ROSN0100
        END                                                             ROSN0120
        SUBROUTINE ROSGH(N,X,NF,G,H)                                    ROSG0000
C THIS SUBROUTINE COMPUTES THE GRADIENT AND THE HESSIAN                 ROSG0020
        INTEGER N,NF                                                    ROSG0040
        REAL X(N), G(N), H(1)                                           ROSG0060
        G(1)=200.0*(X(2)-X(1)*X(1))*(-2.0)*X(1) - 2.0*(1-X(1))          ROSG0080
        G(2)=200.0*(X(2)-X(1)*X(1))                                     ROSG0100
C H(1) HAS THE (1,1) ELEMENT, H(2) HAS THE (2,1) ELEMENT,               ROSG0120
C H(3) HAS THE (2,2) ELEMENT OF THE MATRIX OF SECOND PARTIALS           ROSG0140
        H(1)=200.0*(X(2)-X(1)*X(1))*(-2.0)+800.0*X(1)*X(1)+2.0          ROSG0160
        H(2)=-400.0*X(1)                                                ROSG0180
        H(3)=200.0                                                      ROSG0200
        RETURN                                                          ROSG0220
        END                                                             ROSG0240
C$TEST NTLM                                                             NTLM0000
C***********************************************************************NTLM0020
C                                                                       NTLM0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SMNHB                             NTLM0060
C                                                                       NTLM0080
C***********************************************************************NTLM0100
        INTEGER N                                                       NTLM0120
        EXTERNAL ROSN, ROSGH                                            NTLM0140
        REAL X(2), B(2,2)                                               NTLM0160
        N=2                                                             NTLM0180
C INITIALIZE X                                                          NTLM0200
        X(1)=-1.2                                                       NTLM0220
        X(2)=1.0                                                        NTLM0240
C SET UP THE BOUND ARRAY                                                NTLM0260
C R1MACH(2) CONTAINS THE LARGEST NUMBER IN THE MACHINE                  NTLM0280
        B(1,1)=-R1MACH(2)                                               NTLM0300
        B(2,1)=0.5                                                      NTLM0320
        B(1,2)=0.0                                                      NTLM0340
        B(2,2)=1.0                                                      NTLM0360
C                                                                       NTLM0380
C SOLVE THE PROBLEM                                                     NTLM0400
C                                                                       NTLM0420
        CALL SMNHB(N, X, B, ROSN, ROSGH, 100, 1.E-4)                    NTLM0440
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NTLM0460
        IWRITE=I1MACH(2)                                                NTLM0480
        WRITE(IWRITE,10)(X(I),I=1,N)                                    NTLM0500
 10     FORMAT(10H SOLUTION-,5E15.5)                                    NTLM0520
        STOP                                                            NTLM0540
        END                                                             NTLM0560
        SUBROUTINE ROSN(N,X,NF,F)                                       ROSN0000
C THIS SUBROUTINE COMPUTES THE  FUNCTION                                ROSN0020
        INTEGER N, NF                                                   ROSN0040
        REAL X(N), F                                                    ROSN0060
        F=100.0*(X(2)-X(1)*X(1))**2 + (1.0 - X(1))**2                   ROSN0080
        RETURN                                                          ROSN0100
        END                                                             ROSN0120
        SUBROUTINE ROSGH(N,X,NF,G,H)                                    ROSG0000
C THIS SUBROUTINE COMPUTES THE GRADIENT AND THE HESSIAN                 ROSG0020
        INTEGER N,NF                                                    ROSG0040
        REAL X(N), G(N), H(1)                                           ROSG0060
        G(1)=200.0*(X(2)-X(1)*X(1))*(-2.0)*X(1) - 2.0*(1-X(1))          ROSG0080
        G(2)=200.0*(X(2)-X(1)*X(1))                                     ROSG0100
C H(1) HAS THE (1,1) ELEMENT, H(2) HAS THE (2,1) ELEMENT,               ROSG0120
C H(3) HAS THE (2,2) ELEMENT OF THE MATRIX OF SECOND PARTIALS           ROSG0140
        H(1)=200.0*(X(2)-X(1)*X(1))*(-2.0)+800.0*X(1)*X(1)+2.0          ROSG0160
        H(2)=-400.0*X(1)                                                ROSG0180
        H(3)=200.0                                                      ROSG0200
        RETURN                                                          ROSG0220
        END                                                             ROSG0240
C$TEST NTLP                                                             NTLP0000
C***********************************************************************NTLP0020
C                                                                       NTLP0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SNSF                              NTLP0060
C                                                                       NTLP0080
C***********************************************************************NTLP0100
        INTEGER N,P,L                                                   NTLP0120
        INTEGER LP1, IINC,INC(4,2)                                      NTLP0140
        EXTERNAL OSBA                                                   NTLP0160
        REAL Y(10),T(10),X(2),C(3)                                      NTLP0180
        COMMON /TT/T                                                    NTLP0200
C GENERATE DATA FOR PROBLEM                                             NTLP0220
        DATA Y(1)/8.44E-1/, Y(2) /9.36E-1/, Y(3) /8.81E-1/              NTLP0240
     1  Y(4)/7.84E-1/, Y(5)/ 6.85E-1/, Y(6)/6.03E-1/,                   NTLP0260
     2  Y(7) /5.38E-1/ , Y(8) /4.90E-1/, Y(9)/4.57E-1/                  NTLP0280
        P=2                                                             NTLP0300
        N=9                                                             NTLP0320
        L=3                                                             NTLP0340
        DO 10 I=1,9                                                     NTLP0360
           T(I)=-30.E0*FLOAT(I-1)                                       NTLP0380
 10     CONTINUE                                                        NTLP0400
C INITIALIZE X                                                          NTLP0420
        X(1)=.01                                                        NTLP0440
        X(2)=.02                                                        NTLP0460
C GENERATE THE INCIDENCE MATRIX                                         NTLP0480
        LP1=L+1                                                         NTLP0500
        DO 30 J=1,P                                                     NTLP0520
           DO 20 I=1,LP1                                                NTLP0540
              INC(I,J)=0                                                NTLP0560
 20        CONTINUE                                                     NTLP0580
 30     CONTINUE                                                        NTLP0600
        INC(2,1)=1                                                      NTLP0620
        INC(3,2)=1                                                      NTLP0640
        IINC=LP1                                                        NTLP0660
C                                                                       NTLP0680
C SOLVE THE PROBLEM                                                     NTLP0700
C                                                                       NTLP0720
        CALL SNSF(N, P, L, X, C, Y, OSBA, INC, IINC, 100, 1.E-4)        NTLP0740
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NTLP0760
        IWRITE = I1MACH(2)                                              NTLP0780
        WRITE(IWRITE, 40)(X(I),I=1,P)                                   NTLP0800
 40     FORMAT(22H NONLINEAR PARAMETERS-,2E15.5)                        NTLP0820
        WRITE(IWRITE, 50)(C(I),I=1,L)                                   NTLP0840
 50     FORMAT(19H LINEAR PARAMETERS-, 3E15.5)                          NTLP0860
        STOP                                                            NTLP0880
        END                                                             NTLP0900
        SUBROUTINE OSBA(N,P,L,X,NF,A)                                   OSBA0000
C THIS SUBROUTINE COMPUTES THE MODEL                                    OSBA0020
        INTEGER P, N, NF, L                                             OSBA0040
        REAL X(P), A(N,L)                                               OSBA0060
        REAL  T(10)                                                     OSBA0080
        COMMON /TT/  T                                                  OSBA0100
        DO 10 I=1,N                                                     OSBA0120
           A(I,1)=1.0                                                   OSBA0140
           A(I,2)=EXP(X(1)*T(I))                                        OSBA0160
           A(I,3)=EXP(X(2)*T(I))                                        OSBA0180
 10     CONTINUE                                                        OSBA0200
        RETURN                                                          OSBA0220
        END                                                             OSBA0240
C$TEST NTLR                                                             NTLR0000
C***********************************************************************NTLR0020
C                                                                       NTLR0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SNSG                              NTLR0060
C                                                                       NTLR0080
C***********************************************************************NTLR0100
        INTEGER N,P,L                                                   NTLR0120
        INTEGER LP1, IINC,INC(4,2)                                      NTLR0140
        EXTERNAL OSBA, OSBB                                             NTLR0160
        REAL Y(10),T(10),X(2),C(3)                                      NTLR0180
        COMMON /TT/T                                                    NTLR0200
C GENERATE DATA FOR PROBLEM                                             NTLR0220
        DATA Y(1)/8.44E-1/, Y(2) /9.36E-1/, Y(3) /8.81E-1/              NTLR0240
     1  Y(4)/7.84E-1/, Y(5)/ 6.85E-1/, Y(6)/6.03E-1/,                   NTLR0260
     2  Y(7) /5.38E-1/ , Y(8) /4.90E-1/, Y(9)/4.57E-1/                  NTLR0280
        P=2                                                             NTLR0300
        N=9                                                             NTLR0320
        L=3                                                             NTLR0340
        DO 10 I=1,9                                                     NTLR0360
           T(I)=-30.E0*FLOAT(I-1)                                       NTLR0380
 10     CONTINUE                                                        NTLR0400
C INITIALIZE X                                                          NTLR0420
        X(1)=.01                                                        NTLR0440
        X(2)=.02                                                        NTLR0460
C GENERATE THE INCIDENCE MATRIX                                         NTLR0480
        LP1=L+1                                                         NTLR0500
        DO 30 J=1,P                                                     NTLR0520
           DO 20 I=1,LP1                                                NTLR0540
              INC(I,J)=0                                                NTLR0560
 20        CONTINUE                                                     NTLR0580
 30     CONTINUE                                                        NTLR0600
        INC(2,1)=1                                                      NTLR0620
        INC(3,2)=1                                                      NTLR0640
        IINC=LP1                                                        NTLR0660
C                                                                       NTLR0680
C SOLVE THE PROBLEM                                                     NTLR0700
C                                                                       NTLR0720
        CALL SNSG(N, P, L, X, C, Y, OSBA, OSBB, INC, IINC, 100, 1.E-4)  NTLR0740
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NTLR0760
        IWRITE = I1MACH(2)                                              NTLR0780
        WRITE(IWRITE, 40)(X(I),I=1,P)                                   NTLR0800
 40     FORMAT(22H NONLINEAR PARAMETERS-,2E15.5)                        NTLR0820
        WRITE(IWRITE, 50)(C(I),I=1,L)                                   NTLR0840
 50     FORMAT(19H LINEAR PARAMETERS-, 3E15.5)                          NTLR0860
        STOP                                                            NTLR0880
        END                                                             NTLR0900
        SUBROUTINE OSBA(N,P,L,X,NF,A)                                   OSBA0000
C THIS SUBROUTINE COMPUTES THE MODEL                                    OSBA0020
        INTEGER P, N, NF, L                                             OSBA0040
        REAL X(P), A(N,L)                                               OSBA0060
        REAL  T(10)                                                     OSBA0080
        COMMON /TT/  T                                                  OSBA0100
        DO 10 I=1,N                                                     OSBA0120
           A(I,1)=1.0                                                   OSBA0140
           A(I,2)=EXP(X(1)*T(I))                                        OSBA0160
           A(I,3)=EXP(X(2)*T(I))                                        OSBA0180
 10     CONTINUE                                                        OSBA0200
        RETURN                                                          OSBA0220
        END                                                             OSBA0240
       SUBROUTINE OSBB(N,P,L,X,NF,B)                                    OSBB0000
C THIS SUBROUTINE COMPUTES THE NONZERO DERIVATIVES OF B                 OSBB0020
       INTEGER N,P,L,NF                                                 OSBB0040
       REAL X(P), B(N,L)                                                OSBB0060
       REAL T(10)                                                       OSBB0080
       COMMON /TT/ T                                                    OSBB0100
       DO 10 I=1,N                                                      OSBB0120
          B(I,1)=T(I)*EXP(T(I)*X(1))                                    OSBB0140
          B(I,2)=T(I)*EXP(T(I)*X(2))                                    OSBB0160
 10    CONTINUE                                                         OSBB0180
       RETURN                                                           OSBB0200
       END                                                              OSBB0220
C$TEST NTLT                                                             NTLT0000
C***********************************************************************NTLT0020
C                                                                       NTLT0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SNSFB                             NTLT0060
C                                                                       NTLT0080
C***********************************************************************NTLT0100
        INTEGER N,P,L                                                   NTLT0120
        INTEGER LP1, IINC,INC(4,2)                                      NTLT0140
        EXTERNAL OSBA                                                   NTLT0160
        REAL Y(10),T(10),X(2),C(3),B(2,2)                               NTLT0180
        COMMON /TT/T                                                    NTLT0200
C GENERATE DATA FOR PROBLEM                                             NTLT0220
        DATA Y(1)/8.44E-1/, Y(2) /9.36E-1/, Y(3) /8.81E-1/              NTLT0240
     1  Y(4)/7.84E-1/, Y(5)/ 6.85E-1/, Y(6)/6.03E-1/,                   NTLT0260
     2  Y(7) /5.38E-1/ , Y(8) /4.90E-1/, Y(9)/4.57E-1/                  NTLT0280
        P=2                                                             NTLT0300
        N=9                                                             NTLT0320
        L=3                                                             NTLT0340
        DO 10 I=1,9                                                     NTLT0360
           T(I)=-30.E0*FLOAT(I-1)                                       NTLT0380
 10     CONTINUE                                                        NTLT0400
C INITIALIZE X                                                          NTLT0420
        X(1)=.01                                                        NTLT0440
        X(2)=.03                                                        NTLT0460
C GENERATE THE INCIDENCE MATRIX                                         NTLT0480
        LP1=L+1                                                         NTLT0500
        DO 30 J=1,P                                                     NTLT0520
           DO 20 I=1,LP1                                                NTLT0540
              INC(I,J)=0                                                NTLT0560
 20        CONTINUE                                                     NTLT0580
 30     CONTINUE                                                        NTLT0600
        INC(2,1)=1                                                      NTLT0620
        INC(3,2)=1                                                      NTLT0640
        IINC=LP1                                                        NTLT0660
C SUPPLY BOUNDS                                                         NTLT0680
        B(1,1)=-R1MACH(2)                                               NTLT0700
        B(2,1)=0.125                                                    NTLT0720
        B(1,2)=.03                                                      NTLT0740
        B(2,2)=R1MACH(2)                                                NTLT0760
C                                                                       NTLT0780
C SOLVE THE PROBLEM                                                     NTLT0800
C                                                                       NTLT0820
        CALL SNSFB(N, P, L, X, B, C, Y, OSBA, INC, IINC, 100, 1.E-4)    NTLT0840
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NTLT0860
        IWRITE = I1MACH(2)                                              NTLT0880
        WRITE(IWRITE, 40)(X(I),I=1,P)                                   NTLT0900
 40     FORMAT(22H NONLINEAR PARAMETERS-,2E15.5)                        NTLT0920
        WRITE(IWRITE, 50)(C(I),I=1,L)                                   NTLT0940
 50     FORMAT(19H LINEAR PARAMETERS-, 3E15.5)                          NTLT0960
        STOP                                                            NTLT0980
        END                                                             NTLT1000
        SUBROUTINE OSBA(N,P,L,X,NF,A)                                   OSBA0000
C THIS SUBROUTINE COMPUTES THE MODEL                                    OSBA0020
        INTEGER P, N, NF, L                                             OSBA0040
        REAL X(P), A(N,L)                                               OSBA0060
        REAL  T(10)                                                     OSBA0080
        COMMON /TT/  T                                                  OSBA0100
        DO 10 I=1,N                                                     OSBA0120
           A(I,1)=1.0                                                   OSBA0140
           A(I,2)=EXP(X(1)*T(I))                                        OSBA0160
           A(I,3)=EXP(X(2)*T(I))                                        OSBA0180
 10     CONTINUE                                                        OSBA0200
        RETURN                                                          OSBA0220
        END                                                             OSBA0240
C$TEST NTLU                                                             NTLU0000
C***********************************************************************NTLU0020
C                                                                       NTLU0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SNSGB                             NTLU0060
C                                                                       NTLU0080
C***********************************************************************NTLU0100
        INTEGER N,P,L                                                   NTLU0120
        INTEGER LP1, IINC,INC(4,2)                                      NTLU0140
        EXTERNAL OSBA, OSBB                                             NTLU0160
        REAL Y(10),T(10),X(2),C(3),B(2,2)                               NTLU0180
        COMMON /TT/T                                                    NTLU0200
C GENERATE DATA FOR PROBLEM                                             NTLU0220
        DATA Y(1)/8.44E-1/, Y(2) /9.36E-1/, Y(3) /8.81E-1/              NTLU0240
     1  Y(4)/7.84E-1/, Y(5)/ 6.85E-1/, Y(6)/6.03E-1/,                   NTLU0260
     2  Y(7) /5.38E-1/ , Y(8) /4.90E-1/, Y(9)/4.57E-1/                  NTLU0280
        P=2                                                             NTLU0300
        N=9                                                             NTLU0320
        L=3                                                             NTLU0340
        DO 10 I=1,9                                                     NTLU0360
           T(I)=-30.E0*FLOAT(I-1)                                       NTLU0380
 10     CONTINUE                                                        NTLU0400
C INITIALIZE X                                                          NTLU0420
        X(1)=.01                                                        NTLU0440
        X(2)=.03                                                        NTLU0460
C GENERATE THE INCIDENCE MATRIX                                         NTLU0480
        LP1=L+1                                                         NTLU0500
        DO 30 J=1,P                                                     NTLU0520
           DO 20 I=1,LP1                                                NTLU0540
              INC(I,J)=0                                                NTLU0560
 20        CONTINUE                                                     NTLU0580
 30     CONTINUE                                                        NTLU0600
        INC(2,1)=1                                                      NTLU0620
        INC(3,2)=1                                                      NTLU0640
        IINC=LP1                                                        NTLU0660
C SPECIFY BOUNDS                                                        NTLU0680
        B(1,1)=-R1MACH(2)                                               NTLU0700
        B(2,1)=0.125                                                    NTLU0720
        B(1,2)=.03                                                      NTLU0740
        B(2,2)=R1MACH(2)                                                NTLU0760
C                                                                       NTLU0780
C SOLVE THE PROBLEM                                                     NTLU0800
C                                                                       NTLU0820
        CALL SNSGB(N,P,L,X,B,C,Y,OSBA,OSBB,INC,IINC,100,1.E-4)          NTLU0840
C       PRINT RESULTS ON STANDARD OUTPUT UNIT                           NTLU0860
        IWRITE = I1MACH(2)                                              NTLU0880
        WRITE(IWRITE, 40)(X(I),I=1,P)                                   NTLU0900
 40     FORMAT(22H NONLINEAR PARAMETERS-,2E15.5)                        NTLU0920
        WRITE(IWRITE, 50)(C(I),I=1,L)                                   NTLU0940
 50     FORMAT(19H LINEAR PARAMETERS-, 3E15.5)                          NTLU0960
        STOP                                                            NTLU0980
        END                                                             NTLU1000
        SUBROUTINE OSBA(N,P,L,X,NF,A)                                   OSBA0000
C THIS SUBROUTINE COMPUTES THE MODEL                                    OSBA0020
        INTEGER P, N, NF, L                                             OSBA0040
        REAL X(P), A(N,L)                                               OSBA0060
        REAL  T(10)                                                     OSBA0080
        COMMON /TT/  T                                                  OSBA0100
        DO 10 I=1,N                                                     OSBA0120
           A(I,1)=1.0                                                   OSBA0140
           A(I,2)=EXP(X(1)*T(I))                                        OSBA0160
           A(I,3)=EXP(X(2)*T(I))                                        OSBA0180
 10     CONTINUE                                                        OSBA0200
        RETURN                                                          OSBA0220
        END                                                             OSBA0240
       SUBROUTINE OSBB(N,P,L,X,NF,B)                                    OSBB0000
C THIS SUBROUTINE COMPUTES THE NONZERO DERIVATIVES OF B                 OSBB0020
       INTEGER N,P,L,NF                                                 OSBB0040
       REAL X(P), B(N,L)                                                OSBB0060
       REAL T(10)                                                       OSBB0080
       COMMON /TT/ T                                                    OSBB0100
       DO 10 I=1,N                                                      OSBB0120
          B(I,1)=T(I)*EXP(T(I)*X(1))                                    OSBB0140
          B(I,2)=T(I)*EXP(T(I)*X(2))                                    OSBB0160
 10    CONTINUE                                                         OSBB0180
       RETURN                                                           OSBB0200
       END                                                              OSBB0220
C$TEST NLSA                                                             NLSA0000
C***********************************************************************NLSA0020
C                                                                       NLSA0040
C  EXAMPLE OF USE OF THE PORT PROGRAMS MNF, MNG AND MNH                 NLSA0060
C                                                                       NLSA0080
C***********************************************************************NLSA0100
C *** MNF, MNG, MNH EXAMPLE PROGRAM                                     NLSA0120
C                                                                       NLSA0140
C *** MINIMIZE F(X) = 0.1*S(X)**4 + SUM(I = 1(1)3) (I * (X(I) - 10)**2),NLSA0160
C *** WHERE S(X) = SUM(I = 1(1)3) X(I),                                 NLSA0180
C *** STARTING FROM     X = (2, 30, 9),                                 NLSA0200
C *** WITH SCALE VECTOR D = (1, 2, 3).                                  NLSA0220
C                                                                       NLSA0240
      INTEGER LIV, LV                                                   NLSA0260
      INTEGER IV(59), P, UI(1)                                          NLSA0280
      REAL D(3), UR(1), V(123), X(3)                                    NLSA0300
      EXTERNAL DUMMY, QF, QGH                                           NLSA0320
C                                                                       NLSA0340
      DATA LIV/59/, LV/123/, P/3/                                       NLSA0360
C                                                                       NLSA0380
      DATA X(1)/2.E+0/, X(2)/3.E+1/, X(3)/9.E+0/                        NLSA0400
      DATA D(1)/1.E+0/, D(2)/2.E+0/, D(3)/3.E+0/                        NLSA0420
C                                                                       NLSA0440
C  ***  BODY  ***                                                       NLSA0460
C                                                                       NLSA0480
C  ***  SET IV(1) TO 0 TO USE ALL DEFAULT INPUTS...                     NLSA0500
C                                                                       NLSA0520
      IV(1) = 0                                                         NLSA0540
C                                                                       NLSA0560
C ... HINDSIGHT (THE PRINTED OUTPUT FROM THIS EXAMPLE) SUGGESTS THAT    NLSA0580
C ... THE ALGORITHM MIGHT TAKE FEWER FUNCTION EVALUATIONS ON THIS       NLSA0600
C ... PROBLEM IF THE INITIAL STEP BOUND, V(LMAX0), WERE INCREASED       NLSA0620
C ... FROM ITS DEFAULT VALUE OF 1.0 TO 10.0 .  WE WOULD DO THIS BY      NLSA0640
C ... REPLACING THE ABOVE ASSIGNMENT OF 0 TO IV(1) WITH THE TWO LINES...NLSA0660
C                                                                       NLSA0680
C     CALL IVSET(2, IV, LIV, LV, V)                                     NLSA0700
C     V(35) = 10.0                                                      NLSA0720
C                                                                       NLSA0740
C                                                                       NLSA0760
C *** SOLVE THE PROBLEM -- MNH WILL PRINT THE SOLUTION FOR US...        NLSA0780
C                                                                       NLSA0800
      CALL MNH(P, D, X, QF, QGH, IV, LIV, LV, V, UI, UR, DUMMY)         NLSA0820
C                                                                       NLSA0840
C *** FOR MNF AND MNG, THE CORRESPONDING CALLS WOULD BE...              NLSA0860
C                                                                       NLSA0880
C     CALL MNF(P, D, X, QF, IV, LIV, LV, V, UI, UR, DUMMY)              NLSA0900
C     CALL MNG(P, D, X, QF, QG, IV, LIV, LV, V, UI, UR, DUMMY)          NLSA0920
C                                                                       NLSA0940
C *** QG WOULD BE A SUBROUTINE, DECLARED EXTERNAL IN PLACE OF QGH ABOVE,NLSA0960
C *** THAT WOULD BE THE SAME AS QGH (SEE BELOW) EXCEPT FOR HAVING       NLSA0980
C *** THE PARAMETER  H  OMITTED.                                        NLSA1000
C                                                                       NLSA1020
C *** NOTE -- ON MOST SYSTEMS, WE COULD SIMPLY PASS QF OR QGH           NLSA1040
C *** AS THE LAST PARAMETER TO MNH, SINCE QF AND QGH IGNORE             NLSA1060
C *** THEIR UF PARAMETER.  BUT THERE EXIST SYSTEMS (E.G. UNIVAC)        NLSA1080
C *** THAT WOULD GIVE A RUN-TIME ERROR IF WE DID THIS.  HENCE WE        NLSA1100
C *** PASS THE IMMEDIATELY FOLLOWING DUMMY SUBROUTINE AS UF.            NLSA1120
C                                                                       NLSA1140
 999  STOP                                                              NLSA1160
      END                                                               NLSA1180
      SUBROUTINE DUMMY                                                  DUMM0000
      RETURN                                                            DUMM0020
      END                                                               DUMM0040
      SUBROUTINE QF(P, X, NF, F, UI, UR, UF)                            QF  0000
C                                                                       QF  0020
C *** THIS ROUTINE COMPUTES THE OBJECTIVE FUNCTION, F(X)                QF  0040
C                                                                       QF  0060
      INTEGER P, NF, UI(1)                                              QF  0080
      REAL X(P), F, UR(1)                                               QF  0100
      EXTERNAL UF                                                       QF  0120
C                                                                       QF  0140
      INTEGER I                                                         QF  0160
      REAL PT1, TEN, ZERO                                               QF  0180
C                                                                       QF  0200
      DATA PT1 /0.1E+0/, TEN/1.E+1/, ZERO/0.E+0/                        QF  0220
C                                                                       QF  0240
C                                                                       QF  0260
      F = ZERO                                                          QF  0280
      DO 10 I = 1, P                                                    QF  0300
 10      F = F + X(I)                                                   QF  0320
      F = PT1 * F**4                                                    QF  0340
      DO 20 I = 1, P                                                    QF  0360
 20      F = F + I*(X(I) - TEN)**2                                      QF  0380
 999  RETURN                                                            QF  0400
      END                                                               QF  0420
      SUBROUTINE QGH(P, X, NF, G, H, UI, UR, UF)                        QGH 0000
C                                                                       QGH 0020
C *** THIS ROUTINE COMPUTES THE GRADIENT, G(X), AND THE LOWER TRIANGLE  QGH 0040
C *** OF THE HESSIAN, H(X).                                             QGH 0060
C                                                                       QGH 0080
      INTEGER P, NF, UI(1)                                              QGH 0100
      REAL X(P), G(P), H(1), UR(1)                                      QGH 0120
      EXTERNAL UF                                                       QGH 0140
C                                                                       QGH 0160
      INTEGER I, K                                                      QGH 0180
      REAL S, S34                                                       QGH 0200
      REAL ONEPT2, PT4, TEN, TWO, ZERO                                  QGH 0220
C                                                                       QGH 0240
      DATA ONEPT2/1.2E+0/,PT4/0.4E+0/,TEN/1.E+1/,TWO/2.E+0/,ZERO/0.E+0/ QGH 0260
C                                                                       QGH 0280
C                                                                       QGH 0300
      S = ZERO                                                          QGH 0320
      DO 10 I = 1, P                                                    QGH 0340
 10      S = S + X(I)                                                   QGH 0360
C                                                                       QGH 0380
C     *** INITIALIZE H TO 1.2*S**2 ***                                  QGH 0400
C                                                                       QGH 0420
      CALL SETR(P*(P+1)/2, ONEPT2*S**2, H)                              QGH 0440
C                                                                       QGH 0460
C     *** NOW COMPUTE G AND ADD (2, 4, ..., 2*P) TO THE DIAGONAL OF H   QGH 0480
C                                                                       QGH 0500
      S34 = PT4 * S**3                                                  QGH 0520
      K = 0                                                             QGH 0540
      DO 20 I = 1, P                                                    QGH 0560
         G(I) = S34  +  TWO * I * (X(I) - TEN)                          QGH 0580
         K = K + I                                                      QGH 0600
         H(K) = H(K) + TWO*I                                            QGH 0620
 20      CONTINUE                                                       QGH 0640
 999  RETURN                                                            QGH 0660
      END                                                               QGH 0680
C$TEST NLSB                                                             NLSB0000
C***********************************************************************NLSB0020
C                                                                       NLSB0040
C  EXAMPLE OF USE OF THE PORT PROGRAMS MNFB, MNGB, AND MNHB             NLSB0060
C                                                                       NLSB0080
C***********************************************************************NLSB0100
C *** MNFB, MNGB, MNHB EXAMPLE PROGRAM                                  NLSB0120
C                                                                       NLSB0140
C *** MINIMIZE F(X) = 0.1*S(X)**4 + SUM(I = 1(1)3) (I * (X(I) - 10)**2),NLSB0160
C *** WHERE S(X) = SUM(I = 1(1)3) X(I)                                  NLSB0180
C *** SUBJECT TO                                                        NLSB0200
C ***    1 .LE. X(1) .LE. 3,                                            NLSB0220
C ***   -2 .LE. X(2) .LE. 10,                                           NLSB0240
C ***    1 .LE. X(3) .LE. 21,                                           NLSB0260
C *** STARTING FROM     X = (2, 30, 9),                                 NLSB0280
C *** WITH SCALE VECTOR D = (1, 2, 3)                                   NLSB0300
C                                                                       NLSB0320
      INTEGER LIV, LV                                                   NLSB0340
      INTEGER IV(68), P, UI(1)                                          NLSB0360
      REAL B(2,3), D(3), UR(1), V(132), X(3)                            NLSB0380
      EXTERNAL DUMMY, QF, QGH                                           NLSB0400
C                                                                       NLSB0420
      DATA LIV/68/, LV/132/, P/3/                                       NLSB0440
C                                                                       NLSB0460
      DATA B(1,1)/1.E+0/,  B(2,1)/3.E+0/,                               NLSB0480
     1     B(1,2)/-2.E+0/, B(2,2)/1.E+1/,                               NLSB0500
     2     B(1,3)/1.E+0/,  B(2,3)/2.1E+1/                               NLSB0520
C                                                                       NLSB0540
      DATA X(1)/2.E+0/, X(2)/3.E+1/, X(3)/9.E+0/                        NLSB0560
      DATA D(1)/1.E+0/, D(2)/2.E+0/, D(3)/3.E+0/                        NLSB0580
C                                                                       NLSB0600
C  ***  BODY  ***                                                       NLSB0620
C                                                                       NLSB0640
C  ***  SET IV(1) TO 0 TO USE ALL DEFAULT INPUTS...                     NLSB0660
C                                                                       NLSB0680
      IV(1) = 0                                                         NLSB0700
C                                                                       NLSB0720
C ... WE COULD HAVE MNHB INITIALIZE THE SCALE VECTOR D TO ALL ONES      NLSB0740
C ... BY SETTING V(DINIT) TO 1.0 .  WE WOULD DO THIS BY REPLACING       NLSB0760
C ... THE ABOVE ASSIGNMENT OF 0 TO IV(1) WITH THE FOLLOWING TWO LINES...NLSB0780
C                                                                       NLSB0800
C     CALL IVSET(2, IV, LIV, LV, V)                                     NLSB0820
C     V(38) = 1.0                                                       NLSB0840
C                                                                       NLSB0860
C                                                                       NLSB0880
C *** SOLVE THE PROBLEM -- MNHB WILL PRINT THE SOLUTION FOR US...       NLSB0900
C                                                                       NLSB0920
      CALL MNHB(P, D, X, B, QF, QGH, IV, LIV, LV, V, UI, UR, DUMMY)     NLSB0940
C                                                                       NLSB0960
C *** FOR MNFB AND MNGB, THE CORRESPONDING CALLS WOULD BE...            NLSB0980
C                                                                       NLSB1000
C     CALL MNFB(P, D, X, B, QF, IV, LIV, LV, V, UI, UR, DUMMY)          NLSB1020
C     CALL MNGB(P, D, X, B, QF, QG, IV, LIV, LV, V, UI, UR, DUMMY)      NLSB1040
C                                                                       NLSB1060
C *** QG WOULD BE A SUBROUTINE, DECLARED EXTERNAL IN PLACE OF QGH ABOVE,NLSB1080
C *** THAT WOULD BE THE SAME AS QGH (SEE BELOW) EXCEPT FOR HAVING       NLSB1100
C *** THE PARAMETER  H  OMITTED.                                        NLSB1120
C                                                                       NLSB1140
C *** NOTE -- ON MOST SYSTEMS, WE COULD SIMPLY PASS QF OR QGH           NLSB1160
C *** AS THE LAST PARAMETER TO MNHB, SINCE QF AND QGH IGNORE            NLSB1180
C *** THEIR UF PARAMETER.  BUT THERE EXIST SYSTEMS (E.G. UNIVAC)        NLSB1200
C *** THAT WOULD GIVE A RUN-TIME ERROR IF WE DID THIS.  HENCE WE        NLSB1220
C *** PASS THE IMMEDIATELY FOLLOWING DUMMY SUBROUTINE AS UF.            NLSB1240
C                                                                       NLSB1260
 999  STOP                                                              NLSB1280
      END                                                               NLSB1300
      SUBROUTINE DUMMY                                                  DUMM0000
      RETURN                                                            DUMM0020
      END                                                               DUMM0040
      SUBROUTINE QF(P, X, NF, F, UI, UR, UF)                            QF  0000
C                                                                       QF  0020
C *** THIS ROUTINE COMPUTES THE OBJECTIVE FUNCTION, F(X)                QF  0040
C                                                                       QF  0060
      INTEGER P, NF, UI(1)                                              QF  0080
      REAL X(P), F, UR(1)                                               QF  0100
      EXTERNAL UF                                                       QF  0120
C                                                                       QF  0140
      INTEGER I                                                         QF  0160
      REAL PT1, TEN, ZERO                                               QF  0180
C                                                                       QF  0200
      DATA PT1 /0.1E+0/, TEN/1.E+1/, ZERO/0.E+0/                        QF  0220
C                                                                       QF  0240
C                                                                       QF  0260
      F = ZERO                                                          QF  0280
      DO 10 I = 1, P                                                    QF  0300
 10      F = F + X(I)                                                   QF  0320
      F = PT1 * F**4                                                    QF  0340
      DO 20 I = 1, P                                                    QF  0360
 20      F = F + I*(X(I) - TEN)**2                                      QF  0380
 999  RETURN                                                            QF  0400
      END                                                               QF  0420
      SUBROUTINE QGH(P, X, NF, G, H, UI, UR, UF)                        QGH 0000
C                                                                       QGH 0020
C *** THIS ROUTINE COMPUTES THE GRADIENT, G(X), AND THE LOWER TRIANGLE  QGH 0040
C *** OF THE HESSIAN, H(X).                                             QGH 0060
C                                                                       QGH 0080
      INTEGER P, NF, UI(1)                                              QGH 0100
      REAL X(P), G(P), H(1), UR(1)                                      QGH 0120
      EXTERNAL UF                                                       QGH 0140
C                                                                       QGH 0160
      INTEGER I, K                                                      QGH 0180
      REAL S, S34                                                       QGH 0200
      REAL ONEPT2, PT4, TEN, TWO, ZERO                                  QGH 0220
C                                                                       QGH 0240
      DATA ONEPT2/1.2E+0/,PT4/0.4E+0/,TEN/1.E+1/,TWO/2.E+0/,ZERO/0.E+0/ QGH 0260
C                                                                       QGH 0280
C                                                                       QGH 0300
      S = ZERO                                                          QGH 0320
      DO 10 I = 1, P                                                    QGH 0340
 10      S = S + X(I)                                                   QGH 0360
C                                                                       QGH 0380
C     *** INITIALIZE H TO 1.2*S**2 ***                                  QGH 0400
C                                                                       QGH 0420
      CALL SETR(P*(P+1)/2, ONEPT2*S**2, H)                              QGH 0440
C                                                                       QGH 0460
C     *** NOW COMPUTE G AND ADD (2, 4, ..., 2*P) TO THE DIAGONAL OF H   QGH 0480
C                                                                       QGH 0500
      S34 = PT4 * S**3                                                  QGH 0520
      K = 0                                                             QGH 0540
      DO 20 I = 1, P                                                    QGH 0560
         G(I) = S34  +  TWO * I * (X(I) - TEN)                          QGH 0580
         K = K + I                                                      QGH 0600
         H(K) = H(K) + TWO*I                                            QGH 0620
 20      CONTINUE                                                       QGH 0640
 999  RETURN                                                            QGH 0660
      END                                                               QGH 0680
C$TEST NLSJ                                                             NLSJ0000
C***********************************************************************NLSJ0020
C                                                                       NLSJ0040
C  EXAMPLE OF USE OF THE PORT PROGRAMS N2F AND N2G                      NLSJ0060
C                                                                       NLSJ0080
C***********************************************************************NLSJ0100
C *** N2F AND N2G, EXAMPLE PROGRAM ***                                  NLSJ0120
C                                                                       NLSJ0140
C *** FIT N = 33 DATA POINTS (T,Y) TO THE CURVE                         NLSJ0160
C *** X(1) + X(2)*EXP(T*X(4)) + X(3)*EXP(T*X(5))                        NLSJ0180
C                                                                       NLSJ0200
C *** THE FOLLOWING CODE IS FOR CALLING N2G.  DIFFERENCES FOR           NLSJ0220
C *** CALLING N2F ARE EXPLAINED IN COMMENTS.                            NLSJ0240
C                                                                       NLSJ0260
      INTEGER I, IV(87), LIV, LTY, LV, UI(1)                            NLSJ0280
      REAL TY(50,2), V(471), X(5)                                       NLSJ0300
      EXTERNAL DUMMY, OSB1J, OSB1R                                      NLSJ0320
      DATA LIV/87/, LTY/50/, LV/471/                                    NLSJ0340
C                                                                       NLSJ0360
C *** FOR N2F, OMIT OSB1J FROM THE EXTERNAL STATEMENT.                  NLSJ0380
C                                                                       NLSJ0400
C                                                                       NLSJ0420
C *** TO MAKE THIS EXAMPLE SELF-CONTAINED, WE USE A DATA STATEMENT      NLSJ0440
C *** AND DO LOOP TO SUPPLY (T,Y) PAIRS TO THE ARRAY TY.                NLSJ0460
C                                                                       NLSJ0480
C *** Y VALUES...                                                       NLSJ0500
C                                                                       NLSJ0520
      DATA TY(1,2) /8.44E-1/, TY(2,2) /9.08E-1/, TY(3,2)/9.32E-1/,      NLSJ0540
     1     TY(4,2) /9.36E-1/, TY(5,2) /9.25E-1/, TY(6,2)/9.08E-1/,      NLSJ0560
     2     TY(7,2) /8.81E-1/, TY(8,2) /8.50E-1/, TY(9,2)/8.18E-1/,      NLSJ0580
     3     TY(10,2)/7.84E-1/, TY(11,2)/7.51E-1/, TY(12,2)/7.18E-1/,     NLSJ0600
     4     TY(13,2)/6.85E-1/, TY(14,2)/6.58E-1/, TY(15,2)/6.28E-1/,     NLSJ0620
     5     TY(16,2)/6.03E-1/, TY(17,2)/5.80E-1/, TY(18,2)/5.58E-1/,     NLSJ0640
     6     TY(19,2)/5.38E-1/, TY(20,2)/5.22E-1/, TY(21,2)/5.06E-1/,     NLSJ0660
     7     TY(22,2)/4.90E-1/, TY(23,2)/4.78E-1/, TY(24,2)/4.67E-1/,     NLSJ0680
     8     TY(25,2)/4.57E-1/, TY(26,2)/4.48E-1/, TY(27,2)/4.38E-1/,     NLSJ0700
     9     TY(28,2)/4.31E-1/, TY(29,2)/4.24E-1/, TY(30,2)/4.20E-1/,     NLSJ0720
     A     TY(31,2)/4.14E-1/, TY(32,2)/4.11E-1/, TY(33,2)/4.06E-1/      NLSJ0740
C                                                                       NLSJ0760
C ***  T VALUES...                                                      NLSJ0780
C                                                                       NLSJ0800
      DO 10 I = 1, 33                                                   NLSJ0820
         TY(I,1) = -10.E+0 * FLOAT(I-1)                                 NLSJ0840
 10      CONTINUE                                                       NLSJ0860
C                                                                       NLSJ0880
C *** SUPPLY LEAD DIMENSION OF TY IN UI(1)...                           NLSJ0900
C *** (MOST COMPILERS WOULD LET US SIMPLY PASS LTY FOR UI,              NLSJ0920
C *** BUT SOME, E.G. WATFIV, WILL NOT.)                                 NLSJ0940
C                                                                       NLSJ0960
      UI(1) = LTY                                                       NLSJ0980
C                                                                       NLSJ1000
C *** SPECIFY ALL DEFAULT IV AND V INPUT COMPONENTS (N2G AND N2F        NLSJ1020
C *** ONLY)...                                                          NLSJ1040
C                                                                       NLSJ1060
      IV(1) = 0                                                         NLSJ1080
C                                                                       NLSJ1100
C *** SUPPLY INITIAL GUESS...                                           NLSJ1120
C                                                                       NLSJ1140
      X(1) = 0.5E+0                                                     NLSJ1160
      X(2) = 1.5E+0                                                     NLSJ1180
      X(3) = -1.E+0                                                     NLSJ1200
      X(4) = 1.E-2                                                      NLSJ1220
      X(5) = 2.E-2                                                      NLSJ1240
C                                                                       NLSJ1260
C *** SOLVE THE PROBLEM -- N2G WILL PRINT THE SOLUTION FOR US...        NLSJ1280
C                                                                       NLSJ1300
      CALL N2G(33, 5, X, OSB1R, OSB1J, IV, LIV, LV, V, UI, TY, DUMMY)   NLSJ1320
C                                                                       NLSJ1340
C *** FOR N2F, THE CORRESPONDING CALLS WOULD BE...                      NLSJ1360
C                                                                       NLSJ1380
C     CALL N2F(33, 5, X, OSB1R, IV, LIV, LV, V, UI, TY, DUMMY)          NLSJ1400
C                                                                       NLSJ1420
C                                                                       NLSJ1440
C *** NOTE -- ON MOST SYSTEMS, WE COULD SIMPLY PASS OSB1R (OR OSB1J)    NLSJ1460
C *** AS THE UF PARAMETER, SINCE OSB1R AND OSB1J IGNORE THIS            NLSJ1480
C *** PARAMETER.  BUT THERE EXIST SYSTEMS (E.G. UNIVAC) THAT WOULD      NLSJ1500
C *** GIVE A RUN-TIME ERROR IF WE DID THIS.  HENCE WE PASS THE          NLSJ1520
C *** IMMEDIATELY FOLLOWING DUMMY SUBROUTINE AS UF.                     NLSJ1540
C                                                                       NLSJ1560
      STOP                                                              NLSJ1580
      END                                                               NLSJ1600
      SUBROUTINE DUMMY                                                  DUMM0000
      RETURN                                                            DUMM0020
      END                                                               DUMM0040
      SUBROUTINE OSB1R(N, P, X, NF, R, LTY, TY, UF)                     OSB10000
C                                                                       OSB10020
C *** THIS ROUTINE COMPUTES THE RESIDUAL VECTOR, R = R(X),              OSB10040
C *** FOR TEST PROBLEM OSBORNE1.                                        OSB10060
C                                                                       OSB10080
      INTEGER N, P, NF, LTY                                             OSB10100
      REAL X(P), R(N), TY(LTY,2)                                        OSB10120
      EXTERNAL UF                                                       OSB10140
C                                                                       OSB10160
      INTEGER I                                                         OSB10180
      REAL TI, YI                                                       OSB10200
C                                                                       OSB10220
      DO 10 I = 1, N                                                    OSB10240
         TI = TY(I,1)                                                   OSB10260
         YI = TY(I,2)                                                   OSB10280
         R(I) = YI - (X(1) + X(2)* EXP(X(4)*TI) + X(3)* EXP(X(5)*TI))   OSB10300
 10      CONTINUE                                                       OSB10320
      RETURN                                                            OSB10340
      END                                                               OSB10360
      SUBROUTINE OSB1J(N, P, X, NF, J, LTY, TY, UF)                     OSB10000
C                                                                       OSB10020
C *** THIS ROUTINE COMPUTES THE JACOBIAN MATRIX, J = J(X),              OSB10040
C *** FOR TEST PROBLEM OSBORNE1.  J(I,K) IS SET TO THE PARTIAL          OSB10060
C *** DERIVATIVE OF COMPONENT I OF R WITH RESPECT TO X(K).              OSB10080
C                                                                       OSB10100
      INTEGER N, P, NF, LTY                                             OSB10120
      REAL X(P), J(N,P), TY(LTY,2)                                      OSB10140
      EXTERNAL UF                                                       OSB10160
C                                                                       OSB10180
      INTEGER I                                                         OSB10200
      REAL NEGONE, TI                                                   OSB10220
      DATA NEGONE/-1.E+0/                                               OSB10240
C                                                                       OSB10260
      DO 10 I = 1, N                                                    OSB10280
         TI = TY(I,1)                                                   OSB10300
         J(I,1) = NEGONE                                                OSB10320
         J(I,2) = - EXP(X(4)*TI)                                        OSB10340
         J(I,3) = - EXP(X(5)*TI)                                        OSB10360
         J(I,4) = TI*X(2)*J(I,2)                                        OSB10380
         J(I,5) = TI*X(3)*J(I,3)                                        OSB10400
 10      CONTINUE                                                       OSB10420
      RETURN                                                            OSB10440
      END                                                               OSB10460
C$TEST NLSK                                                             NLSK0000
C***********************************************************************NLSK0020
C                                                                       NLSK0040
C  EXAMPLE OF USE OF THE PORT PROGRAMS N2FB AND N2GB                    NLSK0060
C                                                                       NLSK0080
C***********************************************************************NLSK0100
C *** N2FB AND N2GB EXAMPLE PROGRAM ***                                 NLSK0120
C                                                                       NLSK0140
C *** FIT N = 33 DATA POINTS (T,Y) TO THE CURVE                         NLSK0160
C *** X(1) + X(2)*EXP(T*X(4)) + X(3)*EXP(T*X(5))                        NLSK0180
C                                                                       NLSK0200
C *** THE FOLLOWING CODE IS FOR CALLING N2GB.  DIFFERENCES FOR          NLSK0220
C *** CALLING N2FB ARE EXPLAINED IN COMMENTS.                           NLSK0240
C                                                                       NLSK0260
      INTEGER I, IV(102), LIV, LTY, LV, UI(1)                           NLSK0280
      REAL B(2,5), BIG, TY(50,2), V(491), X(5)                          NLSK0300
      EXTERNAL DUMMY, OSB1J, OSB1R, R1MACH                              NLSK0320
      REAL R1MACH                                                       NLSK0340
      DATA LIV/102/, LTY/50/, LV/491/                                   NLSK0360
C                                                                       NLSK0380
C *** FOR N2FB, OMIT OSB1J FROM THE EXTERNAL STATEMENT.                 NLSK0400
C                                                                       NLSK0420
C                                                                       NLSK0440
C *** TO MAKE THIS EXAMPLE SELF-CONTAINED, WE USE A DATA STATEMENT      NLSK0460
C *** AND DO LOOP TO SUPPLY (T,Y) PAIRS TO THE ARRAY TY.                NLSK0480
C                                                                       NLSK0500
C *** Y VALUES...                                                       NLSK0520
C                                                                       NLSK0540
      DATA TY(1,2) /8.44E-1/, TY(2,2) /9.08E-1/, TY(3,2)/9.32E-1/,      NLSK0560
     1     TY(4,2) /9.36E-1/, TY(5,2) /9.25E-1/, TY(6,2)/9.08E-1/,      NLSK0580
     2     TY(7,2) /8.81E-1/, TY(8,2) /8.50E-1/, TY(9,2)/8.18E-1/,      NLSK0600
     3     TY(10,2)/7.84E-1/, TY(11,2)/7.51E-1/, TY(12,2)/7.18E-1/,     NLSK0620
     4     TY(13,2)/6.85E-1/, TY(14,2)/6.58E-1/, TY(15,2)/6.28E-1/,     NLSK0640
     5     TY(16,2)/6.03E-1/, TY(17,2)/5.80E-1/, TY(18,2)/5.58E-1/,     NLSK0660
     6     TY(19,2)/5.38E-1/, TY(20,2)/5.22E-1/, TY(21,2)/5.06E-1/,     NLSK0680
     7     TY(22,2)/4.90E-1/, TY(23,2)/4.78E-1/, TY(24,2)/4.67E-1/,     NLSK0700
     8     TY(25,2)/4.57E-1/, TY(26,2)/4.48E-1/, TY(27,2)/4.38E-1/,     NLSK0720
     9     TY(28,2)/4.31E-1/, TY(29,2)/4.24E-1/, TY(30,2)/4.20E-1/,     NLSK0740
     A     TY(31,2)/4.14E-1/, TY(32,2)/4.11E-1/, TY(33,2)/4.06E-1/      NLSK0760
C                                                                       NLSK0780
C ***  T VALUES...                                                      NLSK0800
C                                                                       NLSK0820
      DO 10 I = 1, 33                                                   NLSK0840
         TY(I,1) = -10.E+0 * FLOAT(I-1)                                 NLSK0860
 10      CONTINUE                                                       NLSK0880
C                                                                       NLSK0900
C *** SUPPLY LEAD DIMENSION OF TY IN UI(1)...                           NLSK0920
C *** (MOST COMPILERS WOULD LET US SIMPLY PASS LTY FOR UI,              NLSK0940
C *** BUT SOME, E.G. WATFIV, WILL NOT.)                                 NLSK0960
C                                                                       NLSK0980
      UI(1) = LTY                                                       NLSK1000
C                                                                       NLSK1020
C *** SPECIFY ALL DEFAULT IV AND V INPUT COMPONENTS (N2GB AND N2FB      NLSK1040
C *** ONLY)...                                                          NLSK1060
C                                                                       NLSK1080
      IV(1) = 0                                                         NLSK1100
C                                                                       NLSK1120
C *** SUPPLY INITIAL GUESS...                                           NLSK1140
C                                                                       NLSK1160
      X(1) = 0.5E+0                                                     NLSK1180
      X(2) = 1.5E+0                                                     NLSK1200
      X(3) = -1.E+0                                                     NLSK1220
      X(4) = 1.E-2                                                      NLSK1240
      X(5) = 2.E-2                                                      NLSK1260
C                                                                       NLSK1280
C *** SET BIG TO LARGEST POSITIVE (MODEL) NUMBER...                     NLSK1300
C                                                                       NLSK1320
      BIG = R1MACH(2)                                                   NLSK1340
C                                                                       NLSK1360
C *** SUPPLY BOUNDS -- INCLUDING LOWER BOUNDS OF -BIG AND UPPER         NLSK1380
C *** BOUNDS OF BIG WHERE WE DO NOT WISH TO IMPOSE BOUNDS...            NLSK1400
C                                                                       NLSK1420
      DO 20 I = 1, 5                                                    NLSK1440
         B(1,I) = -BIG                                                  NLSK1460
         B(2,I) = BIG                                                   NLSK1480
 20      CONTINUE                                                       NLSK1500
C                                                                       NLSK1520
      B(2,4) = .0125                                                    NLSK1540
      B(1,5) = .03                                                      NLSK1560
C                                                                       NLSK1580
C *** SOLVE THE PROBLEM -- N2GB WILL PRINT THE SOLUTION FOR US...       NLSK1600
C                                                                       NLSK1620
      CALL N2GB(33, 5, X, B, OSB1R, OSB1J, IV, LIV, LV, V, UI, TY,      NLSK1640
     1            DUMMY)                                                NLSK1660
C                                                                       NLSK1680
C *** FOR N2FB, THE CORRESPONDING CALL WOULD BE...                      NLSK1700
C                                                                       NLSK1720
C     CALL N2FB(33, 5, X, B, OSB1R, IV, LIV, LV, V, UI, TY, DUMMY)      NLSK1740
C                                                                       NLSK1760
C                                                                       NLSK1780
C *** NOTE -- ON MOST SYSTEMS, WE COULD SIMPLY PASS OSB1R (OR OSB1J)    NLSK1800
C *** AS THE UF PARAMETER, SINCE OSB1R AND OSB1J IGNORE THIS            NLSK1820
C *** PARAMETER.  BUT THERE EXIST SYSTEMS (E.G. UNIVAC) THAT WOULD      NLSK1840
C *** GIVE A RUN-TIME ERROR IF WE DID THIS.  HENCE WE PASS THE          NLSK1860
C *** IMMEDIATELY FOLLOWING DUMMY SUBROUTINE AS UF.                     NLSK1880
C                                                                       NLSK1900
      STOP                                                              NLSK1920
      END                                                               NLSK1940
      SUBROUTINE DUMMY                                                  DUMM0000
      RETURN                                                            DUMM0020
      END                                                               DUMM0040
      SUBROUTINE OSB1R(N, P, X, NF, R, LTY, TY, UF)                     OSB10000
C                                                                       OSB10020
C *** THIS ROUTINE COMPUTES THE RESIDUAL VECTOR, R = R(X),              OSB10040
C *** FOR TEST PROBLEM OSBORNE1.                                        OSB10060
C                                                                       OSB10080
      INTEGER N, P, NF, LTY                                             OSB10100
      REAL X(P), R(N), TY(LTY,2)                                        OSB10120
      EXTERNAL UF                                                       OSB10140
C                                                                       OSB10160
      INTEGER I                                                         OSB10180
      REAL TI, YI                                                       OSB10200
C                                                                       OSB10220
      DO 10 I = 1, N                                                    OSB10240
         TI = TY(I,1)                                                   OSB10260
         YI = TY(I,2)                                                   OSB10280
         R(I) = YI - (X(1) + X(2)* EXP(X(4)*TI) + X(3)* EXP(X(5)*TI))   OSB10300
 10      CONTINUE                                                       OSB10320
      RETURN                                                            OSB10340
      END                                                               OSB10360
      SUBROUTINE OSB1J(N, P, X, NF, J, LTY, TY, UF)                     OSB10000
C                                                                       OSB10020
C *** THIS ROUTINE COMPUTES THE JACOBIAN MATRIX, J = J(X),              OSB10040
C *** FOR TEST PROBLEM OSBORNE1.  J(I,K) IS SET TO THE PARTIAL          OSB10060
C *** DERIVATIVE OF COMPONENT I OF R WITH RESPECT TO X(K).              OSB10080
C                                                                       OSB10100
      INTEGER N, P, NF, LTY                                             OSB10120
      REAL X(P), J(N,P), TY(LTY,2)                                      OSB10140
      EXTERNAL UF                                                       OSB10160
C                                                                       OSB10180
      INTEGER I                                                         OSB10200
      REAL NEGONE, TI                                                   OSB10220
      DATA NEGONE/-1.E+0/                                               OSB10240
C                                                                       OSB10260
      DO 10 I = 1, N                                                    OSB10280
         TI = TY(I,1)                                                   OSB10300
         J(I,1) = NEGONE                                                OSB10320
         J(I,2) = - EXP(X(4)*TI)                                        OSB10340
         J(I,3) = - EXP(X(5)*TI)                                        OSB10360
         J(I,4) = TI*X(2)*J(I,2)                                        OSB10380
         J(I,5) = TI*X(3)*J(I,3)                                        OSB10400
 10      CONTINUE                                                       OSB10420
      RETURN                                                            OSB10440
      END                                                               OSB10460
C$TEST NLSP                                                             NLSP0000
C***********************************************************************NLSP0020
C                                                                       NLSP0040
C  EXAMPLE OF USE OF THE PORT PROGRAM N2PB                              NLSP0060
C                                                                       NLSP0080
C***********************************************************************NLSP0100
C *** N2PB EXAMPLE PROGRAM ***                                          NLSP0120
C                                                                       NLSP0140
C *** FIT N = 33 DATA POINTS (T,Y) TO THE CURVE                         NLSP0160
C *** X(1) + X(2)*EXP(T*X(4)) + X(3)*EXP(T*X(5))                        NLSP0180
C                                                                       NLSP0200
      INTEGER I, IV(102), LIV, LTY, LV, UI(1)                           NLSP0220
      REAL B(2,5), BIG, TY(50,2), V(302), X(5)                          NLSP0240
      EXTERNAL DUMMY, OSB1J, OSB1R, R1MACH                              NLSP0260
      REAL R1MACH                                                       NLSP0280
      DATA LIV/102/, LTY/50/, LV/302/                                   NLSP0300
C                                                                       NLSP0320
C *** TO MAKE THIS EXAMPLE SELF-CONTAINED, WE USE A DATA STATEMENT      NLSP0340
C *** AND DO LOOP TO SUPPLY (T,Y) PAIRS TO THE ARRAY TY.                NLSP0360
C                                                                       NLSP0380
C *** Y VALUES...                                                       NLSP0400
C                                                                       NLSP0420
      DATA TY(1,2) /8.44E-1/, TY(2,2) /9.08E-1/, TY(3,2)/9.32E-1/,      NLSP0440
     1     TY(4,2) /9.36E-1/, TY(5,2) /9.25E-1/, TY(6,2)/9.08E-1/,      NLSP0460
     2     TY(7,2) /8.81E-1/, TY(8,2) /8.50E-1/, TY(9,2)/8.18E-1/,      NLSP0480
     3     TY(10,2)/7.84E-1/, TY(11,2)/7.51E-1/, TY(12,2)/7.18E-1/,     NLSP0500
     4     TY(13,2)/6.85E-1/, TY(14,2)/6.58E-1/, TY(15,2)/6.28E-1/,     NLSP0520
     5     TY(16,2)/6.03E-1/, TY(17,2)/5.80E-1/, TY(18,2)/5.58E-1/,     NLSP0540
     6     TY(19,2)/5.38E-1/, TY(20,2)/5.22E-1/, TY(21,2)/5.06E-1/,     NLSP0560
     7     TY(22,2)/4.90E-1/, TY(23,2)/4.78E-1/, TY(24,2)/4.67E-1/,     NLSP0580
     8     TY(25,2)/4.57E-1/, TY(26,2)/4.48E-1/, TY(27,2)/4.38E-1/,     NLSP0600
     9     TY(28,2)/4.31E-1/, TY(29,2)/4.24E-1/, TY(30,2)/4.20E-1/,     NLSP0620
     A     TY(31,2)/4.14E-1/, TY(32,2)/4.11E-1/, TY(33,2)/4.06E-1/      NLSP0640
C                                                                       NLSP0660
C ***  T VALUES...                                                      NLSP0680
C                                                                       NLSP0700
      DO 10 I = 1, 33                                                   NLSP0720
         TY(I,1) = -10.E+0 * FLOAT(I-1)                                 NLSP0740
 10      CONTINUE                                                       NLSP0760
C                                                                       NLSP0780
C *** SUPPLY LEAD DIMENSION OF TY IN UI(1)...                           NLSP0800
C *** (MOST COMPILERS WOULD LET US SIMPLY PASS LTY FOR UI,              NLSP0820
C *** BUT SOME, E.G. WATFIV, WILL NOT.)                                 NLSP0840
C                                                                       NLSP0860
      UI(1) = LTY                                                       NLSP0880
C                                                                       NLSP0900
C *** SPECIFY ALL DEFAULT IV AND V INPUT COMPONENTS...                  NLSP0920
C                                                                       NLSP0940
      IV(1) = 0                                                         NLSP0960
C                                                                       NLSP0980
C ... TO LIMIT THE NUMBER OF ITERATIONS TO 100, WE WOULD REPLACE THE    NLSP1000
C ... ABOVE ASSIGNMENT OF 0 TO IV(1) WITH THE FOLLOWING TWO LINES...    NLSP1020
C                                                                       NLSP1040
C     CALL IVSET(1, IV, LIV, LV, V)                                     NLSP1060
C     IV(18) = 100                                                      NLSP1080
C                                                                       NLSP1100
C                                                                       NLSP1120
C *** SUPPLY INITIAL GUESS...                                           NLSP1140
C                                                                       NLSP1160
      X(1) = 0.5E+0                                                     NLSP1180
      X(2) = 1.5E+0                                                     NLSP1200
      X(3) = -1.E+0                                                     NLSP1220
      X(4) = 1.E-2                                                      NLSP1240
      X(5) = 2.E-2                                                      NLSP1260
C                                                                       NLSP1280
C *** SET BIG TO LARGEST POSITIVE (MODEL) NUMBER...                     NLSP1300
C                                                                       NLSP1320
      BIG = R1MACH(2)                                                   NLSP1340
C                                                                       NLSP1360
C *** SUPPLY BOUNDS -- INCLUDING LOWER BOUNDS OF -BIG AND UPPER         NLSP1380
C *** BOUNDS OF BIG WHERE WE DO NOT WISH TO IMPOSE BOUNDS...            NLSP1400
C                                                                       NLSP1420
      DO 20 I = 1, 5                                                    NLSP1440
         B(1,I) = -BIG                                                  NLSP1460
         B(2,I) = BIG                                                   NLSP1480
 20      CONTINUE                                                       NLSP1500
C                                                                       NLSP1520
      B(2,4) = .0125                                                    NLSP1540
      B(1,5) = .03                                                      NLSP1560
C                                                                       NLSP1580
C *** SOLVE THE PROBLEM -- N2PB WILL PRINT THE SOLUTION FOR US.         NLSP1600
C *** WE COMPUTE 7 RESIDUAL COMPONENTS OR JACOBIAN ROWS PER CALL...     NLSP1620
C                                                                       NLSP1640
      CALL N2PB(33, 7, 5, X, B, OSB1R, OSB1J, IV, LIV, LV, V, UI, TY,   NLSP1660
     1            DUMMY)                                                NLSP1680
C                                                                       NLSP1700
C                                                                       NLSP1720
C *** NOTE -- ON MOST SYSTEMS, WE COULD SIMPLY PASS OSB1R OR OSB1J      NLSP1740
C *** AS THE LAST PARAMETER TO N2PB, SINCE OSB1R AND OSB1J IGNORE       NLSP1760
C *** THEIR UF PARAMETER.  BUT THERE EXIST SYSTEMS (E.G. UNIVAC)        NLSP1780
C *** THAT WOULD GIVE A RUN-TIME ERROR IF WE DID THIS.  HENCE WE        NLSP1800
C *** PASS THE IMMEDIATELY FOLLOWING DUMMY SUBROUTINE AS UF.            NLSP1820
C                                                                       NLSP1840
      STOP                                                              NLSP1860
      END                                                               NLSP1880
      SUBROUTINE DUMMY                                                  DUMM0000
      RETURN                                                            DUMM0020
      END                                                               DUMM0040
      SUBROUTINE OSB1R(N, ND1, N1, N2, P, X, NF, R, LTY, TY, UF)        OSB10000
C                                                                       OSB10020
C *** THIS ROUTINE COMPUTES CHUNKS OF THE RESIDUAL VECTOR, R = R(X),    OSB10040
C *** FOR TEST PROBLEM OSBORNE1.                                        OSB10060
C                                                                       OSB10080
      INTEGER N, ND1, N1, N2, P, NF, LTY                                OSB10100
      REAL X(P), R(ND1), TY(LTY,2)                                      OSB10120
      EXTERNAL UF                                                       OSB10140
C                                                                       OSB10160
      INTEGER I, I1                                                     OSB10180
      REAL TI, YI                                                       OSB10200
C                                                                       OSB10220
      I1 = 1                                                            OSB10240
      DO 10 I = N1, N2                                                  OSB10260
         TI = TY(I,1)                                                   OSB10280
         YI = TY(I,2)                                                   OSB10300
         R(I1) = YI - (X(1) + X(2)* EXP(X(4)*TI) + X(3)* EXP(X(5)*TI))  OSB10320
         I1 = I1 + 1                                                    OSB10340
 10      CONTINUE                                                       OSB10360
      RETURN                                                            OSB10380
      END                                                               OSB10400
      SUBROUTINE OSB1J(N, ND1, N1, N2, P, X, NF, J, LTY, TY, UF)        OSB10000
C                                                                       OSB10020
C *** THIS ROUTINE COMPUTES CHUNKS OF THE JACOBIAN MATRIX, J = J(X),    OSB10040
C *** FOR TEST PROBLEM OSBORNE1.                                        OSB10060
C                                                                       OSB10080
      INTEGER N, ND1, N1, N2, P, NF, LTY                                OSB10100
      REAL X(P), J(ND1,P), TY(LTY,2)                                    OSB10120
      EXTERNAL UF                                                       OSB10140
C                                                                       OSB10160
      INTEGER I, I1                                                     OSB10180
      REAL NEGONE, TI                                                   OSB10200
      DATA NEGONE/-1.E+0/                                               OSB10220
C                                                                       OSB10240
      I1 = 1                                                            OSB10260
      DO 10 I = N1, N2                                                  OSB10280
         TI = TY(I,1)                                                   OSB10300
         J(I1,1) = NEGONE                                               OSB10320
         J(I1,2) = - EXP(X(4)*TI)                                       OSB10340
         J(I1,3) = - EXP(X(5)*TI)                                       OSB10360
         J(I1,4) = TI*X(2)*J(I1,2)                                      OSB10380
         J(I1,5) = TI*X(3)*J(I1,3)                                      OSB10400
         I1 = I1 + 1                                                    OSB10420
 10      CONTINUE                                                       OSB10440
      RETURN                                                            OSB10460
      END                                                               OSB10480
C$TEST NLSR                                                             NLSR0000
C***********************************************************************NLSR0020
C                                                                       NLSR0040
C  EXAMPLE OF USE OF THE PORT PROGRAMS NSG AND NSF                      NLSR0060
C                                                                       NLSR0080
C***********************************************************************NLSR0100
C *** NSG AND NSF EXAMPLE PROGRAM ***                                   NLSR0120
C                                                                       NLSR0140
C *** FIT N = 33 DATA POINTS (T,Y) TO THE CURVE                         NLSR0160
C *** X(1) + X(2)*DEXP(T*X(4)) + X(3)*DEXP(T*X(5))                      NLSR0180
C                                                                       NLSR0200
C *** THE FOLLOWING CODE IS FOR CALLING NSG.  DIFFERENCES FOR           NLSR0220
C *** CALLING NSF ARE EXPLAINED IN COMMENTS.                            NLSR0240
C                                                                       NLSR0260
      INTEGER I, J, INC(4,2), IV(124), LIV, LTY, LV, UI(1)              NLSR0280
      DOUBLE PRECISION C(3), T(33), Y(33), V(612), X(5)                 NLSR0300
      EXTERNAL DUMMY, OSB1A, OSB1B                                      NLSR0320
      DATA LIV/124/, LTY/50/, LV/612/                                   NLSR0340
C                                                                       NLSR0360
C *** FOR NSF, OMIT OSB1B FROM THE EXTERNAL STATEMENT.                  NLSR0380
C                                                                       NLSR0400
C                                                                       NLSR0420
C *** TO MAKE THIS EXAMPLE SELF-CONTAINED, WE USE A DATA STATEMENT      NLSR0440
C *** AND DO LOOP TO SUPPLY (T(I),Y(I)) PAIRS.                          NLSR0460
C                                                                       NLSR0480
C *** Y VALUES...                                                       NLSR0500
C                                                                       NLSR0520
      DATA Y(1) /8.44D-1/, Y(2) /9.08D-1/, Y(3)/9.32D-1/,               NLSR0540
     1     Y(4) /9.36D-1/, Y(5) /9.25D-1/, Y(6)/9.08D-1/,               NLSR0560
     2     Y(7) /8.81D-1/, Y(8) /8.50D-1/, Y(9)/8.18D-1/,               NLSR0580
     3     Y(10)/7.84D-1/, Y(11)/7.51D-1/, Y(12)/7.18D-1/,              NLSR0600
     4     Y(13)/6.85D-1/, Y(14)/6.58D-1/, Y(15)/6.28D-1/,              NLSR0620
     5     Y(16)/6.03D-1/, Y(17)/5.80D-1/, Y(18)/5.58D-1/,              NLSR0640
     6     Y(19)/5.38D-1/, Y(20)/5.22D-1/, Y(21)/5.06D-1/,              NLSR0660
     7     Y(22)/4.90D-1/, Y(23)/4.78D-1/, Y(24)/4.67D-1/,              NLSR0680
     8     Y(25)/4.57D-1/, Y(26)/4.48D-1/, Y(27)/4.38D-1/,              NLSR0700
     9     Y(28)/4.31D-1/, Y(29)/4.24D-1/, Y(30)/4.20D-1/,              NLSR0720
     A     Y(31)/4.14D-1/, Y(32)/4.11D-1/, Y(33)/4.06D-1/               NLSR0740
C                                                                       NLSR0760
C ***  T VALUES...                                                      NLSR0780
C                                                                       NLSR0800
      DO 10 I = 1, 33                                                   NLSR0820
         T(I) = -10.D+0 *FLOAT(I-1)                                     NLSR0840
 10      CONTINUE                                                       NLSR0860
C                                                                       NLSR0880
C     ***  SET UP INC  ***                                              NLSR0900
C                                                                       NLSR0920
      DO 30 J = 1, 2                                                    NLSR0940
         DO 20 I = 1, 4                                                 NLSR0960
 20           INC(I,J) = 0                                              NLSR0980
 30      CONTINUE                                                       NLSR1000
      INC(2,1) = 1                                                      NLSR1020
      INC(3,2) = 1                                                      NLSR1040
C                                                                       NLSR1060
C *** SPECIFY ALL DEFAULT IV AND V INPUT COMPONENTS ***                 NLSR1080
C                                                                       NLSR1100
      IV(1) = 0                                                         NLSR1120
C                                                                       NLSR1140
C ... TO TURN OFF THE DEFAULT COMPUTATION AND PRINTING OF THE           NLSR1160
C ... REGRESSION DIAGNOSTIC VECTOR, WE WOULD REPLACE THE ABOVE          NLSR1180
C ... ASSIGNMENT OF 0 TO IV(1) WITH THE FOLLOWING THREE LINES...        NLSR1200
C                                                                       NLSR1220
C     CALL IVSET(1, IV, LIV, LV, V)                                     NLSR1240
C     IV(57) = 1                                                        NLSR1260
C     IV(14) = 1                                                        NLSR1280
C                                                                       NLSR1300
C ... THAT IS, WE SET IV(RDREQ) AND IV(COVPRT) TO 1, THUS REQUESTING    NLSR1320
C ... COMPUTATION AND PRINTING OF JUST A COVARIANCE MATRIX.             NLSR1340
C                                                                       NLSR1360
C                                                                       NLSR1380
C *** SUPPLY INITIAL GUESS...                                           NLSR1400
C                                                                       NLSR1420
      X(1) = 1.D-2                                                      NLSR1440
      X(2) = 2.D-2                                                      NLSR1460
C                                                                       NLSR1480
C *** SOLVE THE PROBLEM -- NSG WILL PRINT THE SOLUTION FOR US...        NLSR1500
C                                                                       NLSR1520
      CALL DNSG(33, 2, 3, X, C, Y, OSB1A, OSB1B, INC, 4,                NLSR1540
     1           IV, LIV, LV, V, UI, T, DUMMY)                          NLSR1560
C                                                                       NLSR1580
C *** FOR NSF, THE CORRESPONDING CALL WOULD BE...                       NLSR1600
C                                                                       NLSR1620
C     CALL NSF(33, 2, 3, X, C, Y, OSB1A, INC, 4,                        NLSR1640
C    1           IV, LIV, LV, V, UI, T, DUMMY)                          NLSR1660
C                                                                       NLSR1680
C                                                                       NLSR1700
C *** NOTE -- ON MOST SYSTEMS, WE COULD SIMPLY PASS OSB1A (OR OSB1B)    NLSR1720
C *** AS THE UF PARAMETER, SINCE OSB1A AND OSB1B IGNORE THIS            NLSR1740
C *** PARAMETER.  BUT THERE EXIST SYSTEMS (E.G. UNIVAC) THAT WOULD      NLSR1760
C *** GIVE A RUN-TIME ERROR IF WE DID THIS.  HENCE WE PASS THE          NLSR1780
C *** IMMEDIATELY FOLLOWING DUMMY SUBROUTINE AS UF.                     NLSR1800
C                                                                       NLSR1820
      STOP                                                              NLSR1840
      END                                                               NLSR1860
      SUBROUTINE DUMMY                                                  DUMM0000
      RETURN                                                            DUMM0020
      END                                                               DUMM0040
      SUBROUTINE OSB1A(N, P, L, X, NF, A, UI, T, UF)                    OSB10000
C                                                                       OSB10020
C *** THIS ROUTINE COMPUTES THE A MATRIX, A = A(X),                     OSB10040
C *** FOR TEST PROBLEM OSBORNE1.                                        OSB10060
C                                                                       OSB10080
      INTEGER L, N, NF, P, UI(1)                                        OSB10100
      DOUBLE PRECISION A(N,1), T(N), X(P)                               OSB10120
      EXTERNAL UF                                                       OSB10140
C                                                                       OSB10160
      INTEGER I                                                         OSB10180
      DOUBLE PRECISION ONE, TI                                          OSB10200
      DATA ONE/1.D+0/                                                   OSB10220
C                                                                       OSB10240
      DO 10 I = 1, N                                                    OSB10260
         TI = T(I)                                                      OSB10280
         A(I,1) = ONE                                                   OSB10300
         A(I,2) = DEXP(TI*X(1))                                         OSB10320
         A(I,3) = DEXP(TI*X(2))                                         OSB10340
 10      CONTINUE                                                       OSB10360
      RETURN                                                            OSB10380
      END                                                               OSB10400
      SUBROUTINE OSB1B(N, P, L, X, NF, B, UI, T, UF)                    OSB10000
C                                                                       OSB10020
C *** THIS ROUTINE COMPUTES THE JACOBIAN TENSOR, B = B(X),              OSB10040
C *** FOR TEST PROBLEM OSBORNE1.                                        OSB10060
C                                                                       OSB10080
      INTEGER L, N, NF, P, UI(1)                                        OSB10100
      DOUBLE PRECISION B(N,2), T(N), X(P)                               OSB10120
      EXTERNAL UF                                                       OSB10140
C                                                                       OSB10160
      INTEGER I                                                         OSB10180
      DOUBLE PRECISION TI                                               OSB10200
C                                                                       OSB10220
      DO 10 I = 1, N                                                    OSB10240
         TI = T(I)                                                      OSB10260
         B(I,1) = TI * DEXP(TI*X(1))                                    OSB10280
         B(I,2) = TI * DEXP(TI*X(2))                                    OSB10300
 10      CONTINUE                                                       OSB10320
      RETURN                                                            OSB10340
      END                                                               OSB10360
C$TEST NMSK                                                             NMSK0000
C***********************************************************************NMSK0020
C                                                                       NMSK0040
C  EXAMPLE OF USE OF THE PORT PROGRAMS NSGB AND NSFB                    NMSK0060
C                                                                       NMSK0080
C***********************************************************************NMSK0100
C *** NSGB AND NSFB EXAMPLE PROGRAM ***                                 NMSK0120
C                                                                       NMSK0140
C *** FIT N = 33 DATA POINTS (T,Y) TO THE CURVE                         NMSK0160
C *** X(1) + X(2)*EXP(T*X(4)) + X(3)*EXP(T*X(5))                        NMSK0180
C                                                                       NMSK0200
C *** THE FOLLOWING CODE IS FOR CALLING NSGB.  DIFFERENCES FOR          NMSK0220
C *** CALLING NSFB ARE EXPLAINED IN COMMENTS.                           NMSK0240
C                                                                       NMSK0260
      INTEGER I, J, INC(4,2), IV(130), LIV, LTY, LV, UI(1)              NMSK0280
      REAL BX(2,2), BIG, C(3), T(33), Y(33), V(461), X(5)               NMSK0300
      EXTERNAL DUMMY, OSB1A, OSB1B, R1MACH                              NMSK0320
      REAL R1MACH                                                       NMSK0340
C                                                                       NMSK0360
C *** FOR NSFB, OMIT OSB1B FROM THE EXTERNAL STATEMENT.                 NMSK0380
C                                                                       NMSK0400
      DATA LIV/130/, LTY/50/, LV/461/                                   NMSK0420
C                                                                       NMSK0440
C *** TO MAKE THIS EXAMPLE SELF-CONTAINED, WE USE A DATA STATEMENT      NMSK0460
C *** AND DO LOOP TO SUPPLY (T(I),Y(I)) PAIRS.                          NMSK0480
C                                                                       NMSK0500
C *** Y VALUES...                                                       NMSK0520
C                                                                       NMSK0540
      DATA Y(1) /8.44E-1/, Y(2) /9.08E-1/, Y(3)/9.32E-1/,               NMSK0560
     1     Y(4) /9.36E-1/, Y(5) /9.25E-1/, Y(6)/9.08E-1/,               NMSK0580
     2     Y(7) /8.81E-1/, Y(8) /8.50E-1/, Y(9)/8.18E-1/,               NMSK0600
     3     Y(10)/7.84E-1/, Y(11)/7.51E-1/, Y(12)/7.18E-1/,              NMSK0620
     4     Y(13)/6.85E-1/, Y(14)/6.58E-1/, Y(15)/6.28E-1/,              NMSK0640
     5     Y(16)/6.03E-1/, Y(17)/5.80E-1/, Y(18)/5.58E-1/,              NMSK0660
     6     Y(19)/5.38E-1/, Y(20)/5.22E-1/, Y(21)/5.06E-1/,              NMSK0680
     7     Y(22)/4.90E-1/, Y(23)/4.78E-1/, Y(24)/4.67E-1/,              NMSK0700
     8     Y(25)/4.57E-1/, Y(26)/4.48E-1/, Y(27)/4.38E-1/,              NMSK0720
     9     Y(28)/4.31E-1/, Y(29)/4.24E-1/, Y(30)/4.20E-1/,              NMSK0740
     A     Y(31)/4.14E-1/, Y(32)/4.11E-1/, Y(33)/4.06E-1/               NMSK0760
C                                                                       NMSK0780
C ***  T VALUES...                                                      NMSK0800
C                                                                       NMSK0820
      DO 10 I = 1, 33                                                   NMSK0840
         T(I) = -10.E+0 * FLOAT(I-1)                                    NMSK0860
 10      CONTINUE                                                       NMSK0880
C                                                                       NMSK0900
C     ***  SET UP INC  ***                                              NMSK0920
C                                                                       NMSK0940
      DO 30 J = 1, 2                                                    NMSK0960
         DO 20 I = 1, 4                                                 NMSK0980
 20           INC(I,J) = 0                                              NMSK1000
 30      CONTINUE                                                       NMSK1020
      INC(2,1) = 1                                                      NMSK1040
      INC(3,2) = 1                                                      NMSK1060
C                                                                       NMSK1080
C *** SPECIFY ALL DEFAULT IV AND V INPUT COMPONENTS ***                 NMSK1100
C                                                                       NMSK1120
      IV(1) = 0                                                         NMSK1140
C                                                                       NMSK1160
C ... TO SET THE MAXIMUM NUMBER OF ITERATIONS TO 100 AND TURN OFF       NMSK1180
C ... THE PRINTING OF THE ITERATION SUMMARY, WE WOULD REPLACE THE       NMSK1200
C ... ABOVE ASSIGNMENT OF 0 TO IV(1) WITH THE FOLLOWING THREE LINES...  NMSK1220
C                                                                       NMSK1240
C     CALL IVSET(1, IV, LIV, LV, V)                                     NMSK1260
C     IV(18) = 100                                                      NMSK1280
C     IV(19) = 0                                                        NMSK1300
C                                                                       NMSK1320
C                                                                       NMSK1340
C *** SUPPLY INITIAL GUESS...                                           NMSK1360
C                                                                       NMSK1380
      X(1) = 1.E-2                                                      NMSK1400
      X(2) = 2.E-2                                                      NMSK1420
C                                                                       NMSK1440
C *** SET BIG TO LARGEST POSITIVE (MODEL) NUMBER...                     NMSK1460
C                                                                       NMSK1480
      BIG = R1MACH(2)                                                   NMSK1500
C                                                                       NMSK1520
C *** SUPPLY BOUNDS -- INCLUDING LOWER BOUNDS OF -BIG AND UPPER         NMSK1540
C *** BOUNDS OF BIG WHERE WE DO NOT WISH TO IMPOSE BOUNDS...            NMSK1560
C                                                                       NMSK1580
      BX(1,1) = -BIG                                                    NMSK1600
      BX(2,1) = .0125E+0                                                NMSK1620
      BX(1,2) = .03E+0                                                  NMSK1640
      BX(2,2) = BIG                                                     NMSK1660
C                                                                       NMSK1680
C *** SOLVE THE PROBLEM -- NSGB WILL PRINT THE SOLUTION FOR US...       NMSK1700
C                                                                       NMSK1720
      CALL NSGB(33, 2, 3, X, BX, C, Y, OSB1A, OSB1B, INC, 4,            NMSK1740
     1           IV, LIV, LV, V, UI, T, DUMMY)                          NMSK1760
C                                                                       NMSK1780
C *** FOR NSFB, THE CORRESPONDING CALL WOULD BE...                      NMSK1800
C                                                                       NMSK1820
C     CALL NSFB(33, 2, 3, X, BX, C, Y, OSB1A, INC, 4,                   NMSK1840
C    1           IV, LIV, LV, V, UI, T, DUMMY)                          NMSK1860
C                                                                       NMSK1880
C                                                                       NMSK1900
C *** NOTE -- ON MOST SYSTEMS, WE COULD SIMPLY PASS OSB1A (OR OSB1B)    NMSK1920
C *** AS THE UF PARAMETER, SINCE OSB1A AND OSB1B IGNORE THIS            NMSK1940
C *** PARAMETER.  BUT THERE EXIST SYSTEMS (E.G. UNIVAC) THAT WOULD      NMSK1960
C *** GIVE A RUN-TIME ERROR IF WE DID THIS.  HENCE WE PASS THE          NMSK1980
C *** IMMEDIATELY FOLLOWING DUMMY SUBROUTINE AS UF.                     NMSK2000
C                                                                       NMSK2020
      STOP                                                              NMSK2040
      END                                                               NMSK2060
      SUBROUTINE DUMMY                                                  DUMM0000
      RETURN                                                            DUMM0020
      END                                                               DUMM0040
      SUBROUTINE OSB1A(N, P, L, X, NF, A, UI, T, UF)                    OSB10000
C                                                                       OSB10020
C *** THIS ROUTINE COMPUTES THE A MATRIX, A = A(X),                     OSB10040
C *** FOR TEST PROBLEM OSBORNE1.                                        OSB10060
C                                                                       OSB10080
      INTEGER L, N, NF, P, UI(1)                                        OSB10100
      REAL A(N,1), T(N), X(P)                                           OSB10120
      EXTERNAL UF                                                       OSB10140
C                                                                       OSB10160
      INTEGER I                                                         OSB10180
      REAL ONE, TI                                                      OSB10200
      DATA ONE/1.E+0/                                                   OSB10220
C                                                                       OSB10240
      DO 10 I = 1, N                                                    OSB10260
         TI = T(I)                                                      OSB10280
         A(I,1) = ONE                                                   OSB10300
         A(I,2) =  EXP(TI*X(1))                                         OSB10320
         A(I,3) =  EXP(TI*X(2))                                         OSB10340
 10      CONTINUE                                                       OSB10360
      RETURN                                                            OSB10380
      END                                                               OSB10400
      SUBROUTINE OSB1B(N, P, L, X, NF, B, UI, T, UF)                    OSB10000
C                                                                       OSB10020
C *** THIS ROUTINE COMPUTES THE JACOBIAN TENSOR, B = B(X),              OSB10040
C *** FOR TEST PROBLEM OSBORNE1.                                        OSB10060
C                                                                       OSB10080
      INTEGER L, N, NF, P, UI(1)                                        OSB10100
      REAL B(N,2), T(N), X(P)                                           OSB10120
      EXTERNAL UF                                                       OSB10140
C                                                                       OSB10160
      INTEGER I                                                         OSB10180
      REAL TI                                                           OSB10200
C                                                                       OSB10220
      DO 10 I = 1, N                                                    OSB10240
         TI = T(I)                                                      OSB10260
         B(I,1) = TI *  EXP(TI*X(1))                                    OSB10280
         B(I,2) = TI *  EXP(TI*X(2))                                    OSB10300
 10      CONTINUE                                                       OSB10320
      RETURN                                                            OSB10340
      END                                                               OSB10360
C$TEST LRPA                                                             LRPA0000
C***********************************************************************LRPA0020
C                                                                       LRPA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM LINPR                             LRPA0060
C                                                                       LRPA0080
C***********************************************************************LRPA0100
       REAL X(4),B(3),C(4),A(3,4),SIMP(8)                               LRPA0120
       INTEGER ISIMP(8)                                                 LRPA0140
       N=4                                                              LRPA0160
       IA=3                                                             LRPA0180
       M=3                                                              LRPA0200
       IE=1                                                             LRPA0220
C                                                                       LRPA0240
C SET UP GENERAL CONSTRAINTS                                            LRPA0260
C                                                                       LRPA0280
       DO 10 J=1,N                                                      LRPA0300
          A(1,J)=FLOAT(J)                                               LRPA0320
          A(2,J)=0.0                                                    LRPA0340
          A(3,J)=0.0                                                    LRPA0360
  10   CONTINUE                                                         LRPA0380
       A(2,1)=1.0                                                       LRPA0400
       A(2,2)=1.0                                                       LRPA0420
       A(3,2)=-1.0                                                      LRPA0440
       A(3,4)=-1.0                                                      LRPA0460
       B(1)=5                                                           LRPA0480
       B(2)=1.0                                                         LRPA0500
       B(3)=-5.0                                                        LRPA0520
C                                                                       LRPA0540
C SET UP SIMPLE CONSTRAINTS                                             LRPA0560
C                                                                       LRPA0580
      IS=8                                                              LRPA0600
      DO 20 I=1,N                                                       LRPA0620
         SIMP(I)=FLOAT(-I)                                              LRPA0640
         ISIMP(I)=I                                                     LRPA0660
         SIMP(I+N)=10.0                                                 LRPA0680
         ISIMP(I+N)=-I                                                  LRPA0700
  20   CONTINUE                                                         LRPA0720
C                                                                       LRPA0740
C SET UP COST VECTOR AND INITIAL GUESS                                  LRPA0760
C                                                                       LRPA0780
      DO 30 I=1,N                                                       LRPA0800
         C(I)=FLOAT(I+1)                                                LRPA0820
         X(I)=1.0                                                       LRPA0840
  30  CONTINUE                                                          LRPA0860
C                                                                       LRPA0880
C CALL LINEAR PROGRAMMING PACKAGE                                       LRPA0900
C                                                                       LRPA0920
      CALL LINPR(A,M,N,IA,B,C,X,15,CTX,IS,SIMP,ISIMP,IE)                LRPA0940
      WRITE(6,21)(X(I),I=1,N)                                           LRPA0960
 21   FORMAT(11H SOLUTION: ,4E15.6)                                     LRPA0980
      WRITE(6,22)CTX                                                    LRPA1000
 22   FORMAT(17H FUNCTION VALUE: ,E15.5)                                LRPA1020
      STOP                                                              LRPA1040
      END                                                               LRPA1060
C$TEST LRPB                                                             LRPB0000
C***********************************************************************LRPB0020
C                                                                       LRPB0040
C  FIRST EXAMPLE OF USE OF THE PORT PROGRAM LINPA                       LRPB0060
C                                                                       LRPB0080
C***********************************************************************LRPB0100
       REAL X(4),B(3),C(4),A(3,4),SIMP(8)                               LRPB0120
       EXTERNAL LPMAN, PRINT                                            LRPB0140
       INTEGER ISIMP(8),IPTG(3)                                         LRPB0160
       REAL U(4)                                                        LRPB0180
       N=4                                                              LRPB0200
       IA=3                                                             LRPB0220
       M=3                                                              LRPB0240
       IE=1                                                             LRPB0260
C                                                                       LRPB0280
C SET UP GENERAL CONSTRAINTS                                            LRPB0300
C                                                                       LRPB0320
       DO 10 J=1,N                                                      LRPB0340
          A(1,J)=FLOAT(J)                                               LRPB0360
          A(2,J)=0.0                                                    LRPB0380
          A(3,J)=0.0                                                    LRPB0400
  10   CONTINUE                                                         LRPB0420
       A(2,1)=1.0                                                       LRPB0440
       A(2,2)=1.0                                                       LRPB0460
       A(3,2)=-1.0                                                      LRPB0480
       A(3,4)=-1.0                                                      LRPB0500
       B(1)=5                                                           LRPB0520
       B(2)=1.0                                                         LRPB0540
       B(3)=-5.0                                                        LRPB0560
C                                                                       LRPB0580
C SET UP SIMPLE CONSTRAINTS                                             LRPB0600
C                                                                       LRPB0620
      IS=8                                                              LRPB0640
      DO 20 I=1,N                                                       LRPB0660
         SIMP(I)=FLOAT(-I)                                              LRPB0680
         ISIMP(I)=I                                                     LRPB0700
         SIMP(I+N)=10.0                                                 LRPB0720
         ISIMP(I+N)=-I                                                  LRPB0740
  20   CONTINUE                                                         LRPB0760
C                                                                       LRPB0780
C SET UP COST VECTOR AND INITIAL GUESS                                  LRPB0800
C                                                                       LRPB0820
      DO 30 I=1,N                                                       LRPB0840
         C(I)=FLOAT(I+1)                                                LRPB0860
         X(I)=1.0                                                       LRPB0880
  30  CONTINUE                                                          LRPB0900
C                                                                       LRPB0920
C CALL LINEAR PROGRAMMING PACKAGE                                       LRPB0940
C                                                                       LRPB0960
      CALL LINPA(A,M,N,LPMAN,IA,B,C,X,15,CTX,IS,SIMP,ISIMP,IE,          LRPB0980
     1PRINT,IAG,IAS,IPTG,U)                                             LRPB1000
      IWRITE=I1MACH(2)                                                  LRPB1020
      WRITE(IWRITE,21)(X(I),I=1,N)                                      LRPB1040
 21   FORMAT(11H SOLUTION: ,4E15.6)                                     LRPB1060
      WRITE(IWRITE,22)CTX                                               LRPB1080
 22   FORMAT(17H FUNCTION VALUE: ,E15.5)                                LRPB1100
      STOP                                                              LRPB1120
      END                                                               LRPB1140
       SUBROUTINE PRINT(A,M,N,AMAN,IA,B,C,X,CTX,IS,SIMP,ISIMP,IE,       PRIN0000
     1 ITER,IPTG,IAG,IAS,U,IEND)                                        PRIN0020
C                                                                       PRIN0040
C THIS IS A PRINT ROUTINE                                               PRIN0060
C                                                                       PRIN0080
       REAL CTX,A(1),X(N),B(1)                                          PRIN0100
       LOGICAL IEND                                                     PRIN0120
       EXTERNAL AMAN                                                    PRIN0140
       INTEGER IA(1),IPTG(N),ISIMP(1),S                                 PRIN0160
       REAL SIMP(1),C(1),U(1)                                           PRIN0180
       IEND = .FALSE.                                                   PRIN0200
       IWRITE=I1MACH(2)                                                 PRIN0220
       TOL = -R1MACH(4)*(5.0+4.0*SASUM(N,X,1))*10.0                     PRIN0240
       IAGPE=IAG+IE                                                     PRIN0260
       WRITE(IWRITE,1)ITER,CTX,IAGPE,IAS                                PRIN0280
  1    FORMAT(/14H AT ITERATION ,I5,6H CTX= ,E15.5,                     PRIN0300
     1  /18H NO.OF ACT. GEN.= ,I5,15H NO.OF ACT.SIM=,I5)                PRIN0320
       WRITE(IWRITE,2)(X(I),I=1,N)                                      PRIN0340
  2    FORMAT(3H X ,5E15.5)                                             PRIN0360
       DO 10 I=1,M                                                      PRIN0380
          CALL AMAN(.TRUE.,A,IA,N,I,X,TOUT)                             PRIN0400
          TOUT=TOUT-B(I)                                                PRIN0420
          IF (TOUT .LT. TOL)IEND=.TRUE.                                 PRIN0440
          WRITE(IWRITE,9)I,TOUT                                         PRIN0460
  9       FORMAT(15H AT CONSTRAINT ,I5,11H RESIDUAL= ,E15.5)            PRIN0480
 10    CONTINUE                                                         PRIN0500
       IF (IAGPE .EQ. 0)GO TO 12                                        PRIN0520
       WRITE(IWRITE,11)(IPTG(I),I=1,IAGPE)                              PRIN0540
 11    FORMAT(29H  ACTIVE GENERAL CONSTRAINTS ,10I4)                    PRIN0560
 12    IF (IAS .LT. 1)RETURN                                            PRIN0580
       DO 15 I=1,IAS                                                    PRIN0600
          IP=IABS(ISIMP(I))                                             PRIN0620
          IF (ISIMP(I) .GT. 0)WRITE(IWRITE,13)IP                        PRIN0640
 13       FORMAT(18H LOWER BOUND ON X(,I2,11H) IS ACTIVE)               PRIN0660
          IF (ISIMP(I) .LT. 0)WRITE(IWRITE,14)IP                        PRIN0680
 14       FORMAT(18H UPPER BOUND ON X(,I2,11H) IS ACTIVE)               PRIN0700
 15    CONTINUE                                                         PRIN0720
       RETURN                                                           PRIN0740
       END                                                              PRIN0760
C$TEST LRPG                                                             LRPG0000
C***********************************************************************LRPG0020
C                                                                       LRPG0040
C  SECOND EXAMPLE OF USE OF THE PORT PROGRAM LINPA                      LRPG0060
C                                                                       LRPG0080
C***********************************************************************LRPG0100
        REAL X(30), C(30), B(29), SIMP(31), U(30)                       LRPG0120
        INTEGER ISIMP(31), IPTG(30)                                     LRPG0140
        EXTERNAL LPRNT,AMAN                                             LRPG0160
        COMMON /CSTAK/DSTAK                                             LRPG0180
        DOUBLE PRECISION DSTAK(2000)                                    LRPG0200
C                                                                       LRPG0220
C  GET WORK SPACE FROM THE STACK                                        LRPG0240
C                                                                       LRPG0260
        CALL ISTKIN(2000,4)                                             LRPG0280
        N=30                                                            LRPG0300
        M=29                                                            LRPG0320
        IE=0                                                            LRPG0340
        IS=31                                                           LRPG0360
C                                                                       LRPG0380
C SET UP RIGHT HAND SIDE                                                LRPG0400
C                                                                       LRPG0420
        DO 10 I =1,M                                                    LRPG0440
           B(I) = FLOAT(I)/10.0                                         LRPG0460
  10    CONTINUE                                                        LRPG0480
C                                                                       LRPG0500
C SET UP INITIAL GUESS, OBJECTIVE FUNCTION AND SIMPLE CONSTRAINTS       LRPG0520
C                                                                       LRPG0540
       SIGN=-1.0                                                        LRPG0560
       DO 20 I=1,N                                                      LRPG0580
          X(I)=3.0*FLOAT(I)                                             LRPG0600
          C(I)=SIGN*FLOAT(I)                                            LRPG0620
          SIGN=-SIGN                                                    LRPG0640
          ISIMP(I)=I                                                    LRPG0660
          SIMP(I)=FLOAT(I)                                              LRPG0680
  20   CONTINUE                                                         LRPG0700
       ISIMP(N+1)=-N                                                    LRPG0720
       SIMP(N+1)=3.0*FLOAT(N)                                           LRPG0740
C                                                                       LRPG0760
C SOLVE THE PROBLEM AND PRINT OUT THE RESULTS                           LRPG0780
C                                                                       LRPG0800
       CALL LINPA(A,M,N,AMAN,IA,B,C,X,100,CTX,IS,SIMP,ISIMP,IE,         LRPG0820
     1 LPRNT,IAG,IAS,IPTG,U)                                            LRPG0840
       IWRITE=I1MACH(2)                                                 LRPG0860
       WRITE(IWRITE,21)(X(I),I=1,N)                                     LRPG0880
  21   FORMAT(10H SOLUTION ,5E15.5)                                     LRPG0900
C                                                                       LRPG0920
       IF(IAG .GT. 1)WRITE(IWRITE,22)(IPTG(I),I=1,IAG)                  LRPG0940
  22   FORMAT( 28H ACTIVE GENERAL CONSTRAINTS ,15I3)                    LRPG0960
C                                                                       LRPG0980
       IF (IAS .EQ. 0)STOP                                              LRPG1000
       DO 30 I=1,IAS                                                    LRPG1020
          IP=IABS(ISIMP(I))                                             LRPG1040
          WRITE(IWRITE,23)IP                                            LRPG1060
  23      FORMAT(12H BOUND ON X(,I2,11H) IS ACTIVE)                     LRPG1080
  30   CONTINUE                                                         LRPG1100
       STOP                                                             LRPG1120
       END                                                              LRPG1140
       SUBROUTINE AMAN(L,A,IA,N,I,TVEC,T)                               AMAN0000
       LOGICAL L                                                        AMAN0020
       REAL TVEC(N)                                                     AMAN0040
       IF (L) GOTO 20                                                   AMAN0060
C                                                                       AMAN0080
C THE ITH ROW IS REQUESTED                                              AMAN0100
C                                                                       AMAN0120
       DO 10 J=1,N                                                      AMAN0140
          TVEC(J)=0.0                                                   AMAN0160
  10   CONTINUE                                                         AMAN0180
       TVEC(I+1)=1.0                                                    AMAN0200
       TVEC(I)=-1.0                                                     AMAN0220
       RETURN                                                           AMAN0240
C                                                                       AMAN0260
C THIS IS INNERPRODUCT REQUEST                                          AMAN0280
C                                                                       AMAN0300
  20   T=TVEC(I+1)-TVEC(I)                                              AMAN0320
       RETURN                                                           AMAN0340
       END                                                              AMAN0360
C$TEST LRPF                                                             LRPF0000
C***********************************************************************LRPF0020
C                                                                       LRPF0040
C  EXAMPLE OF USE OF THE PORT PROGRAM FEASA                             LRPF0060
C                                                                       LRPF0080
C***********************************************************************LRPF0100
       REAL X(4),B(5),A(5,4),SIMP(8)                                    LRPF0120
       EXTERNAL LPMAN, FPRNT                                            LRPF0140
       INTEGER ISIMP(8), IPTG(10)                                       LRPF0160
       DATA B(1)/5.0/,B(2)/9.0/,B(3)/9.0/,B(4)/1.0/,B(5)/-5.0/          LRPF0180
       N=4                                                              LRPF0200
       IA=5                                                             LRPF0220
       M=5                                                              LRPF0240
       IE=2                                                             LRPF0260
       IWRITE=I1MACH(2)                                                 LRPF0280
C                                                                       LRPF0300
C SET UP GENERAL CONSTRAINTS                                            LRPF0320
C                                                                       LRPF0340
       DO 10 J=1,N                                                      LRPF0360
          A(1,J)=FLOAT(J)                                               LRPF0380
          A(2,J)=FLOAT(J+1)                                             LRPF0400
          A(3,J)=FLOAT(J*J)                                             LRPF0420
          A(4,J)=0.0                                                    LRPF0440
          A(5,J)=0.0                                                    LRPF0460
  10   CONTINUE                                                         LRPF0480
       A(4,1)=1.0                                                       LRPF0500
       A(4,2)=1.0                                                       LRPF0520
       A(5,2)=-1.0                                                      LRPF0540
       A(5,4)=-1.0                                                      LRPF0560
C                                                                       LRPF0580
C SET UP SIMPLE CONSTRAINTS                                             LRPF0600
C                                                                       LRPF0620
      IS=8                                                              LRPF0640
      DO 20 I=1,N                                                       LRPF0660
         SIMP(I)=FLOAT(-I)                                              LRPF0680
         ISIMP(I)=I                                                     LRPF0700
         SIMP(I+N)=FLOAT(I+2)                                           LRPF0720
         ISIMP(I+N)=-I                                                  LRPF0740
  20   CONTINUE                                                         LRPF0760
C                                                                       LRPF0780
C SET UP INITIAL GUESS                                                  LRPF0800
C                                                                       LRPF0820
      DO 30 I=1,N                                                       LRPF0840
         X(I)=1.0                                                       LRPF0860
  30  CONTINUE                                                          LRPF0880
C                                                                       LRPF0900
C CALL FEASIBLE POINT ALGORITHM                                         LRPF0920
C                                                                       LRPF0940
      CALL FEASA(A,M,N,LPMAN,IA,B,X,15,IS,SIMP,ISIMP,IE,                LRPF0960
     1 FPRNT,IAG,IAS,IPTG)                                              LRPF0980
      WRITE(IWRITE,31)(X(I),I=1,N)                                      LRPF1000
 31   FORMAT(11H SOLUTION: ,4E15.6)                                     LRPF1020
C                                                                       LRPF1040
C CHECK ANSWER                                                          LRPF1060
C                                                                       LRPF1080
      DO 40 I=1,M                                                       LRPF1100
         S = SDOT(N, A(I,1), IA, X, 1) -B(I)                            LRPF1120
         WRITE(IWRITE,41)I, S                                           LRPF1140
 40   CONTINUE                                                          LRPF1160
 41   FORMAT(28H THE RESIDUAL AT CONSTRAINT ,I4,4H IS ,E15.5)           LRPF1180
      STOP                                                              LRPF1200
      END                                                               LRPF1220
       SUBROUTINE FPRNT(A,M,N,AMAN,IA,B,C,X,CTX,IS,SIMP,ISIMP,IE,       FPRN0000
     1 ITER,IPTG,IAG,IAS,U,IEND,IPHAS)                                  FPRN0020
C                                                                       FPRN0040
C THIS IS A PRINT ROUTINE                                               FPRN0060
C                                                                       FPRN0080
       REAL CTX,A(1),X(N),B(1)                                          FPRN0100
       LOGICAL IEND                                                     FPRN0120
       EXTERNAL AMAN                                                    FPRN0140
       INTEGER IA(1),IPTG(N),ISIMP(1),S                                 FPRN0160
       REAL SIMP(1),C(1),U(1)                                           FPRN0180
       IEND = .FALSE.                                                   FPRN0200
       IWRITE=I1MACH(2)                                                 FPRN0220
       IAGPE=IAG+IE                                                     FPRN0240
       WRITE(IWRITE,1)ITER,IAGPE,IAS                                    FPRN0260
  1    FORMAT(/14H AT ITERATION ,I5,                                    FPRN0280
     1  /18H NO.OF ACT. GEN.= ,I5,15H NO.OF ACT.SIM= I5)                FPRN0300
       WRITE(IWRITE,2)(X(I),I=1,N)                                      FPRN0320
 2     FORMAT(3H X ,5E15.5)                                             FPRN0340
       DO 10 I=1,M                                                      FPRN0360
          CALL AMAN(.TRUE.,A,IA,N,I,X,TOUT)                             FPRN0380
          TOUT=TOUT-B(I)                                                FPRN0400
          WRITE(IWRITE,9)I,TOUT                                         FPRN0420
  9       FORMAT(15H AT CONSTRAINT ,I5,11H RESIDUAL= ,E15.5)            FPRN0440
 10    CONTINUE                                                         FPRN0460
       IF (IAGPE.EQ.0)GO TO 12                                          FPRN0480
       WRITE(IWRITE,11)(IPTG(I),I=1,IAGPE)                              FPRN0500
 11    FORMAT(29H  ACTIVE GENERAL CONSTRAINTS ,10I4)                    FPRN0520
 12    IF (IAS.LT.1)RETURN                                              FPRN0540
       DO 15 I=1,IAS                                                    FPRN0560
          IP=IABS(ISIMP(I))                                             FPRN0580
          IF (ISIMP(I).GT.0)WRITE(IWRITE,13)IP                          FPRN0600
 13       FORMAT(18H LOWER BOUND ON X(,I2,11H) IS ACTIVE)               FPRN0620
          IF (ISIMP(I).LT.0)WRITE(IWRITE,14)IP                          FPRN0640
 14       FORMAT(18H UPPER BOUND ON X(,I2,11H) IS ACTIVE)               FPRN0660
 15    CONTINUE                                                         FPRN0680
       RETURN                                                           FPRN0700
       END                                                              FPRN0720
C$TEST LRPE                                                             LRPE0000
C***********************************************************************LRPE0020
C                                                                       LRPE0040
C  EXAMPLE OF USE OF THE PORT PROGRAM FEAS                              LRPE0060
C                                                                       LRPE0080
C***********************************************************************LRPE0100
       REAL X(4),B(5),A(5,4),SIMP(8)                                    LRPE0120
       INTEGER ISIMP(8)                                                 LRPE0140
       DATA B(1)/5.0/,B(2)/9.0/,B(3)/9.0/,B(4)/1.0/,B(5)/-5.0/          LRPE0160
       N=4                                                              LRPE0180
       IA=5                                                             LRPE0200
       M=5                                                              LRPE0220
       IE=2                                                             LRPE0240
       IWRITE=I1MACH(2)                                                 LRPE0260
C                                                                       LRPE0280
C SET UP GENERAL CONSTRAINTS                                            LRPE0300
C                                                                       LRPE0320
       DO 10 J=1,N                                                      LRPE0340
          A(1,J)=FLOAT(J)                                               LRPE0360
          A(2,J)=FLOAT(J+1)                                             LRPE0380
          A(3,J)=FLOAT(J*J)                                             LRPE0400
          A(4,J)=0.0                                                    LRPE0420
          A(5,J)=0.0                                                    LRPE0440
  10   CONTINUE                                                         LRPE0460
       A(4,1)=1.0                                                       LRPE0480
       A(4,2)=1.0                                                       LRPE0500
       A(5,2)=-1.0                                                      LRPE0520
       A(5,4)=-1.0                                                      LRPE0540
C                                                                       LRPE0560
C SET UP SIMPLE CONSTRAINTS                                             LRPE0580
C                                                                       LRPE0600
      IS=8                                                              LRPE0620
      DO 20 I=1,N                                                       LRPE0640
         SIMP(I)=FLOAT(-I)                                              LRPE0660
         ISIMP(I)=I                                                     LRPE0680
         SIMP(I+N)=FLOAT(I+2)                                           LRPE0700
         ISIMP(I+N)=-I                                                  LRPE0720
  20   CONTINUE                                                         LRPE0740
C                                                                       LRPE0760
C SET UP INITIAL GUESS                                                  LRPE0780
C                                                                       LRPE0800
      DO 30 I=1,N                                                       LRPE0820
         X(I)=1.0                                                       LRPE0840
  30  CONTINUE                                                          LRPE0860
C                                                                       LRPE0880
C CALL FEASIBLE POINT ALGORITHM                                         LRPE0900
C                                                                       LRPE0920
      CALL FEAS(A,M,N,IA,B,X,15,IS,SIMP,ISIMP,IE)                       LRPE0940
      WRITE(IWRITE,31)(X(I),I=1,N)                                      LRPE0960
 31   FORMAT(11H SOLUTION: ,4E15.6)                                     LRPE0980
C                                                                       LRPE1000
C CHECK ANSWER                                                          LRPE1020
C                                                                       LRPE1040
      DO 40 I=1,M                                                       LRPE1060
         S = SDOT(N, A(I,1), IA, X, 1) -B(I)                            LRPE1080
         WRITE(IWRITE,41)I, S                                           LRPE1100
 40   CONTINUE                                                          LRPE1120
 41   FORMAT(28H THE RESIDUAL AT CONSTRAINT ,I4,4H IS ,E15.5)           LRPE1140
      STOP                                                              LRPE1160
      END                                                               LRPE1180
C$TEST QPRA                                                             QPRA0000
C***********************************************************************QPRA0020
C                                                                       QPRA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM IQP                               QPRA0060
C                                                                       QPRA0080
C***********************************************************************QPRA0100
C TEST PROGRAM FOR IQP                                                  QPRA0120
        REAL X(10), Q(10,10), A(10,10), BL(10), BU(10)                  QPRA0140
        REAL C(10), B(10)                                               QPRA0160
        REAL SUM(10), FUNCT                                             QPRA0180
        INTEGER N, I, J, IPRINT, MAXITR, IQ, M, IA                      QPRA0200
        INTEGER IEQ                                                     QPRA0220
        DOUBLE PRECISION DSTAK(2000)                                    QPRA0240
        COMMON /CSTAK/DSTAK                                             QPRA0260
C                                                                       QPRA0280
        IWRITE = I1MACH(2)                                              QPRA0300
        CALL ISTKIN(2000,4)                                             QPRA0320
        N = 4                                                           QPRA0340
        M = 3                                                           QPRA0360
C SET UP INITIAL GUESS AND QUADRATIC FUNCTION                           QPRA0380
        DO 1 I=1,N                                                      QPRA0400
            X(I) = I + 1.                                               QPRA0420
            C(I) = 8. - I                                               QPRA0440
            DO 2 J=1,N                                                  QPRA0460
               Q(I,J) = FLOAT(IABS(I-J))                                QPRA0480
 2          CONTINUE                                                    QPRA0500
            Q(I,I) = 1.69                                               QPRA0520
C SET UP GENERAL CONSTRAINTS                                            QPRA0540
            DO 16 J=1,M                                                 QPRA0560
               A(J,I) = 0.                                              QPRA0580
 16         CONTINUE                                                    QPRA0600
 1      CONTINUE                                                        QPRA0620
        DO 3 I=1,M                                                      QPRA0640
            B(I) = -1. - (I - 1.) * .05                                 QPRA0660
            A(I,I) = -1.                                                QPRA0680
            A(I,I+1) = 1.                                               QPRA0700
 3      CONTINUE                                                        QPRA0720
        IQ = 10                                                         QPRA0740
        IA = 10                                                         QPRA0760
        IEQ = 1                                                         QPRA0780
C SET UP SIMPLE CONSTRAINTS                                             QPRA0800
        DO 4 I=1,N                                                      QPRA0820
            BL(I) = -I - (I - 1.) * .1                                  QPRA0840
            BU(I) = I                                                   QPRA0860
 4      CONTINUE                                                        QPRA0880
C GET MACHINE INFINITY FROM PORT                                        QPRA0900
        BU(1) = R1MACH(2)                                               QPRA0920
        IPRINT = 1                                                      QPRA0940
        MAXITR = 3*N                                                    QPRA0960
C CALL THE QUADRATIC PROGRAMMING PACKAGE                                QPRA0980
        CALL IQP(N, X, Q, IQ, C, M, A, IA, B, BL, BU, IPRINT,           QPRA1000
     1          MAXITR, IEQ)                                            QPRA1020
C COMPUTE FINAL FUNCTION VALUE                                          QPRA1040
        DO 6 J=1,N                                                      QPRA1060
            SUM(J) = X(J) * Q(J,J)                                      QPRA1080
 6      CONTINUE                                                        QPRA1100
        DO 7 I=2,N                                                      QPRA1120
            DO 9 J=1,I-1                                                QPRA1140
                SUM(I) = SUM(I) + X(J)*Q(J,I)                           QPRA1160
                SUM(J) = SUM(J) + X(I)*Q(J,I)                           QPRA1180
 9          CONTINUE                                                    QPRA1200
 7      CONTINUE                                                        QPRA1220
        FUNCT = 0.                                                      QPRA1240
        DO 10 I=1,N                                                     QPRA1260
            FUNCT = SUM(I) * X(I)/2. + FUNCT + C(I) * X(I)              QPRA1280
 10     CONTINUE                                                        QPRA1300
        WRITE (IWRITE,1000)                                             QPRA1320
 1000    FORMAT (16H FINAL SOLUTION:)                                   QPRA1340
        DO 11 I=1,N                                                     QPRA1360
           WRITE (IWRITE, 1001) I, X(I)                                 QPRA1380
 1001       FORMAT (I5,D14.4)                                           QPRA1400
 11     CONTINUE                                                        QPRA1420
        WRITE (IWRITE,1002)                                             QPRA1440
 1002    FORMAT (22H FINAL FUNCTION VALUE:)                             QPRA1460
        WRITE (IWRITE,1003) FUNCT                                       QPRA1480
 1003    FORMAT (D14.4)                                                 QPRA1500
        STOP                                                            QPRA1520
        END                                                             QPRA1540
C$TEST MFTE                                                             MFTE0000
C***********************************************************************MFTE0020
C                                                                       MFTE0040
C  EXAMPLE OF USE OF THE PORT PROGRAM MFTCC                             MFTE0060
C                                                                       MFTE0080
C***********************************************************************MFTE0100
      REAL A(25,25,25),B(25,25,25),T(50)                                MFTE0120
      REAL AA(25,25,25),BB(25,25,25)                                    MFTE0140
      REAL RSTAK(1262)                                                  MFTE0160
      REAL SUM,FN1                                                      MFTE0180
      INTEGER IFX(25)                                                   MFTE0200
      INTEGER I,J,K,L,IFB                                               MFTE0220
      DOUBLE PRECISION DSTAK(631)                                       MFTE0240
      COMMON /CSTAK/DSTAK                                               MFTE0260
      EQUIVALENCE (RSTAK(1),DSTAK(1))                                   MFTE0280
C                                                                       MFTE0300
C  N IS THE DIMENSION OF THE COMPLEX CUBE                               MFTE0320
C                                                                       MFTE0340
      N = 25                                                            MFTE0360
C                                                                       MFTE0380
C  GET ONE PLANE OF WORKSPACE                                           MFTE0400
C                                                                       MFTE0420
      NWK = 2*N*N + 12                                                  MFTE0440
      CALL ISTKIN(NWK,3)                                                MFTE0460
C                                                                       MFTE0480
C  SET REAL AND IMAGINARY PARTS TO YOUR FAVORITE VALUES HERE            MFTE0500
C  AA AND BB ARE COPIES TO COMPARE WITH UNNORMALIZED OUTPUT             MFTE0520
C  THIS EXAMPLE USES RANDOM DATA, SEE THE UTILITY CHAPTER OF PORT 3.    MFTE0540
C                                                                       MFTE0560
      DO 1 K = 1,N                                                      MFTE0580
      DO 1 J = 1,N                                                      MFTE0600
      DO 1 I = 1,N                                                      MFTE0620
         A(I,J,K)  = UNI(0)                                             MFTE0640
         AA(I,J,K) = A(I,J,K)                                           MFTE0660
         B(I,J,K)  = UNI(0)                                             MFTE0680
         BB(I,J,K) = B(I,J,K)                                           MFTE0700
 1    CONTINUE                                                          MFTE0720
C                                                                       MFTE0740
C  INITIALIZE TRIGONOMETRIC TABLES AND FACTOR N                         MFTE0760
C                                                                       MFTE0780
      CALL MFTCI(N,IFX,T)                                               MFTE0800
C                                                                       MFTE0820
C  OUTER LOOP COMPUTES A FORWARD (SIGN=1.0), THEN BACKWARD (SIGN=-1.0)  MFTE0840
C  TRANSFORM. FIRST X, THEN Y, THEN Z.                                  MFTE0860
C                                                                       MFTE0880
      SIGN = 1.0E0                                                      MFTE0900
      N2   = N*N                                                        MFTE0920
      NT   = N                                                          MFTE0940
C                                                                       MFTE0960
C                                                                       MFTE0980
      DO 2 IFB = 1,2                                                    MFTE1000
C  X-DIRECTION TRANSFORMS FOR EACH X-Y PLANE                            MFTE1020
         DO 3 L = 1,N                                                   MFTE1040
            CALL MFTCC(NT,NT,A(1,1,L),B(1,1,L),1,NT,                    MFTE1060
     *                       A(1,1,L),B(1,1,L),1,NT,IFX,T,SIGN)         MFTE1080
 3       CONTINUE                                                       MFTE1100
C  Y-DIRECTION TRANSFORMS FOR EACH X-Y PLANE                            MFTE1120
         DO 4 L = 1,N                                                   MFTE1140
            CALL MFTCC(NT,NT,A(1,1,L),B(1,1,L),NT,1,                    MFTE1160
     *                       A(1,1,L),B(1,1,L),NT,1,IFX,T,SIGN)         MFTE1180
 4       CONTINUE                                                       MFTE1200
C  Z-DIRECTION TRANSFORMS FOR EACH Y-Z PLANE                            MFTE1220
         DO 5 L = 1,N                                                   MFTE1240
            CALL MFTCC(NT,NT,A(L,1,1),B(L,1,1),NT,N2,                   MFTE1260
     *                       A(L,1,1),B(L,1,1),NT,N2,IFX,T,SIGN)        MFTE1280
 5       CONTINUE                                                       MFTE1300
C                                                                       MFTE1320
         SIGN = -1.0E0                                                  MFTE1340
 2    CONTINUE                                                          MFTE1360
C                                                                       MFTE1380
C                                                                       MFTE1400
C  COMPARE INPUT TO UNNORMALIZED OUTPUT FROM FORWARD/BACKWARD FFT       MFTE1420
C                                                                       MFTE1440
      FN1 = 1.0E0/FLOAT(N*N*N)                                          MFTE1460
      DO 6 K = 1,N                                                      MFTE1480
      DO 6 J = 1,N                                                      MFTE1500
      DO 6 I = 1,N                                                      MFTE1520
         AA(I,J,K) = AA(I,J,K) - FN1*A(I,J,K)                           MFTE1540
         BB(I,J,K) = BB(I,J,K) - FN1*B(I,J,K)                           MFTE1560
 6    CONTINUE                                                          MFTE1580
C                                                                       MFTE1600
C  ERR IS THE RMS ERROR, SDOT COMPUTES THE SUM OF SQUARES, SEE THE      MFTE1620
C  LINEAR ALGEBRA CHAPTER OF PORT 3                                     MFTE1640
C                                                                       MFTE1660
      ERR = SDOT(N2,AA,1,AA,1) + SDOT(N2,BB,1,BB,1)                     MFTE1680
      ERR = SQRT(FN1*ERR)                                               MFTE1700
C                                                                       MFTE1720
C  PRINT RESULTS                                                        MFTE1740
C                                                                       MFTE1760
      IWRITE = I1MACH(2)                                                MFTE1780
      WRITE(IWRITE,1000)N,N,N,ERR                                       MFTE1800
 1000 FORMAT(1X,18H FOR LATTICE SIZE ,I3,2(2H X,I3),9H ERROR = ,E11.5)  MFTE1820
      STOP                                                              MFTE1840
      END                                                               MFTE1860
C$TEST MFTF                                                             MFTF0000
C***********************************************************************MFTF0020
C                                                                       MFTF0040
C  EXAMPLE OF USE OF THE PORT PROGRAM MFTRC                             MFTF0060
C                                                                       MFTF0080
C***********************************************************************MFTF0100
      REAL A(200,100)                                                   MFTF0120
      REAL AA(200,100)                                                  MFTF0140
      REAL TX(200),TY(200)                                              MFTF0160
      REAL RSTAK(20014)                                                 MFTF0180
      REAL FN2,RMSERR,SIGN,SUM                                          MFTF0200
      INTEGER IFX(25),IFY(25)                                           MFTF0220
      INTEGER I,J,N,N2,NP2,NP3,N2MK                                     MFTF0240
      DOUBLE PRECISION DSTAK(10007)                                     MFTF0260
      COMMON /CSTAK/DSTAK                                               MFTF0280
      EQUIVALENCE (RSTAK(1),DSTAK(1))                                   MFTF0300
C                                                                       MFTF0320
C                                                                       MFTF0340
      CALL ISTKIN(20014,3)                                              MFTF0360
C                                                                       MFTF0380
      N   = 100                                                         MFTF0400
      NP2 = 102                                                         MFTF0420
      N2  = 200                                                         MFTF0440
C                                                                       MFTF0460
C   SET INPUT VECTORS TO YOUR FAVORITE VALUES HERE, THIS EXAMPLE        MFTF0480
C   USES RANDOM INITIAL VALUES.                                         MFTF0500
C                                                                       MFTF0520
      DO 1 J = 1,N                                                      MFTF0540
         DO 2 I = 1,N                                                   MFTF0560
            A(I,J)  = UNI(0)                                            MFTF0580
            AA(I,J) = A(I,J)                                            MFTF0600
 2       CONTINUE                                                       MFTF0620
 1    CONTINUE                                                          MFTF0640
C                                                                       MFTF0660
      SIGN = 1.0E0                                                      MFTF0680
      CALL MFTRI(N,IFX,TX)                                              MFTF0700
      CALL MFTCI(N,IFY,TY)                                              MFTF0720
C                                                                       MFTF0740
C  X-DIMENSION                                                          MFTF0760
C                                                                       MFTF0780
      CALL MFTRC(N,N,A,1,N2,A(1,1),A(2,1),2,N2,IFX,TX,SIGN)             MFTF0800
C                                                                       MFTF0820
C  FILL-IN FROM CONJUGATION OF TERMS                                    MFTF0840
C                                                                       MFTF0860
      NP3  = N+3                                                        MFTF0880
      N2MK = N-1                                                        MFTF0900
      DO 3 I = NP3,N2,2                                                 MFTF0920
         DO 4 J = 1,N                                                   MFTF0940
            A(I,J)   = A(N2MK,J)                                        MFTF0960
            A(I+1,J) = - A(N2MK+1,J)                                    MFTF0980
 4       CONTINUE                                                       MFTF1000
         N2MK = N2MK - 2                                                MFTF1020
 3    CONTINUE                                                          MFTF1040
C                                                                       MFTF1060
C  DO COMPLEX PART IN Y-DIRECTION                                       MFTF1080
C                                                                       MFTF1100
      CALL MFTCC(N,N,A(1,1),A(2,1),N2,2,A(1,1),A(2,1),N2,2,IFY,TY,SIGN) MFTF1120
C                                                                       MFTF1140
C  NOW GO BACKWARDS, COMPLEX TO COMPLEX FIRST                           MFTF1160
C                                                                       MFTF1180
      SIGN = -1.0E0                                                     MFTF1200
      CALL MFTCC(N,N,A(1,1),A(2,1),N2,2,A(1,1),A(2,1),N2,2,IFY,TY,SIGN) MFTF1220
C                                                                       MFTF1240
C  AND BACK TO REAL                                                     MFTF1260
C                                                                       MFTF1280
      CALL MFTCR(N,N,A(1,1),A(2,1),2,N2,A,1,N2,IFX,TX,SIGN)             MFTF1300
C                                                                       MFTF1320
C  COMPARE TO INPUT                                                     MFTF1340
C                                                                       MFTF1360
      FN2 = 1./FLOAT(N*N)                                               MFTF1380
      SUM = 0.0E0                                                       MFTF1400
      DO 5 J = 1,N                                                      MFTF1420
         DO 6 I = 1,N                                                   MFTF1440
            SUM = SUM + (AA(I,J) - FN2*A(I,J))**2                       MFTF1460
 6       CONTINUE                                                       MFTF1480
 5    CONTINUE                                                          MFTF1500
C                                                                       MFTF1520
C   PRINT ROOT MEAN SQUARE ERROR                                        MFTF1540
C                                                                       MFTF1560
      RMSERR = SQRT(SUM*FN2)                                            MFTF1580
      IWRITE   = I1MACH(2)                                              MFTF1600
      WRITE(IWRITE,1000) N,N,RMSERR                                     MFTF1620
 1000 FORMAT(1X,5H FOR ,I3,1HX,I3,20H ARRAY, RMS ERROR = ,1PE12.3)      MFTF1640
      STOP                                                              MFTF1660
      END                                                               MFTF1680
C$TEST MFTG                                                             MFTG0000
C***********************************************************************MFTG0020
C                                                                       MFTG0040
C  EXAMPLE OF USE OF THE PORT PROGRAM MFTCR                             MFTG0060
C                                                                       MFTG0080
C***********************************************************************MFTG0100
      REAL A(200,100)                                                   MFTG0120
      REAL AA(200,100)                                                  MFTG0140
      REAL TX(200),TY(200)                                              MFTG0160
      REAL RSTAK(3212)                                                  MFTG0180
      REAL FN2,RMSERR,SIGN,SUM                                          MFTG0200
      INTEGER IFX(25),IFY(25)                                           MFTG0220
      INTEGER I,J,N,N2,NP2,NP3,N2MK,NNS0,NNS,NSEGS                      MFTG0240
      DOUBLE PRECISION DSTAK(1606)                                      MFTG0260
      COMMON /CSTAK/DSTAK                                               MFTG0280
      EQUIVALENCE (RSTAK(1),DSTAK(1))                                   MFTG0300
C                                                                       MFTG0320
C                                                                       MFTG0340
      CALL ISTKIN(3212,3)                                               MFTG0360
C                                                                       MFTG0380
      N   = 100                                                         MFTG0400
      NP2 = 102                                                         MFTG0420
      N2  = 200                                                         MFTG0440
C                                                                       MFTG0460
C   THE SEGMENT SIZE IS ARBITRARILY CHOSEN TO BE 16 X N - I.E. USING    MFTG0480
C   MFTCC, MFTRC, MFTCR TO COMPUTE UP TO 16 INDEPENDENT VECTORS AT A    MFTG0500
C   TIME.                                                               MFTG0520
C                                                                       MFTG0540
      NSEGS = (N-1)/16 + 1                                              MFTG0560
      NNS0  = MOD(N-1,16) + 1                                           MFTG0580
C                                                                       MFTG0600
C   EXAMPLE USES RANDOM INPUT DATA                                      MFTG0620
C                                                                       MFTG0640
      DO 1 J = 1,N                                                      MFTG0660
         DO 2 I = 1,N                                                   MFTG0680
            A(I,J)  = UNI(0)                                            MFTG0700
            AA(I,J) = A(I,J)                                            MFTG0720
 2       CONTINUE                                                       MFTG0740
 1    CONTINUE                                                          MFTG0760
C                                                                       MFTG0780
      SIGN = 1.0E0                                                      MFTG0800
      CALL MFTRI(N,IFX,TX)                                              MFTG0820
      CALL MFTCI(N,IFY,TY)                                              MFTG0840
C                                                                       MFTG0860
C  X-DIMENSION                                                          MFTG0880
C                                                                       MFTG0900
      NNS = NNS0                                                        MFTG0920
      L   = 1                                                           MFTG0940
      DO 3 LL = 1,NSEGS                                                 MFTG0960
         CALL MFTRC(N,NNS,A(1,L),1,N2,A(1,L),A(2,L),2,N2,IFX,TX,SIGN)   MFTG0980
         L = L + NNS                                                    MFTG1000
         NNS = 16                                                       MFTG1020
 3    CONTINUE                                                          MFTG1040
C                                                                       MFTG1060
C  FILL-IN FROM CONJUGATION OF TERMS                                    MFTG1080
C                                                                       MFTG1100
      NP3  = N+3                                                        MFTG1120
      N2MK = N-1                                                        MFTG1140
      DO 4 I = NP3,N2,2                                                 MFTG1160
         DO 5 J = 1,N                                                   MFTG1180
            A(I,J)   = A(N2MK,J)                                        MFTG1200
            A(I+1,J) = - A(N2MK+1,J)                                    MFTG1220
 5       CONTINUE                                                       MFTG1240
         N2MK = N2MK - 2                                                MFTG1260
 4    CONTINUE                                                          MFTG1280
C                                                                       MFTG1300
C  DO COMPLEX PART IN Y-DIRECTION                                       MFTG1320
C                                                                       MFTG1340
      NNS = NNS0                                                        MFTG1360
      L   = 1                                                           MFTG1380
      DO 6 LL = 1,NSEGS                                                 MFTG1400
         CALL MFTCC(N,NNS,A(L,1),A(L+1,1),N2,2,                         MFTG1420
     *              A(L,1),A(L+1,1),N2,2,IFY,TY,SIGN)                   MFTG1440
         L   = L + 2*NNS                                                MFTG1460
         NNS = 16                                                       MFTG1480
 6    CONTINUE                                                          MFTG1500
C                                                                       MFTG1520
C  NOW GO BACKWARDS, COMPLEX TO COMPLEX FIRST                           MFTG1540
C                                                                       MFTG1560
      SIGN = -1.0E0                                                     MFTG1580
      NNS  = NNS0                                                       MFTG1600
      L    = 1                                                          MFTG1620
      DO 7 LL = 1,NSEGS                                                 MFTG1640
         CALL MFTCC(N,NNS,A(L,1),A(L+1,1),N2,2,                         MFTG1660
     *              A(L,1),A(L+1,1),N2,2,IFY,TY,SIGN)                   MFTG1680
         L   = L + 2*NNS                                                MFTG1700
         NNS = 16                                                       MFTG1720
 7    CONTINUE                                                          MFTG1740
C                                                                       MFTG1760
C  AND BACK TO REAL                                                     MFTG1780
C                                                                       MFTG1800
      NNS  = NNS0                                                       MFTG1820
      L    = 1                                                          MFTG1840
      DO 8 LL = 1,NSEGS                                                 MFTG1860
         CALL MFTCR(N,NNS,A(1,L),A(2,L),2,N2,A(1,L),1,N2,IFX,TX,SIGN)   MFTG1880
         L   = L + NNS                                                  MFTG1900
         NNS = 16                                                       MFTG1920
 8    CONTINUE                                                          MFTG1940
C                                                                       MFTG1960
C  COMPARE TO INPUT                                                     MFTG1980
C                                                                       MFTG2000
      FN2 = 1./FLOAT(N*N)                                               MFTG2020
      SUM = 0.0E0                                                       MFTG2040
      DO 9 J = 1,N                                                      MFTG2060
         DO 10 I = 1,N                                                  MFTG2080
            SUM = SUM + (AA(I,J) - FN2*A(I,J))**2                       MFTG2100
 10      CONTINUE                                                       MFTG2120
 9    CONTINUE                                                          MFTG2140
C                                                                       MFTG2160
C   PRINT ROOT MEAN SQUARE ERROR                                        MFTG2180
C                                                                       MFTG2200
      RMSERR = SQRT(SUM*FN2)                                            MFTG2220
      IWRITE   = I1MACH(2)                                              MFTG2240
      WRITE(IWRITE,1000) N,N,RMSERR                                     MFTG2260
 1000 FORMAT(1X,5H FOR ,I3,1HX,I3,20H ARRAY, RMS ERROR = ,1PE12.3)      MFTG2280
      STOP                                                              MFTG2300
      END                                                               MFTG2320
C$TEST FFTA                                                             FFTA0000
C***********************************************************************FFTA0020
C                                                                       FFTA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM FFTR                              FFTA0060
C                                                                       FFTA0080
C***********************************************************************FFTA0100
      REAL A(34),B(17),C(32)                                            FFTA0120
C                                                                       FFTA0140
C SET UP THE INPUT DATA FOR E**(-T)                                     FFTA0160
C AND SAVE IT IN THE VECTOR C FOR LATER COMPARISON.                     FFTA0180
C                                                                       FFTA0200
      A(1) = .5                                                         FFTA0220
      C(1) = A(1)                                                       FFTA0240
      DO 10 K=2,32                                                      FFTA0260
      A(K) = EXP(-.25*FLOAT(K-1))                                       FFTA0280
  10  C(K) = A(K)                                                       FFTA0300
C                                                                       FFTA0320
C CALL FOR THE TRANSFORM AND PRINT THE FOURIER COEFFICIENTS             FFTA0340
C                                                                       FFTA0360
      CALL FFTR(34,A,B)                                                 FFTA0380
C                                                                       FFTA0400
      IWRITE = I1MACH(2)                                                FFTA0420
      WRITE (IWRITE, 997)                                               FFTA0440
  997 FORMAT (1X,9HFREQUENCY,5X,20HFOURIER COEFFICIENTS//)              FFTA0460
      WRITE (IWRITE, 998)                                               FFTA0480
  998 FORMAT (1X,7H(=N/NT),5X,9HREAL PART,6X,9HIMAGINARY///)            FFTA0500
C                                                                       FFTA0520
      ENT = 1.0/(32. * 0.25)                                            FFTA0540
      DO 20 K=1,17                                                      FFTA0560
      FREQ = FLOAT(K-1) * ENT                                           FFTA0580
  20  WRITE (IWRITE,98) FREQ, A(K), B(K)                                FFTA0600
  98  FORMAT (2X,F6.3,2F15.8)                                           FFTA0620
C                                                                       FFTA0640
C DO THE INVERSE TRANSFORM                                              FFTA0660
C                                                                       FFTA0680
      CALL FFTRI(32,A,B)                                                FFTA0700
C                                                                       FFTA0720
C SCALE THE RESULTS, FIND THE ERROR, AND PRINT                          FFTA0740
C                                                                       FFTA0760
      WRITE (IWRITE, 999)                                               FFTA0780
  999 FORMAT (///4X,1HT,9X,5HINPUT,10X,5HERROR//)                       FFTA0800
C                                                                       FFTA0820
      EN  = 4*16                                                        FFTA0840
      ENI = 1./EN                                                       FFTA0860
      DO 30 K=1,32                                                      FFTA0880
      A(K) = ENI*A(K)                                                   FFTA0900
      ERR  = A(K) - C(K)                                                FFTA0920
      T = .25*FLOAT(K-1)                                                FFTA0940
  30  WRITE (IWRITE,99) T,C(K),ERR                                      FFTA0960
  99  FORMAT (2X,F4.2,1X,F15.8,4X,1PE10.2)                              FFTA0980
C                                                                       FFTA1000
      STOP                                                              FFTA1020
      END                                                               FFTA1040
C$TEST FFTC                                                             FFTC0000
C***********************************************************************FFTC0020
C                                                                       FFTC0040
C  EXAMPLE OF USE OF THE PORT PROGRAM FFTC                              FFTC0060
C                                                                       FFTC0080
C***********************************************************************FFTC0100
      REAL A(32),B(32),C(32),D(32)                                      FFTC0120
C                                                                       FFTC0140
C THE REAL DATA IS ALL ZERO AND THE                                     FFTC0160
C IMAGINARY PART IS E**(-T).                                            FFTC0180
C                                                                       FFTC0200
C SAVE THE IMAGINARY DATA IN THE VECTOR C FOR LATER COMPARISON          FFTC0220
C                                                                       FFTC0240
      DO 5 K=1,32                                                       FFTC0260
   5  A(K) = 0.                                                         FFTC0280
C                                                                       FFTC0300
      B(1) = .5                                                         FFTC0320
      C(1) = B(1)                                                       FFTC0340
      DO 10 K=2,32                                                      FFTC0360
      B(K) = EXP(-.25*FLOAT(K-1))                                       FFTC0380
  10  C(K) = B(K)                                                       FFTC0400
C                                                                       FFTC0420
C CALL FOR THE TRANSFORM AND PRINT THE FOURIER COEFFICIENTS             FFTC0440
C                                                                       FFTC0460
      CALL FFTC(32,A,B)                                                 FFTC0480
C                                                                       FFTC0500
      IWRITE = I1MACH(2)                                                FFTC0520
      WRITE (IWRITE, 997)                                               FFTC0540
  997 FORMAT (1X,9HFREQUENCY,5X,20HFOURIER COEFFICIENTS//)              FFTC0560
      WRITE (IWRITE, 998)                                               FFTC0580
  998 FORMAT (1X,7H(=N/NT),5X,9HREAL PART,6X,9HIMAGINARY///)            FFTC0600
C                                                                       FFTC0620
      ENT = 1.0/(32. * 0.25)                                            FFTC0640
      DO 20 K=1,32                                                      FFTC0660
      FREQ = FLOAT(K-1) * ENT                                           FFTC0680
      IF (FREQ .GT. 2.) FREQ = -4.0 + FREQ                              FFTC0700
  20  WRITE (IWRITE,98) FREQ, A(K), B(K)                                FFTC0720
  98  FORMAT (2X,F6.3,2F15.8)                                           FFTC0740
C                                                                       FFTC0760
C DO THE INVERSE TRANSFORM                                              FFTC0780
C                                                                       FFTC0800
      CALL FFTCI(32,A,B)                                                FFTC0820
C                                                                       FFTC0840
C SCALE THE RESULTS, FIND THE ERROR, AND PRINT                          FFTC0860
C                                                                       FFTC0880
      WRITE (IWRITE, 999)                                               FFTC0900
  999 FORMAT (///4X,1HT,7X,18HERROR IN REAL PART,                       FFTC0920
     1    4X,23HERROR IN IMAGINARY PART//)                              FFTC0940
C                                                                       FFTC0960
      ENI = 1./FLOAT(32)                                                FFTC0980
      DO 30 K=1,32                                                      FFTC1000
      A(K) = ENI*A(K)                                                   FFTC1020
      B(K) = ENI*B(K)                                                   FFTC1040
      ERR1  = A(K) - 0.0                                                FFTC1060
      ERR2  = B(K) - C(K)                                               FFTC1080
      T = .25*FLOAT(K-1)                                                FFTC1100
  30  WRITE (IWRITE,99) T,ERR1,ERR2                                     FFTC1120
  99  FORMAT (2X,F4.2,8X,1PE10.2,14X,1PE10.2)                           FFTC1140
C                                                                       FFTC1160
      STOP                                                              FFTC1180
      END                                                               FFTC1200
C$TEST LNAB                                                             LNAB0000
C***********************************************************************LNAB0020
C                                                                       LNAB0040
C  EXAMPLE OF USE OF THE PORT PROGRAM LSTSQ                             LNAB0060
C                                                                       LNAB0080
C***********************************************************************LNAB0100
      REAL X(10,2), Y(10), C(2), XX(10,2), YY(10)                       LNAB0120
C                                                                       LNAB0140
C  SET THE FIRST COLUMN OF THE X ARRAY TO THE ACTUAL X,                 LNAB0160
C  AND THE SECOND COLUMN TO 1.0                                         LNAB0180
C                                                                       LNAB0200
      DO 10  K=1,6                                                      LNAB0220
      X(K,1) = FLOAT(K)                                                 LNAB0240
 10   X(K,2) = 1.                                                       LNAB0260
C                                                                       LNAB0280
C  SET THE VALUES OF THE RIGHT-HAND SIDE, Y                             LNAB0300
C                                                                       LNAB0320
      Y(1) =  .3                                                        LNAB0340
      Y(2) =  .95                                                       LNAB0360
      Y(3) = 2.6                                                        LNAB0380
      Y(4) = 2.5                                                        LNAB0400
      Y(5) = 2.3                                                        LNAB0420
      Y(6) = 3.95                                                       LNAB0440
C                                                                       LNAB0460
C  SINCE LSTSQ WRITES OVER THE ARRAYS X AND Y,                          LNAB0480
C  SAVE THEM FOR LATER DEMONSTRATION COMPUTATION.                       LNAB0500
C                                                                       LNAB0520
      DO 15 K=1,6                                                       LNAB0540
      YY(K) = Y(K)                                                      LNAB0560
      DO 15 J=1,2                                                       LNAB0580
 15   XX(K,J)=X(K,J)                                                    LNAB0600
C                                                                       LNAB0620
      CALL LSTSQ (10,2,6,2,X,Y,1,C)                                     LNAB0640
C                                                                       LNAB0660
      IWRITE = I1MACH(2)                                                LNAB0680
      WRITE(IWRITE,97) C(1), C(2)                                       LNAB0700
 97   FORMAT (8H0C(1) = ,E16.8, 11H    C(2) = ,E16.8)                   LNAB0720
C                                                                       LNAB0740
C  COMPUTE THE SUM OF THE SQUARES OF THE ERROR                          LNAB0760
C  USING BRUTE FORCE.                                                   LNAB0780
C                                                                       LNAB0800
      ERR = 0.                                                          LNAB0820
      DO 20 J=1,6                                                       LNAB0840
      ADD = (C(1)*XX(J,1)+C(2)-YY(J))**2                                LNAB0860
 20   ERR = ERR + ADD                                                   LNAB0880
C                                                                       LNAB0900
      WRITE(IWRITE,98) ERR                                              LNAB0920
 98   FORMAT(35H0LEAST-SQUARES ERROR (VERSION 1) = ,E16.8)              LNAB0940
C                                                                       LNAB0960
C  COMPUTE THE LEAST-SQUARES ERROR USING THE PROGRAM SOLUTION.          LNAB0980
C                                                                       LNAB1000
      ERR = 0.                                                          LNAB1020
      DO 30 L=3,6                                                       LNAB1040
      ERR = ERR + Y(L)*Y(L)                                             LNAB1060
 30   CONTINUE                                                          LNAB1080
C                                                                       LNAB1100
      WRITE(IWRITE,99) ERR                                              LNAB1120
 99   FORMAT(35H0LEAST-SQUARES ERROR (VERSION 2) = ,E16.8)              LNAB1140
C                                                                       LNAB1160
      STOP                                                              LNAB1180
      END                                                               LNAB1200
C$TEST BURA                                                             BURA0000
C***********************************************************************BURA0020
C                                                                       BURA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BURAM                             BURA0060
C                                                                       BURA0080
C***********************************************************************BURA0100
      INTEGER IWRITE,I,M,N,NPTS                                         BURA0120
      REAL XMESH(11), F(11), P(3), Q(3), DELTA, STEP, X, XL, XR,        BURA0140
     1   ERROR(11), TCHBP                                               BURA0160
C                                                                       BURA0180
      IWRITE = I1MACH(2)                                                BURA0200
C                                                                       BURA0220
      NPTS = 11                                                         BURA0240
      M = 2                                                             BURA0260
      N = 2                                                             BURA0280
      XL = -1.0E0                                                       BURA0300
      XR = 1.0E0                                                        BURA0320
      STEP = (XR-XL)/FLOAT(10)                                          BURA0340
C                                                                       BURA0360
      DO 10 I=1,11                                                      BURA0380
         XMESH(I) = XL + FLOAT(I-1)*STEP                                BURA0400
         F(I) = EXP(XMESH(I))                                           BURA0420
  10  CONTINUE                                                          BURA0440
C                                                                       BURA0460
C                                                                       BURA0480
C   COMPUTE THE APPROXIMATION.                                          BURA0500
C                                                                       BURA0520
      CALL BURAM(NPTS, XMESH, F, M, N, P, Q, DELTA)                     BURA0540
C                                                                       BURA0560
C   PRINT OUT THE ERRORS.                                               BURA0580
C                                                                       BURA0600
      WRITE (IWRITE,99)                                                 BURA0620
  99  FORMAT (7H   MESH, 4X, 3HEXP, 7X, 5HERROR)                        BURA0640
      DO 20 I=1,NPTS                                                    BURA0660
         X = XMESH(I)                                                   BURA0680
C                                                                       BURA0700
C   NOTE THAT TO EVALUATE THE APPROXIMATION WE MUST USE THE             BURA0720
C   FUNCTION TCHBP, WHICH EVALUATES A POLYNOMIAL GIVEN IN               BURA0740
C   TERMS OF ITS TCHEBYCHEFF EXPANSION.                                 BURA0760
C                                                                       BURA0780
         ERROR(I) = F(I) - TCHBP(M,P,X,XL,XR)/TCHBP(N,Q,X,XL,XR)        BURA0800
         WRITE (IWRITE,98) XMESH(I), F(I), ERROR(I)                     BURA0820
  98     FORMAT (2F8.4,1PE12.2)                                         BURA0840
  20  CONTINUE                                                          BURA0860
      STOP                                                              BURA0880
      END                                                               BURA0900
C$TEST BURB                                                             BURB0000
C***********************************************************************BURB0020
C                                                                       BURB0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BURM1                             BURB0060
C                                                                       BURB0080
C***********************************************************************BURB0100
      INTEGER IWRITE,I,ITOL,MAXITR                                      BURB0120
      REAL XMESH(11), F(11), P(3), Q(3), DELTA, STEP, X, XL, XR,        BURB0140
     1 ERR1(11), ERR2(11), TCHBP                                        BURB0160
C                                                                       BURB0180
      DATAP(1)/ 25.0/,  P(2)/ 12.0/,  P(3)/ 1.0/                        BURB0200
      DATAQ(1)/ 25.0/,  Q(2)/-12.0/,  Q(3)/ 1.0/                        BURB0220
C                                                                       BURB0240
      IWRITE = I1MACH(2)                                                BURB0260
C                                                                       BURB0280
      XL = -1.0E0                                                       BURB0300
      XR = 1.0E0                                                        BURB0320
      STEP = (XR-XL)/FLOAT(10)                                          BURB0340
      DO 10 I=1,11                                                      BURB0360
         XMESH(I) = XL + FLOAT(I-1)*STEP                                BURB0380
         F(I) = EXP(XMESH(I))                                           BURB0400
  10  CONTINUE                                                          BURB0420
C                                                                       BURB0440
C    COMPUTE THE ERROR IN THE INITIAL APPROXIMATION.                    BURB0460
C    USE THE FUNCTION TCHBP TO EVALUATE A POLYNOMIAL                    BURB0480
C    GIVEN IN TERMS OF ITS TCHEBYCHEFF EXPANSION.                       BURB0500
C                                                                       BURB0520
      DO 20 I=1,11                                                      BURB0540
         X = XMESH(I)                                                   BURB0560
  20     ERR1(I) = F(I) - TCHBP(2,P,X,XL,XR)/TCHBP(2,Q,X,XL,XR)         BURB0580
C                                                                       BURB0600
C    COMPUTE THE APPROXIMATION.  USE NO MORE THAN 10 ITERATIONS         BURB0620
C    AND STOP WHEN THE EXTREMALS AGREE TO 10 PER CENT.                  BURB0640
C                                                                       BURB0660
      MAXITR = 10                                                       BURB0680
      ITOL = 1                                                          BURB0700
      CALL BURM1(11, XMESH, F, MAXITR, ITOL, 2, 2, P, Q, DELTA)         BURB0720
C                                                                       BURB0740
C    PRINT OUT THE ERRORS.                                              BURB0760
C                                                                       BURB0780
      WRITE (IWRITE,99)                                                 BURB0800
  99  FORMAT (7H   MESH, 4X, 3HEXP, 7X, 4HERR1, 8X, 4HERR2)             BURB0820
      DO 30 I=1,11                                                      BURB0840
         X = XMESH(I)                                                   BURB0860
         ERR2(I) = F(I) - TCHBP(2,P,X,XL,XR)/TCHBP(2,Q,X,XL,XR)         BURB0880
         WRITE (IWRITE,98) XMESH(I), F(I), ERR1(I), ERR2(I)             BURB0900
  98      FORMAT (2F8.4,1P2E12.2)                                       BURB0920
  30  CONTINUE                                                          BURB0940
      STOP                                                              BURB0960
      END                                                               BURB0980
C$TEST VDSA                                                             VDSA0000
C***********************************************************************VDSA0020
C                                                                       VDSA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM VDSS1                             VDSA0060
C                                                                       VDSA0080
C***********************************************************************VDSA0100
C  SIN(X) + X**2 + 3                                                    VDSA0120
C                                                                       VDSA0140
       REAL X, A(10), F, FPRIME, PT, H, SOL                             VDSA0160
       INTEGER IWRITE, N, I                                             VDSA0180
       REAL U, L, DIST, DSOL                                            VDSA0200
C                                                                       VDSA0220
       IWRITE = I1MACH(2)                                               VDSA0240
       N = 10                                                           VDSA0260
       X = 1.3                                                          VDSA0280
       H = 1./ FLOAT(N-1)                                               VDSA0300
       L = 1.0                                                          VDSA0320
       U = 5.0                                                          VDSA0340
       DIST = U - L                                                     VDSA0360
C SET UP THE MESH AND DATA VALUES                                       VDSA0380
       DO 100 I=1,N                                                     VDSA0400
              PT = L + DIST*FLOAT(I-1)*H                                VDSA0420
              A(I) = SIN(PT) + PT**2 + 3.0                              VDSA0440
 100   CONTINUE                                                         VDSA0460
       CALL VDSS1 (X,N,U,L,A,F,FPRIME)                                  VDSA0480
C CHECK THE SOLUTION                                                    VDSA0500
       SOL = SIN(X) + X**2 + 3.0                                        VDSA0520
       DSOL = COS(X) + 2.0*X                                            VDSA0540
       WRITE (IWRITE,101)                                               VDSA0560
 101   FORMAT (45H                     ACTUAL          COMPUTED//)      VDSA0580
       WRITE (IWRITE,102) SOL,F                                         VDSA0600
 102   FORMAT (17H          F(X) = ,2E16.8)                             VDSA0620
       WRITE (IWRITE,103) DSOL,FPRIME                                   VDSA0640
 103   FORMAT (17H    DERIVATIVE = ,2E16.8)                             VDSA0660
       STOP                                                             VDSA0680
       END                                                              VDSA0700
C$TEST VDSB                                                             VDSB0000
C***********************************************************************VDSB0020
C                                                                       VDSB0040
C  EXAMPLE OF USE OF THE PORT PROGRAM VDSS2                             VDSB0060
C                                                                       VDSB0080
C***********************************************************************VDSB0100
C  SIN(X(1)) + X(2)**2 + 3                                              VDSB0120
C                                                                       VDSB0140
       REAL X(2), A(10,10), F, FPRIME(2), PT1, PT2, H1, H2, SOL         VDSB0160
       REAL DSOL1, DSOL2                                                VDSB0180
       INTEGER IWRITE, N1, N2, NA1, I, J                                VDSB0200
       REAL U(2),L(2),DIST(2)                                           VDSB0220
C                                                                       VDSB0240
       IWRITE = I1MACH(2)                                               VDSB0260
       N1 = 10                                                          VDSB0280
       N2 = 10                                                          VDSB0300
       X(1) = 1.7                                                       VDSB0320
       X(2) = 1.7                                                       VDSB0340
       H1 = 1./ FLOAT(N1-1)                                             VDSB0360
       H2 = 1./ FLOAT(N2-1)                                             VDSB0380
       L(1) = 1.0                                                       VDSB0400
       U(1) = 5.0                                                       VDSB0420
       L(2) = 1.0                                                       VDSB0440
       U(2) = 5.0                                                       VDSB0460
       DIST(1) = U(1) - L(1)                                            VDSB0480
       DIST(2) = U(2) - L(2)                                            VDSB0500
C SET UP THE MESH AND DATA VALUES                                       VDSB0520
       DO 100 I=1,N1                                                    VDSB0540
              PT1 = L(1) + DIST(1)*FLOAT(I-1)*H1                        VDSB0560
              DO 100 J=1,N2                                             VDSB0580
                     PT2 = L(2) + DIST(2)*FLOAT(J-1)*H2                 VDSB0600
                     A(I,J) = SIN(PT1) + PT2**2 + 3.0                   VDSB0620
 100   CONTINUE                                                         VDSB0640
       NA1 = 10                                                         VDSB0660
       CALL VDSS2 (X,N1,N2,U,L,A,NA1,F,FPRIME)                          VDSB0680
C CHECK THE SOLUTION                                                    VDSB0700
       SOL = SIN(X(1)) + X(2)**2 + 3.0                                  VDSB0720
       DSOL1 = COS(X(1))                                                VDSB0740
       DSOL2 = 2.0*X(2)                                                 VDSB0760
       WRITE (IWRITE,101)                                               VDSB0780
 101   FORMAT (45H                     ACTUAL          COMPUTED//)      VDSB0800
       WRITE (IWRITE,102) SOL,F                                         VDSB0820
 102   FORMAT (17H          F(X) = ,2E16.8)                             VDSB0840
       WRITE (IWRITE,103) DSOL1,FPRIME(1)                               VDSB0860
 103   FORMAT (17H     PARTIAL X = ,2E16.8)                             VDSB0880
       WRITE (IWRITE,104) DSOL2,FPRIME(2)                               VDSB0900
 104   FORMAT (17H     PARTIAL Y = ,2E16.8)                             VDSB0920
       STOP                                                             VDSB0940
       END                                                              VDSB0960
C$TEST VDSE                                                             VDSE0000
C***********************************************************************VDSE0020
C                                                                       VDSE0040
C  EXAMPLE OF USE OF THE PORT PROGRAM VDSS3                             VDSE0060
C                                                                       VDSE0080
C***********************************************************************VDSE0100
C  X(1)*X(2) + EXP(X(2)) + X(3)**2                                      VDSE0120
C                                                                       VDSE0140
       REAL X(3), A(10,10,10), F, FPRIME(3), PT1, PT2, PT3              VDSE0160
       REAL H1, H2, H3, SOL                                             VDSE0180
       REAL DSOL1, DSOL2, DSOL3                                         VDSE0200
       INTEGER IWRITE, N1, N2, N3, NA1, NA2                             VDSE0220
       INTEGER I,J,K                                                    VDSE0240
       REAL U(3),L(3),DIST(3)                                           VDSE0260
C                                                                       VDSE0280
       IWRITE = I1MACH(2)                                               VDSE0300
       N1 = 10                                                          VDSE0320
       N2 = 10                                                          VDSE0340
       N3 = 10                                                          VDSE0360
       X(1) = 2.3                                                       VDSE0380
       X(2) = 2.3                                                       VDSE0400
       X(3) = 2.3                                                       VDSE0420
       H1 = 1./ FLOAT(N1-1)                                             VDSE0440
       H2 = 1./ FLOAT(N2-1)                                             VDSE0460
       H3 = 1./ FLOAT(N3-1)                                             VDSE0480
       L(1) = 1.0                                                       VDSE0500
       U(1) = 3.0                                                       VDSE0520
       L(2) = 2.0                                                       VDSE0540
       U(2) = 4.0                                                       VDSE0560
       L(3) = 1.5                                                       VDSE0580
       U(3) = 3.5                                                       VDSE0600
       DIST(1) = U(1) - L(1)                                            VDSE0620
       DIST(2) = U(2) - L(2)                                            VDSE0640
       DIST(3) = U(3) - L(3)                                            VDSE0660
C SET UP THE MESH AND DATA VALUES                                       VDSE0680
       DO 100 I=1,N1                                                    VDSE0700
              PT1 = L(1) + DIST(1)*FLOAT(I-1)*H1                        VDSE0720
              DO 100 J=1,N2                                             VDSE0740
                     PT2 = L(2) + DIST(2)*FLOAT(J-1)*H2                 VDSE0760
                     DO 100 K=1,N3                                      VDSE0780
                            PT3 = L(3) + DIST(3)*FLOAT(K-1)*H3          VDSE0800
                            A(I,J,K) = PT1*PT2 + EXP(PT2) + PT3**2      VDSE0820
 100   CONTINUE                                                         VDSE0840
       NA1 = 10                                                         VDSE0860
       NA2 = 10                                                         VDSE0880
       CALL VDSS3 (X,N1,N2,N3,U,L,A,NA1,NA2,F,FPRIME)                   VDSE0900
C CHECK THE SOLUTION                                                    VDSE0920
       SOL = X(1)*X(2) + EXP(X(2)) + X(3)**2                            VDSE0940
       DSOL1 = X(2)                                                     VDSE0960
       DSOL2 = X(1) + EXP(X(2))                                         VDSE0980
       DSOL3 = 2.0*X(3)                                                 VDSE1000
       WRITE (IWRITE,101)                                               VDSE1020
 101   FORMAT (45H                     ACTUAL          COMPUTED//)      VDSE1040
       WRITE (IWRITE,102) SOL,F                                         VDSE1060
 102   FORMAT (17H          F(X) = ,2E16.8)                             VDSE1080
       WRITE (IWRITE,103) DSOL1,FPRIME(1)                               VDSE1100
 103   FORMAT (17H     PARTIAL X = ,2E16.8)                             VDSE1120
       WRITE (IWRITE,104) DSOL2,FPRIME(2)                               VDSE1140
 104   FORMAT (17H     PARTIAL Y = ,2E16.8)                             VDSE1160
       WRITE (IWRITE,105) DSOL3,FPRIME(3)                               VDSE1180
 105   FORMAT (17H     PARTIAL Z = ,2E16.8)                             VDSE1200
       STOP                                                             VDSE1220
       END                                                              VDSE1240
C$TEST PRSA                                                             PRSA0000
C***********************************************************************PRSA0020
C                                                                       PRSA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPMLE                             PRSA0060
C                                                                       PRSA0080
C***********************************************************************PRSA0100
      INTEGER JCOL(5000),ISTAK(18000),IROW(626), IREAD, IWRITE, M       PRSA0120
      INTEGER I1MACH, I, J, K, L, ISIZE, MP1                            PRSA0140
      REAL AROW(5000), B(625), SASUM, A1                                PRSA0160
      COMMON /CSTAK/ ISTAK                                              PRSA0180
      CALL ISTKIN(18000,2)                                              PRSA0200
      IREAD=I1MACH(1)                                                   PRSA0220
      IWRITE=I1MACH(2)                                                  PRSA0240
  10  READ(IREAD,11)M,A1                                                PRSA0260
  11  FORMAT(I3,E15.5)                                                  PRSA0280
      IF (M .EQ. 0) STOP                                                PRSA0300
      MP1=M+1                                                           PRSA0320
      N= MP1*MP1                                                        PRSA0340
C                                                                       PRSA0360
C SET UP MATRIX OF SIZE N                                               PRSA0380
C                                                                       PRSA0400
      IROW(1) = 1                                                       PRSA0420
      K=1                                                               PRSA0440
      L=0                                                               PRSA0460
      DO 70 I=1,MP1                                                     PRSA0480
         DO 60 J = 1, MP1                                               PRSA0500
            L=L+1                                                       PRSA0520
            AROW(K) = -2.0*A1 - FLOAT(I+J-2)                            PRSA0540
            JCOL(K) = L                                                 PRSA0560
            K=K+1                                                       PRSA0580
            IF (J .EQ. 1) GO TO 20                                      PRSA0600
               AROW(K) = A1                                             PRSA0620
               JCOL(K) = L - 1                                          PRSA0640
               K=K+1                                                    PRSA0660
  20        IF (J .EQ. MP1) GO TO 30                                    PRSA0680
               AROW(K) = J                                              PRSA0700
               JCOL(K) = L+1                                            PRSA0720
               K=K+1                                                    PRSA0740
  30        IF (I.EQ.1) GO TO 40                                        PRSA0760
               AROW(K) = A1                                             PRSA0780
               JCOL(K) = L - MP1                                        PRSA0800
               K=K+1                                                    PRSA0820
  40        IF (I.EQ.MP1) GO TO 50                                      PRSA0840
               AROW(K) = I                                              PRSA0860
               JCOL(K) = L+MP1                                          PRSA0880
               K=K+1                                                    PRSA0900
  50        IROW(L+1)=K                                                 PRSA0920
  60     CONTINUE                                                       PRSA0940
  70  CONTINUE                                                          PRSA0960
C                                                                       PRSA0980
C SET UP RIGHT HAND SIDE AND LAST ROW OF THE MATRIX                     PRSA1000
C                                                                       PRSA1020
      L=IROW(N)                                                         PRSA1040
      DO 80 I=1,N                                                       PRSA1060
         AROW(L)=1.0                                                    PRSA1080
         JCOL(L)=I                                                      PRSA1100
         L=L+1                                                          PRSA1120
         B(I)=0.0                                                       PRSA1140
  80  CONTINUE                                                          PRSA1160
      IROW(N+1)=L                                                       PRSA1180
      B(N)=1.0                                                          PRSA1200
C                                                                       PRSA1220
C SOLVE THE SYSTEM                                                      PRSA1240
C                                                                       PRSA1260
      CALL SPMLE(N,.TRUE.,IROW,JCOL,AROW,ISIZE,B,625,1)                 PRSA1280
C                                                                       PRSA1300
C PRINT RESULTS                                                         PRSA1320
C                                                                       PRSA1340
      WRITE(IWRITE,81)N,L                                               PRSA1360
  81  FORMAT(/19HNO. OF EQUATIONS = ,I3,19HNO. OF NONZEROES = ,I5)      PRSA1380
      WRITE(IWRITE,82)ISIZE                                             PRSA1400
  82  FORMAT(9H ISIZE = , I5)                                           PRSA1420
      WRITE(IWRITE,83)B(N),SASUM(M,B(M),M)                              PRSA1440
  83  FORMAT(6H L1 = ,E15.5,6H L2 = ,E15.5)                             PRSA1460
      GO TO 10                                                          PRSA1480
      END                                                               PRSA1500
C$TEST PRSF                                                             PRSF0000
C***********************************************************************PRSF0020
C                                                                       PRSF0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPFLE                             PRSF0060
C                                                                       PRSF0080
C***********************************************************************PRSF0100
       INTEGER N1, N2, N, I, ITIME, ITIME1, ITIME2, ILAPSZ              PRSF0120
       INTEGER I1MACH, IREAD, IWRITE, ISTAK(25000), ISIZE, ISIZE2       PRSF0140
       REAL RSTAK(25000), B(500), A1, A2                                PRSF0160
       EXTERNAL QUEA                                                    PRSF0180
       COMMON /QUE/ A1, A2, N1, N2, N                                   PRSF0200
       COMMON /CSTAK/ ISTAK                                             PRSF0220
       EQUIVALENCE (ISTAK(1),RSTAK(1))                                  PRSF0240
       IREAD = I1MACH(1)                                                PRSF0260
       IWRITE = I1MACH(2)                                               PRSF0280
       CALL ISTKIN(25000,2)                                             PRSF0300
  10   READ(IREAD, 11)N1, N2, A1, A2                                    PRSF0320
  11   FORMAT(2I3,2E15.5)                                               PRSF0340
       IF (N1 .EQ. 0) STOP                                              PRSF0360
       WRITE(IWRITE,12)N1, N2, A1, A2                                   PRSF0380
  12   FORMAT(/4H N1=,I3,4H N2=,I3,4H A1=,E15.5,4H A2=,E15.5)           PRSF0400
       N = (N1+1)*(N2+1)                                                PRSF0420
C                                                                       PRSF0440
C GENERATE THE RIGHT HAND SIDE                                          PRSF0460
C                                                                       PRSF0480
       DO 20 I=1, N                                                     PRSF0500
          B(I) = 0.0                                                    PRSF0520
  20   CONTINUE                                                         PRSF0540
       B(N) = 1.0                                                       PRSF0560
C                                                                       PRSF0580
C SOLVE THE SYSTEM WITH PIVOTING FOR SPARSITY AND TIME IT               PRSF0600
C                                                                       PRSF0620
       ITIME=ILAPSZ(0)                                                  PRSF0640
       CALL SPFLE(N, .TRUE., QUEA, ISIZE, B, 500, 1)                    PRSF0660
       ITIME1=ILAPSZ(0)-ITIME                                           PRSF0680
C                                                                       PRSF0700
C FIND THE PROBABILITIES                                                PRSF0720
C                                                                       PRSF0740
       IT = (N2+1)*N1+1                                                 PRSF0760
       WRITE(IWRITE,21)B(N),SASUM(N1+1,B(N2+1),N2+1),SASUM(N2,B(IT),1)  PRSF0780
  21   FORMAT(6H L1 = ,E15.5,6H L2 = ,E15.5,7H I12 = ,E15.5)            PRSF0800
       WRITE(IWRITE,22)                                                 PRSF0820
  22   FORMAT(22H PIVOTING FOR SPARSITY)                                PRSF0840
       WRITE(IWRITE,23)ISIZE                                            PRSF0860
  23   FORMAT(34H SPACE NEEDED FOR DECOMPOSITION - ,I8)                 PRSF0880
       WRITE(IWRITE,24)ITIME1                                           PRSF0900
  24   FORMAT(15H TIME NEEDED - ,I8)                                    PRSF0920
C                                                                       PRSF0940
C FOR COMPARISON, REDO PROBLEM WITHOUT REQUESTING PIVOTING              PRSF0960
C                                                                       PRSF0980
      DO 30 I= 1,N                                                      PRSF1000
         B(I)=0.0                                                       PRSF1020
  30  CONTINUE                                                          PRSF1040
      B(N)=1.0                                                          PRSF1060
      ITIM=ILAPSZ(0)                                                    PRSF1080
      CALL SPFLE(N,.FALSE.,QUEA, ISIZE2, B, 500, 1)                     PRSF1100
      ITIME2=ILAPSZ(0)-ITIME                                            PRSF1120
      WRITE(IWRITE, 31)                                                 PRSF1140
  31  FORMAT(25H NO PIVOTING FOR SPARSITY)                              PRSF1160
      WRITE(IWRITE,23)ISIZE2                                            PRSF1180
      WRITE(IWRITE, 24)ITIME2                                           PRSF1200
       GO TO 10                                                         PRSF1220
       END                                                              PRSF1240
       SUBROUTINE QUEA(I, ROW, JCOL, NUM)                               QUEA0000
       INTEGER I, NUM, JCOL(100), N, N1, N2, II, JJ, J                  QUEA0020
       REAL ROW(100)                                                    QUEA0040
       COMMON /QUE/ A1,A2, N1,N2, N                                     QUEA0060
       IF (I.NE.N) GO TO 20                                             QUEA0080
C TREAT LAST ROW AS SPECIAL CASE                                        QUEA0100
       DO 10 J=1, N                                                     QUEA0120
          JCOL(J) = J                                                   QUEA0140
          ROW(J) = 1.0                                                  QUEA0160
  10   CONTINUE                                                         QUEA0180
       NUM = N                                                          QUEA0200
       RETURN                                                           QUEA0220
  20   N2P1=N2+1                                                        QUEA0240
C DETERMINE WHICH MAJOR BLOCK                                           QUEA0260
       II=(I-1)/N2P1                                                    QUEA0280
C DETERMINE POSITION IN BLOCK                                           QUEA0300
       JJ = MOD(I-1, N2P1)                                              QUEA0320
C FILL IN DIAGONAL                                                      QUEA0340
       JCOL(1) = I                                                      QUEA0360
       ROW(1) = -A1-A2-FLOAT(II+JJ)                                     QUEA0380
       IF (JJ.EQ.N2) ROW(1)=ROW(1)+A2                                   QUEA0400
       NUM = 1                                                          QUEA0420
       IF (II .EQ. 0) GO TO 30                                          QUEA0440
C THIS IS NOT THE FIRST BLOCK                                           QUEA0460
       JCOL(2) = I-N2P1                                                 QUEA0480
       ROW(2) = A1                                                      QUEA0500
       NUM = 2                                                          QUEA0520
  30   IF (JJ.EQ.0) GO TO 40                                            QUEA0540
C THIS IS NOT FIRST ROW IN THE BLOCK                                    QUEA0560
       NUM = NUM+1                                                      QUEA0580
       JCOL(NUM) = I-1                                                  QUEA0600
       ROW(NUM) = A2                                                    QUEA0620
  40   IF (JJ.EQ. N2) GO TO 50                                          QUEA0640
C THIS IS NOT LAST ROW IN THE BLOCK                                     QUEA0660
       NUM=NUM+1                                                        QUEA0680
       JCOL(NUM)= I+1                                                   QUEA0700
       ROW(NUM) = JJ+1                                                  QUEA0720
  50   IF (II .EQ. N1) RETURN                                           QUEA0740
C THIS IS NOT THE LAST BLOCK                                            QUEA0760
       NUM = NUM +1                                                     QUEA0780
       JCOL(NUM) = I+N2P1                                               QUEA0800
       ROW(NUM)= II+1                                                   QUEA0820
       RETURN                                                           QUEA0840
       END                                                              QUEA0860
      INTEGER FUNCTION ILAPSZ(N)                                        ILAP0000
      INTEGER N                                                         ILAP0020
      ILAPSZ = 0                                                        ILAP0040
      RETURN                                                            ILAP0060
      END                                                               ILAP0080
C                                                                       ILAP0100
C DATA FOR THE EXAMPLE IN THE PORT SHEET...  (REMOVE THE C              ILAP0120
C IN COLUMN 1 BEFORE FEEDING THIS DATA TO THE PROGRAM ABOVE.)           ILAP0140
C$DATA                                                                  ILAP0160
C10 10   9.             9.                                              ILAP0180
C20 20  19.            19.                                              ILAP0200
C 0  0   0.             0.                                              ILAP0220
C$TEST PRSJ                                                             PRSJ0000
C***********************************************************************PRSJ0020
C                                                                       PRSJ0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPMCE                             PRSJ0060
C                                                                       PRSJ0080
C***********************************************************************PRSJ0100
      INTEGER JCOL(10000),IROW(626), IREAD, IWRITE, M                   PRSJ0120
      INTEGER I1MACH, I, J, K, L, ISIZE, MP1                            PRSJ0140
      INTEGER MRP(625), MCP(625), IL(625)                               PRSJ0160
      REAL AROW(10000), A1, Z(625)                                      PRSJ0180
      COMMON /CSTAK/ D                                                  PRSJ0200
      DOUBLE PRECISION D(3000)                                          PRSJ0220
      CALL ISTKIN(3000,4)                                               PRSJ0240
      IREAD=I1MACH(1)                                                   PRSJ0260
      IWRITE=I1MACH(2)                                                  PRSJ0280
  10  READ(IREAD,11)M,A1                                                PRSJ0300
  11  FORMAT(I3,E15.5)                                                  PRSJ0320
      IF (M .EQ. 0) STOP                                                PRSJ0340
      MP1=M+1                                                           PRSJ0360
      N= MP1*MP1-1                                                      PRSJ0380
C                                                                       PRSJ0400
C SET UP MATRIX OF SIZE N                                               PRSJ0420
C                                                                       PRSJ0440
      IROW(1) = 1                                                       PRSJ0460
      K=1                                                               PRSJ0480
      L=0                                                               PRSJ0500
      DO 70 I=1,MP1                                                     PRSJ0520
         DO 60 J = 1, MP1                                               PRSJ0540
            L=L+1                                                       PRSJ0560
            AROW(K) = -2.0*A1 - FLOAT(I+J-2)                            PRSJ0580
            IF (J. EQ. MP1)AROW(K)=AROW(K) + A1                         PRSJ0600
            JCOL(K) = L                                                 PRSJ0620
            K=K+1                                                       PRSJ0640
            IF (J .EQ. 1) GO TO 20                                      PRSJ0660
               AROW(K) = A1                                             PRSJ0680
               JCOL(K) = L-1                                            PRSJ0700
               K=K+1                                                    PRSJ0720
  20        IF (J .EQ. MP1 .OR. J.EQ.M. AND .I.EQ.MP1) GO TO 30         PRSJ0740
               AROW(K) = J                                              PRSJ0760
               JCOL(K) = L+1                                            PRSJ0780
               K=K+1                                                    PRSJ0800
  30        IF (I.EQ.1) GO TO 40                                        PRSJ0820
               AROW(K) = A1                                             PRSJ0840
               JCOL(K) = L-MP1                                          PRSJ0860
               K=K+1                                                    PRSJ0880
  40        IF (I.EQ.MP1.OR.J.EQ.MP1. AND. I.EQ.M) GO TO 50             PRSJ0900
               AROW(K) = I                                              PRSJ0920
               JCOL(K) = L+MP1                                          PRSJ0940
               K=K+1                                                    PRSJ0960
  50        IROW(L+1)=K                                                 PRSJ0980
  60     CONTINUE                                                       PRSJ1000
  70  CONTINUE                                                          PRSJ1020
C                                                                       PRSJ1040
C REORDER ROWS OF THE MATRIX                                            PRSJ1060
C                                                                       PRSJ1080
      CALL SPMOR(N,IROW,JCOL,MRP,MCP)                                   PRSJ1100
C                                                                       PRSJ1120
C SOLVE THE SYSTEM                                                      PRSJ1140
C                                                                       PRSJ1160
      CALL SPMCE(N,MRP,MCP,AROW,IROW,JCOL,10000,IL,ISIZE,COND,Z)        PRSJ1180
C                                                                       PRSJ1200
C PRINT RESULTS                                                         PRSJ1220
C                                                                       PRSJ1240
      WRITE(IWRITE,71)N,IROW(N+1)                                       PRSJ1260
  71  FORMAT(/19HNO. OF EQUATIONS = ,I3,20H NO. OF NONZEROES = ,I5)     PRSJ1280
      WRITE(IWRITE,72)A1,ISIZE                                          PRSJ1300
  72  FORMAT(6H A1 = ,E15.5,9H ISIZE = , I5)                            PRSJ1320
      WRITE(IWRITE,73)COND                                              PRSJ1340
  73  FORMAT(16H CONDITION NO = ,E15.5)                                 PRSJ1360
      GO TO 10                                                          PRSJ1380
      END                                                               PRSJ1400
C                                                                       PRSJ1420
C DATA FOR THE EXAMPLE IN THE PORT SHEET...  (REMOVE THE C              PRSJ1440
C IN COLUMN 1 BEFORE FEEDING THIS DATA TO THE PROGRAM ABOVE.)           PRSJ1460
C$DATA                                                                  PRSJ1480
C10   2.0                                                               PRSJ1500
C20   2.0                                                               PRSJ1520
C22   3.0                                                               PRSJ1540
C 0   0.0                                                               PRSJ1560
C$TEST PRSM                                                             PRSM0000
C***********************************************************************PRSM0020
C                                                                       PRSM0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPFCE                             PRSM0060
C                                                                       PRSM0080
C***********************************************************************PRSM0100
       INTEGER N1, N2, N, MCP(500), MRP(500), MAXIW, IW, I              PRSM0120
       INTEGER I1MACH, IREAD, IWRITE, TEMP, ISTAK(20000)                PRSM0140
       REAL A1, RSTAK(20000)                                            PRSM0160
       DOUBLE PRECISION DSTAK(10000)                                    PRSM0180
       EXTERNAL QUEI, QUEA                                              PRSM0200
       COMMON /QUE/ A1, K                                               PRSM0220
       COMMON /CSTAK/ DSTAK                                             PRSM0240
       EQUIVALENCE(RSTAK(1),DSTAK(1),ISTAK(1))                          PRSM0260
       CALL ISTKIN(10000,4)                                             PRSM0280
       IREAD = I1MACH(1)                                                PRSM0300
       IWRITE = I1MACH(2)                                               PRSM0320
       CALL ISTKIN(20000, 2)                                            PRSM0340
       READ(IREAD,11)K                                                  PRSM0360
  11   FORMAT(I3)                                                       PRSM0380
       IF (K. EQ. 0) STOP                                               PRSM0400
       N = K*K - 1                                                      PRSM0420
       WRITE(IWRITE,12)N                                                PRSM0440
  12   FORMAT(20H NO. OF EQUATIONS = ,I3)                               PRSM0460
C                                                                       PRSM0480
C DETERMINE THE ORDERING                                                PRSM0500
C                                                                       PRSM0520
       CALL SPFOR(N, QUEI, MRP)                                         PRSM0540
C                                                                       PRSM0560
C GET THE WORK SPACE FROM THE STORAGE STACK                             PRSM0580
C                                                                       PRSM0600
       MAXIW = (ISTKQU(2)-3*N-50)/2                                     PRSM0620
       IW = ISTKGT(MAXIW, 2)                                            PRSM0640
       IUL = ISTKGT(MAXIW, 3)                                           PRSM0660
C                                                                       PRSM0680
C READ IN PARAMETER                                                     PRSM0700
C                                                                       PRSM0720
  20   READ(IREAD, 21)A1                                                PRSM0740
  21   FORMAT(E15.7)                                                    PRSM0760
       IF (A1.EQ.0.0E0) STOP                                            PRSM0780
       WRITE(IWRITE, 22)A1                                              PRSM0800
  22   FORMAT(/4H A1=, E15.5)                                           PRSM0820
C                                                                       PRSM0840
C GET THE CONDITION NUMBER                                              PRSM0860
C                                                                       PRSM0880
       CALL SPFCE(N, MRP, MCP, QUEA, ISTAK(IW), RSTAK(IUL), MAXIW,      PRSM0900
     1 ISIZE, COND)                                                     PRSM0920
       WRITE(IWRITE,23)COND                                             PRSM0940
  23   FORMAT(20H CONDITION NUMBER = ,E15.5)                            PRSM0960
       GO TO 20                                                         PRSM0980
       END                                                              PRSM1000
C$TEST PRSP                                                             PRSP0000
C***********************************************************************PRSP0020
C                                                                       PRSP0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPMLU                             PRSP0060
C                                                                       PRSP0080
C***********************************************************************PRSP0100
      INTEGER IA(401), JA(2500), ISTAK(18500), I1MACH, IWRITE, N        PRSP0120
      INTEGER MRP(400), MCP(400), ITEMP, INMCP(400)                     PRSP0140
      INTEGER ILAPSZ, IT, IT2, IT3, IT4, IT5, IT6, I, NUMBER            PRSP0160
      INTEGER NUM, IPOINT, NP1                                          PRSP0180
      REAL RSTAK(18500), A(2500), GROWTH                                PRSP0200
      DOUBLE PRECISION DSTAK(9250)                                      PRSP0220
      COMMON /CSTAK/DSTAK                                               PRSP0240
      EQUIVALENCE(ISTAK(1), RSTAK(1), DSTAK(1))                         PRSP0260
      IWRITE = I1MACH(2)                                                PRSP0280
      CALL ISTKIN(18500,2)                                              PRSP0300
      CALL ENTSRC(NEW,1)                                                PRSP0320
      DO 40 K = 9,19,5                                                  PRSP0340
         N = (K+1)*(K+1)                                                PRSP0360
         CALL SETUP(K, N, IA, JA, A)                                    PRSP0380
         NUMBER = IA(N+1)-1                                             PRSP0400
         WRITE(IWRITE,11)N,NUMBER                                       PRSP0420
  11     FORMAT(5H N = ,I4,22H NUMBER OF NONZEROS = ,I7)                PRSP0440
C                                                                       PRSP0460
C ORDER THE ROWS AND COLUMNS OF THE MATRIX                              PRSP0480
C TO DECREASE FILL-IN                                                   PRSP0500
C                                                                       PRSP0520
         CALL SPMOR(N, IA, JA, MRP, INMCP)                              PRSP0540
C ALLOCATE THE AVAILABLE SPACE FOR THE WORK SPACE IN SPMSF              PRSP0560
C BUT MAKE SURE THERE IS EMOUGH FOR SPMSF'S ALLOCATIONS                 PRSP0580
C                                                                       PRSP0600
         MAXIW = ISTKQU(2)-3*N-5                                        PRSP0620
         IW = ISTKGT(MAXIW,2)                                           PRSP0640
C                                                                       PRSP0660
C TIME THE SYMBOLIC FACTORIZATION                                       PRSP0680
C                                                                       PRSP0700
         IT = ILAPSZ(0)                                                 PRSP0720
         CALL SPMSF(N, MRP, INMCP, IA, JA, ISTAK(IW), MAXIW, ISIZE)     PRSP0740
         IT2= ILAPSZ(0)-IT                                              PRSP0760
         WRITE(IWRITE, 12)ISIZE                                         PRSP0780
  12     FORMAT(37H NUMBER OF NONZEROS IN DECOMPOSITION=,I5)            PRSP0800
         WRITE(IWRITE,13)IT2                                            PRSP0820
  13     FORMAT(23H ELAPSED TIME FOR SPMSF,I7)                          PRSP0840
C                                                                       PRSP0860
C MODIFY THE WORK STACK TO REFLECT THE AMOUNT NEEDED BY                 PRSP0880
C SPMSF AND ALLOCATE SPACE FOR THE NUMERICAL FACTORIZATION              PRSP0900
C                                                                       PRSP0920
         ISPAC= 2*N+2+ISIZE                                             PRSP0940
         IW = ISTKMD(ISPAC,2)                                           PRSP0960
         IUL = ISTKGT(ISIZE, 3)                                         PRSP0980
C                                                                       PRSP1000
C COMPUTE THE TIME NEEDED TO INSERT THE NUMERICAL ELEMENTS              PRSP1020
C IN THEIR PROPER PLACES                                                PRSP1040
C                                                                       PRSP1060
         IT3 = ILAPSZ(0)                                                PRSP1080
         DO 20 I=1, N                                                   PRSP1100
            MCP(I) = MRP(I)                                             PRSP1120
            IR = MRP(I)                                                 PRSP1140
            NUM = IA(IR+1)-IA(IR)                                       PRSP1160
            IPOINT = IA(IR)                                             PRSP1180
            CALL SPMIN(N, INMCP, ISTAK(IW), I, A(IPOINT),               PRSP1200
     1        JA(IPOINT), NUM, I, RSTAK(IUL))                           PRSP1220
  20     CONTINUE                                                       PRSP1240
         IT4 = ILAPSZ(0)-IT3                                            PRSP1260
         WRITE(IWRITE,21)IT4                                            PRSP1280
  21     FORMAT(23H ELAPSED TIME FOR SPMIN,I7)                          PRSP1300
C                                                                       PRSP1320
C TIME THE SUBROUTINE WHICH COMPUTES THE NUMERICAL                      PRSP1340
C FACTORIZATION                                                         PRSP1360
C                                                                       PRSP1380
         IT5 =ILAPSZ(0)                                                 PRSP1400
         CALL SPMNF(N, ISTAK(IW), RSTAK(IUL), 0.0, GROWTH)              PRSP1420
         IT6 =ILAPSZ(0)-IT5                                             PRSP1440
         WRITE(IWRITE, 22)IT6                                           PRSP1460
  22     FORMAT(23H ELAPSED TIME FOR SPMNF,I7)                          PRSP1480
         IT6 = IT2 + IT4 +IT6                                           PRSP1500
         WRITE(6,23)IT6                                                 PRSP1520
  23     FORMAT(26H ELAPSED TIME FOR SF-IN-NF,I7)                       PRSP1540
         NP1 = N+1                                                      PRSP1560
C                                                                       PRSP1580
C REDO THE FACTORIZATION WITH SPMLU AND TIME IT                         PRSP1600
C                                                                       PRSP1620
         CALL MOVEFR(NUMBER,A,RSTAK(IUL))                               PRSP1640
         CALL MOVEFI(NUMBER,JA,ISTAK(IW))                               PRSP1660
         IL = ISTKGT(N+1,2)                                             PRSP1680
         IT5 =ILAPSZ(0)                                                 PRSP1700
         CALL SPMLU(N, MRP, MCP, IA, ISTAK(IW), RSTAK(IUL), ISPAC,      PRSP1720
     1   ISTAK(IL), 0.0, 0.0, ISIZE, GROWTH)                            PRSP1740
         IT6 = ILAPSZ(0)-IT5                                            PRSP1760
         WRITE(IWRITE, 31)IT6                                           PRSP1780
  31     FORMAT(23H ELAPSED TIME FOR SPMLU, I7)                         PRSP1800
         CALL ISTKRL(3)                                                 PRSP1820
  40  CONTINUE                                                          PRSP1840
      STOP                                                              PRSP1860
      END                                                               PRSP1880
C$TEST PRST                                                             PRST0000
C***********************************************************************PRST0020
C                                                                       PRST0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPFLU                             PRST0060
C                                                                       PRST0080
C***********************************************************************PRST0100
       INTEGER K, N, I1MACH, IWRITE, MAXUL, I, NEW, IREAD, IERR         PRST0120
       INTEGER MRP(101), MCP(101), IWORK(5000), ISIZE, NERROR           PRST0140
       DOUBLE PRECISION UL(5000), THRESH, EPS, GROWTH                   PRST0160
       DOUBLE PRECISION B(101), ERROR, X                                PRST0180
       EXTERNAL TOY                                                     PRST0200
       COMMON /TOYS/ X, N, K                                            PRST0220
       MAXUL = 4000                                                     PRST0240
       IREAD = I1MACH(1)                                                PRST0260
       IWRITE = I1MACH(2)                                               PRST0280
C SET THE RECOVERY MODE                                                 PRST0300
       CALL ENTSRC(NEW, 1)                                              PRST0320
  10   READ(IREAD,11)K                                                  PRST0340
  11   FORMAT(I2)                                                       PRST0360
       IF (K .EQ. 0) STOP                                               PRST0380
       N = K*K + 1                                                      PRST0400
C                                                                       PRST0420
       READ(IREAD,12)X, THRESH, EPS                                     PRST0440
  12   FORMAT(3D10.2)                                                   PRST0460
       WRITE(IWRITE,13)K, N, X, THRESH, EPS                             PRST0480
  13   FORMAT(3H K=,I3,3H N=,I3,3H X=,D10.2,8H THRESH=,D10.2,           PRST0500
     1 5H EPS=,D10.2)                                                   PRST0520
C SET UP PERMUTATION VECTORS TO INDICATE NO PRIOR PIVOTING              PRST0540
       DO 20 I=1,N                                                      PRST0560
          MRP(I) = I                                                    PRST0580
          MCP(I) = I                                                    PRST0600
  20   CONTINUE                                                         PRST0620
       CALL DSPFLU(N, MRP, MCP, TOY, IWORK, UL, MAXUL, THRESH, EPS,     PRST0640
     1 ISIZE, GROWTH)                                                   PRST0660
       IF (NERROR(IERR) .EQ. 0) GO TO 30                                PRST0680
C                                                                       PRST0700
C TEST FOR SINGULARITY                                                  PRST0720
C                                                                       PRST0740
          CALL ERROFF                                                   PRST0760
          WRITE(IWRITE,21)                                              PRST0780
  21      FORMAT(16H SINGULAR MATRIX)                                   PRST0800
          GO TO 10                                                      PRST0820
C                                                                       PRST0840
  30   WRITE(IWRITE,31) ISIZE, GROWTH                                   PRST0860
  31   FORMAT(7H ISIZE=,I5,8H GROWTH=,1PD25.15)                         PRST0880
       CALL GETB(N, K, B, X)                                            PRST0900
C                                                                       PRST0920
C GENERATE THE RIGHT HAND SIDE AND SOLVE THE SYSTEM                     PRST0940
C                                                                       PRST0960
       CALL DSPFSL(N, MRP, MCP, IWORK, UL, B, N, 1)                     PRST0980
       ERROR = 0.0D0                                                    PRST1000
C                                                                       PRST1020
C COMPUTE THE ERROR IN THE SOLUTION                                     PRST1040
C                                                                       PRST1060
       DO 40 I = 1, N                                                   PRST1080
          ERROR = DMAX1(ERROR, DABS(B(I)-1.D0))                         PRST1100
  40   CONTINUE                                                         PRST1120
       WRITE(IWRITE,41)ERROR                                            PRST1140
  41   FORMAT(19H ERROR IN SOLUTION=,1PD25.15)                          PRST1160
       GO TO 10                                                         PRST1180
       END                                                              PRST1200
       SUBROUTINE TOY(I, ROW, JCOL, NUM)                                TOY 0000
       INTEGER I, NUM, JCOL(101)                                        TOY 0020
       INTEGER N, K, J, MODK                                            TOY 0040
       DOUBLE PRECISION ROW(101)                                        TOY 0060
       DOUBLE PRECISION X                                               TOY 0080
       COMMON /TOYS/ X, N, K                                            TOY 0100
       IF (I .LT. N) GO TO 20                                           TOY 0120
C LAST ROW                                                              TOY 0140
          DO 10 J=1,N                                                   TOY 0160
             ROW(J) = 1.D0                                              TOY 0180
             JCOL(J) = J                                                TOY 0200
  10      CONTINUE                                                      TOY 0220
          NUM = N                                                       TOY 0240
          RETURN                                                        TOY 0260
  20   JCOL(1) = I                                                      TOY 0280
       JCOL(2) = N                                                      TOY 0300
       ROW(1) = 2.D0                                                    TOY 0320
       ROW(2) = 1.D0                                                    TOY 0340
       MODK = MOD(I, K)                                                 TOY 0360
       JCOL(3) = I-1                                                    TOY 0380
       ROW(3) = -1.D0                                                   TOY 0400
       JCOL(4) = I+1                                                    TOY 0420
       ROW(4) = -1.D0                                                   TOY 0440
       NUM = 4                                                          TOY 0460
       IF (MODK .GT. 1) GO TO 30                                        TOY 0480
          ROW(1) = 1.D0 + X                                             TOY 0500
          IF (MODK .EQ. 1) JCOL(3) = I+1                                TOY 0520
          NUM = 3                                                       TOY 0540
  30   IF (I .LE. K) RETURN                                             TOY 0560
       IF ((I-1)/K .EQ. 1) GO TO 40                                     TOY 0580
       NUM = NUM + 1                                                    TOY 0600
       JCOL(NUM) = I-K                                                  TOY 0620
       ROW(NUM) = 1.D0                                                  TOY 0640
  40   IF (I .GE. N-K) RETURN                                           TOY 0660
       NUM = NUM + 1                                                    TOY 0680
       JCOL(NUM) = I+K                                                  TOY 0700
       ROW(NUM) = 2.D0                                                  TOY 0720
       RETURN                                                           TOY 0740
       END                                                              TOY 0760
C$TEST PRSY                                                             PRSY0000
C***********************************************************************PRSY0020
C                                                                       PRSY0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPFNF                             PRSY0060
C                                                                       PRSY0080
C***********************************************************************PRSY0100
       INTEGER N1, N2, N, MCP(500), MRP(500)                            PRSY0120
       INTEGER I1MACH, IREAD, IWRITE, TEMP, ISTAK(19000)                PRSY0140
       REAL A1, A2, GROWTH                                              PRSY0160
       INTEGER ISPAC,IW,MAXIW, IUL                                      PRSY0180
       REAL EL1, EL2, TR, SASUM, RSTAK(19000), B(500)                   PRSY0200
       EXTERNAL QUEI, QUEA                                              PRSY0220
       DOUBLE PRECISION DSTAK(9500)                                     PRSY0240
       COMMON /CSTAK/ DSTAK                                             PRSY0260
       COMMON /QUE/ A1, A2, N1, N2, N                                   PRSY0280
       EQUIVALENCE(RSTAK(1), ISTAK(1), DSTAK(1))                        PRSY0300
       IREAD = I1MACH(1)                                                PRSY0320
       IWRITE = I1MACH(2)                                               PRSY0340
       CALL ISTKIN(19000, 2)                                            PRSY0360
  10   READ(IREAD,11)N1, N2                                             PRSY0380
  11   FORMAT(2I3)                                                      PRSY0400
       IF (N1. EQ. 0) STOP                                              PRSY0420
       WRITE(IWRITE,12)N1, N2                                           PRSY0440
  12   FORMAT(/4H N1=,I3,4H N2=,I3)                                     PRSY0460
       N = (N1+1)*(N2+1)                                                PRSY0480
C                                                                       PRSY0500
C DETERMINE THE ORDERING                                                PRSY0520
C                                                                       PRSY0540
       CALL SPFOR(N, QUEI, MCP)                                         PRSY0560
C                                                                       PRSY0580
C GET THE WORK SPACE FROM THE STORAGE STACK                             PRSY0600
C                                                                       PRSY0620
       MAXIW = ISTKQU(2)-3*N-50                                         PRSY0640
       IW = ISTKGT(MAXIW, 2)                                            PRSY0660
C                                                                       PRSY0680
C DETERMINE THE SYMBOLIC FACTORIZATION                                  PRSY0700
C                                                                       PRSY0720
       DO 20 I=1,N                                                      PRSY0740
          MRP(I) = MCP(I)                                               PRSY0760
  20   CONTINUE                                                         PRSY0780
       CALL SPFSF(N, MRP, MCP, QUEI, ISTAK(IW), MAXIW, ISIZE)           PRSY0800
C                                                                       PRSY0820
C DETERMINE THE ACTUAL AMOUNT OF SPACE USED, MODIFY THE                 PRSY0840
C INTEGER WORK SPACE AND ALLOCATE SPACE TO SAVE THE                     PRSY0860
C FACTORIZATION                                                         PRSY0880
C                                                                       PRSY0900
       ISPAC = 2*N+1+ISIZE                                              PRSY0920
       IW = ISTKMD(ISPAC,2)                                             PRSY0940
       IUL= ISTKGT(ISIZE,3)                                             PRSY0960
  30   READ(IREAD,31)A1, A2                                             PRSY0980
  31   FORMAT(2F10.3)                                                   PRSY1000
       IF (A1.EQ.0.0)GO TO 50                                           PRSY1020
       WRITE(IWRITE,32)A1, A2                                           PRSY1040
  32   FORMAT(/4H A1=,F10.3,4H A2=,F10.3)                               PRSY1060
C                                                                       PRSY1080
C COMPUTE THE NUMERICAL FACTORIZATION                                   PRSY1100
C                                                                       PRSY1120
       CALL SPFNF(N, MRP, MCP, QUEA, ISTAK(IW), RSTAK(IUL),             PRSY1140
     1  GROWTH, 0.0)                                                    PRSY1160
       WRITE(IWRITE,33)GROWTH                                           PRSY1180
  33   FORMAT(7H GROWTH,E25.7)                                          PRSY1200
C                                                                       PRSY1220
C GENERATE RIGHT HAND SIDE                                              PRSY1240
C                                                                       PRSY1260
       DO 40 I=1,N                                                      PRSY1280
          B(I) = 0.0                                                    PRSY1300
  40   CONTINUE                                                         PRSY1320
       B(N) = 1.0                                                       PRSY1340
C                                                                       PRSY1360
C SOLVE THE PROBLEM                                                     PRSY1380
C                                                                       PRSY1400
       CALL SPSOL(N, MRP, MCP, ISTAK(IW), RSTAK(IUL), B, N, 1)          PRSY1420
C                                                                       PRSY1440
C FIND PROBABILITY OF BEING LOST                                        PRSY1460
C                                                                       PRSY1480
       EL1 = B(N)                                                       PRSY1500
       EL2 = SASUM(N1+1,B(N2+1),N2+1)                                   PRSY1520
       TEMP = (N2+1)*N1+1                                               PRSY1540
       TR = SASUM(N2,B(TEMP),1)                                         PRSY1560
       WRITE(IWRITE,41)EL1,EL2,TR                                       PRSY1580
  41   FORMAT(6H L1 = ,E15.5,6H L2 = ,E15.5,7H I12 = ,E15.5)            PRSY1600
       GO TO 30                                                         PRSY1620
C RELEASE STACK SPACE                                                   PRSY1640
  50   CALL ISTKRL(2)                                                   PRSY1660
       GO TO 10                                                         PRSY1680
       END                                                              PRSY1700
C$TEST PRSZ                                                             PRSZ0000
C***********************************************************************PRSZ0020
C                                                                       PRSZ0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPFML                             PRSZ0060
C                                                                       PRSZ0080
C***********************************************************************PRSZ0100
      INTEGER I, IWRITE, I1MACH, NEQ                                    PRSZ0120
      REAL X(100), B(100), ERR, SASUM                                   PRSZ0140
      EXTERNAL AROW                                                     PRSZ0160
      REAL RSTACK(2500)                                                 PRSZ0180
      COMMON/CSTAK/ RSTACK                                              PRSZ0200
      COMMON /NN/ NX                                                    PRSZ0220
      CALL ISTKIN(2500,3)                                               PRSZ0240
      NX = 10                                                           PRSZ0260
      NEQ = 100                                                         PRSZ0280
C                                                                       PRSZ0300
C CONSTRUCT A RANDOM VECTOR FOR X                                       PRSZ0320
C                                                                       PRSZ0340
      DO 10 I=1,NEQ                                                     PRSZ0360
         X(I)=UNI(0)                                                    PRSZ0380
  10  CONTINUE                                                          PRSZ0400
C                                                                       PRSZ0420
C FIND THE VECTOR B=AX                                                  PRSZ0440
C                                                                       PRSZ0460
      CALL SPFML(NEQ,AROW,X,B)                                          PRSZ0480
C                                                                       PRSZ0500
C SOLVE THE SYSTEM AX=B                                                 PRSZ0520
C                                                                       PRSZ0540
      CALL SPFLE(NEQ,.TRUE.,AROW,ISIZE,B,NEQ,1)                         PRSZ0560
C                                                                       PRSZ0580
C FIND THE NORM OF THE ERROR OF THE SOLUTION                            PRSZ0600
C                                                                       PRSZ0620
      ERR=0.0                                                           PRSZ0640
      IWRITE = I1MACH(2)                                                PRSZ0660
      DO 20 I=1,NEQ                                                     PRSZ0680
         ERR=ERR + ABS(B(I)-X(I))                                       PRSZ0700
  20  CONTINUE                                                          PRSZ0720
      ERR=ERR/SASUM(NEQ,X,1)                                            PRSZ0740
      WRITE(IWRITE,21)ERR                                               PRSZ0760
  21  FORMAT(19H RELATIVE ERROR IS ,1PE15.7)                            PRSZ0780
      STOP                                                              PRSZ0800
      END                                                               PRSZ0820
      SUBROUTINE AROW(I, ROW, JCOL, NUM)                                AROW0000
      REAL ROW(5)                                                       AROW0020
      INTEGER JCOL(5)                                                   AROW0040
      COMMON /NN/ N                                                     AROW0060
C                                                                       AROW0080
C IN THE BLOCK TRIDIAGONAL MATRIX THERE ARE AT MOST 5                   AROW0100
C NONZERO ELEMENTS PER ROW AND EACH ROW HAS A DIAGONAL                  AROW0120
C OF -4.                                                                AROW0140
C THE VARIABLE IN INDICATES WHICH BLOCK ONE IS IN AND                   AROW0160
C THE VARIABLE JN INDICATES WHERE IN THE BLOCK ONE IS AT                AROW0180
C                                                                       AROW0200
      IN = (I-1)/N+1                                                    AROW0220
      JN = I - (IN-1) * N                                               AROW0240
      JCOL(1)=I                                                         AROW0260
      ROW(1)=-4.0                                                       AROW0280
      NUM=2                                                             AROW0300
C                                                                       AROW0320
C DO THE OFF DIAGONAL ELEMENTS IN THE CURRENT BLOCK                     AROW0340
C                                                                       AROW0360
      JCOL(2)=I-1                                                       AROW0380
      ROW(2)=1.0                                                        AROW0400
      IF (JN.GT.1) NUM=NUM+1                                            AROW0420
      JCOL(NUM)=I+1                                                     AROW0440
      ROW(NUM)=1.0                                                      AROW0460
      IF (JN.LT.N)NUM=NUM+1                                             AROW0480
C                                                                       AROW0500
C DO THE BLOCK TO THE LEFT                                              AROW0520
C                                                                       AROW0540
      JCOL(NUM)=I-N                                                     AROW0560
      ROW(NUM)=1.0                                                      AROW0580
      IF (IN.GT.1)NUM=NUM+1                                             AROW0600
C                                                                       AROW0620
C DO THE BLOCK TO THE RIGHT                                             AROW0640
C                                                                       AROW0660
      JCOL(NUM)=I+N                                                     AROW0680
      ROW(NUM)=1.0                                                      AROW0700
      IF(IN.EQ.N) NUM=NUM-1                                             AROW0720
      RETURN                                                            AROW0740
      END                                                               AROW0760
C$TEST PRS1                                                             PRS10000
C***********************************************************************PRS10020
C                                                                       PRS10040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPMML                             PRS10060
C                                                                       PRS10080
C***********************************************************************PRS10100
      INTEGER I, IWRITE, I1MACH, NEQ, J, NX, L                          PRS10120
      INTEGER IROW(101), JCOL(500)                                      PRS10140
      REAL A(500)                                                       PRS10160
      REAL X(100), B(100), ERR, SASUM                                   PRS10180
      REAL RSTACK(1800)                                                 PRS10200
      COMMON/CSTAK/ RSTACK                                              PRS10220
      CALL ISTKIN(1800,3)                                               PRS10240
      NX = 10                                                           PRS10260
C                                                                       PRS10280
C CONSTRUCT THE MATRIX                                                  PRS10300
C                                                                       PRS10320
      L=1                                                               PRS10340
      NEQ=1                                                             PRS10360
      DO 20 I=1, NX                                                     PRS10380
         DO 10 J= 1,NX                                                  PRS10400
            IROW(NEQ)=L                                                 PRS10420
            JCOL(L)=NEQ                                                 PRS10440
            A(L)=-4.0                                                   PRS10460
            L=L+1                                                       PRS10480
            JCOL(L)=NEQ-1                                               PRS10500
            A(L)=1.0                                                    PRS10520
            IF (J.GT.1)L=L+1                                            PRS10540
            JCOL(L)=NEQ+1                                               PRS10560
            A(L)=1.0                                                    PRS10580
            IF (J.LT.NX)L=L+1                                           PRS10600
            JCOL(L)=NEQ-NX                                              PRS10620
            A(L)=1.0                                                    PRS10640
            IF (I.GT.1)L=L+1                                            PRS10660
            JCOL(L)=NEQ+NX                                              PRS10680
            A(L)=1.0                                                    PRS10700
            IF(I.LT.NX)L=L+1                                            PRS10720
            NEQ=NEQ+1                                                   PRS10740
  10     CONTINUE                                                       PRS10760
  20  CONTINUE                                                          PRS10780
      IROW(NEQ)=L                                                       PRS10800
      NEQ=NEQ-1                                                         PRS10820
C                                                                       PRS10840
C CONSTRUCT A RANDOM VECTOR FOR X                                       PRS10860
C                                                                       PRS10880
      DO 30 I=1,NEQ                                                     PRS10900
         X(I)=UNI(0)                                                    PRS10920
  30  CONTINUE                                                          PRS10940
C                                                                       PRS10960
C FIND THE VECTOR B=AX                                                  PRS10980
C                                                                       PRS11000
      CALL SPMML(NEQ,IROW,JCOL,A,X,B)                                   PRS11020
C                                                                       PRS11040
C SOLVE THE SYSTEM AX=B                                                 PRS11060
C                                                                       PRS11080
      CALL SPMLE(NEQ,.TRUE.,IROW,JCOL,A,ISIZE,B,NEQ,1)                  PRS11100
C                                                                       PRS11120
C FIND THE NORM OF THE ERROR OF THE SOLUTION                            PRS11140
C                                                                       PRS11160
      ERR=0.0                                                           PRS11180
      IWRITE = I1MACH(2)                                                PRS11200
      DO 40 I=1,NEQ                                                     PRS11220
         ERR=ERR + ABS(B(I)-X(I))                                       PRS11240
  40  CONTINUE                                                          PRS11260
      ERR=ERR/SASUM(NEQ,X,1)                                            PRS11280
      WRITE(IWRITE,41)ERR                                               PRS11300
  41  FORMAT(19H RELATIVE ERROR IS ,1PE15.7)                            PRS11320
      STOP                                                              PRS11340
      END                                                               PRS11360
C$TEST PRS3                                                             PRS30000
C***********************************************************************PRS30020
C                                                                       PRS30040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPMNF                             PRS30060
C                                                                       PRS30080
C***********************************************************************PRS30100
      INTEGER IROW(301), JCOL(2500), ISTAK(23000), I1MACH, IWRITE       PRS30120
      INTEGER MRP(300), MCP(300), ITEMP, INMCP(300), N                  PRS30140
      INTEGER ILAPSZ, IT, IT2, IT3, IT4, IT5, IT6, I, NUMBER            PRS30160
      INTEGER NUM, IPOINT, NP1                                          PRS30180
      REAL RSTAK(23000), A(2500), GROWTH                                PRS30200
      DOUBLE PRECISION DSTAK(11500)                                     PRS30220
      COMMON /CSTAK/DSTAK                                               PRS30240
      EQUIVALENCE(ISTAK(1), RSTAK(1), DSTAK(1))                         PRS30260
      IWRITE = I1MACH(2)                                                PRS30280
      CALL ISTKIN(23000,2)                                              PRS30300
      DO 40 N=100,300,100                                               PRS30320
         CALL SETUP(N, IROW, JCOL, A)                                   PRS30340
         NUMBER = IROW(N+1)-1                                           PRS30360
         WRITE(IWRITE,11)N,NUMBER                                       PRS30380
  11     FORMAT(/5H N = ,I4,22H NUMBER OF NONZEROS = ,I7)               PRS30400
C                                                                       PRS30420
C ORDER THE ROWS AND COLUMNS OF THE MATRIX                              PRS30440
C TO DECREASE FILL-IN                                                   PRS30460
C                                                                       PRS30480
         CALL SPMOR(N, IROW, JCOL, MRP, INMCP)                          PRS30500
C                                                                       PRS30520
C ALLOCATE THE AVAILABLE SPACE FOR THE WORK VECTOR IN SPMSF             PRS30540
C BUT MAKE SURE THERE IS ENOUGH FOR SPMSF'S ALLOCATIONS                 PRS30560
C                                                                       PRS30580
         MAXIW = ISTKQU(2)-3*N-5                                        PRS30600
         IW = ISTKGT(MAXIW,2)                                           PRS30620
C                                                                       PRS30640
C TIME THE SYMBOLIC FACTORIZATION                                       PRS30660
C                                                                       PRS30680
         IT = ILAPSZ(0)                                                 PRS30700
         CALL SPMSF(N, MRP, INMCP, IROW, JCOL, ISTAK(IW), MAXIW, ISIZE) PRS30720
         IT2=ILAPSZ(0)-IT                                               PRS30740
         WRITE(IWRITE, 12)ISIZE                                         PRS30760
  12     FORMAT(37H NUMBER OF NONZEROS IN DECOMPOSITION=,I5)            PRS30780
         WRITE(IWRITE,13)IT2                                            PRS30800
  13     FORMAT(23H ELAPSED TIME FOR SPMSF,I7)                          PRS30820
C                                                                       PRS30840
C MODIFY THE WORK STACK TO REFLECT THE AMOUNT NEEDED BY SPMSF           PRS30860
C AND ALLOCATE SPACE FOR THE NUMERICAL FACTORIZATION                    PRS30880
C                                                                       PRS30900
         ISPAC= 2*N+2+ISIZE                                             PRS30920
         IW = ISTKMD(ISPAC,2)                                           PRS30940
         IUL = ISTKGT(ISIZE, 3)                                         PRS30960
C                                                                       PRS30980
C COMPUTE THE TIME NEEDED TO INSERT THE NUMERICAL ELEMENTS              PRS31000
C IN THEIR PROPER PLACES                                                PRS31020
C                                                                       PRS31040
         IT3 = ILAPSZ(0)                                                PRS31060
         DO 20 I=1, N                                                   PRS31080
            MCP(I) = MRP(I)                                             PRS31100
            IR = MRP(I)                                                 PRS31120
            NUM = IROW(IR+1)-IROW(IR)                                   PRS31140
            IPOINT = IROW(IR)                                           PRS31160
            CALL SPMIN(N, INMCP, ISTAK(IW), I, A(IPOINT),               PRS31180
     1        JCOL(IPOINT), NUM, I, RSTAK(IUL))                         PRS31200
  20     CONTINUE                                                       PRS31220
         IT4 = ILAPSZ(0)-IT3                                            PRS31240
         WRITE(IWRITE,21)IT4                                            PRS31260
  21     FORMAT(23H ELAPSED TIME FOR SPMIN,I7)                          PRS31280
C                                                                       PRS31300
C TIME THE SUBROUTINE WHICH COMPUTES THE NUMERICAL                      PRS31320
C FACTORIZATION                                                         PRS31340
C                                                                       PRS31360
         IT5 =ILAPSZ(0)                                                 PRS31380
         CALL SPMNF(N, ISTAK(IW), RSTAK(IUL), 0.0, GROWTH)              PRS31400
         IT6 =ILAPSZ(0)-IT5                                             PRS31420
         WRITE(IWRITE, 22)IT6                                           PRS31440
  22     FORMAT(23H ELAPSED TIME FOR SPMNF,I7)                          PRS31460
         IT6 = IT2 + IT4 +IT6                                           PRS31480
         WRITE(6,23)IT6                                                 PRS31500
  23     FORMAT(26H ELAPSED TIME FOR SF-IN-NF,I7)                       PRS31520
C                                                                       PRS31540
C REDO THE FACTORIZATION WITH THE SUBROUTINE THAT PERMITS               PRS31560
C PIVOTING FOR STABILITY AND TIME IT                                    PRS31580
C                                                                       PRS31600
         CALL MOVEFR(NUMBER,A,RSTAK(IUL))                               PRS31620
         CALL MOVEFI(NUMBER,JCOL,ISTAK(IW))                             PRS31640
         IL = ISTKGT(N+1,2)                                             PRS31660
         IT5 =ILAPSZ(0)                                                 PRS31680
         CALL SPMLU(N, MRP, MCP, IROW, ISTAK(IW), RSTAK(IUL), ISPAC,    PRS31700
     1   ISTAK(IL), 0.0, 0.0, ISIZE, GROWTH)                            PRS31720
         IT6 = ILAPSZ(0)-IT5                                            PRS31740
         WRITE(IWRITE, 31)IT6                                           PRS31760
  31     FORMAT(23H ELAPSED TIME FOR SPMLU, I7)                         PRS31780
         CALL ISTKRL(3)                                                 PRS31800
  40  CONTINUE                                                          PRS31820
      STOP                                                              PRS31840
      END                                                               PRS31860
C$TEST PREA                                                             PREA0000
C***********************************************************************PREA0020
C                                                                       PREA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPFOR                             PREA0060
C                                                                       PREA0080
C***********************************************************************PREA0100
       INTEGER N1, N2, N, MCP(500), MRP(500), MAXIW, IW, I              PREA0120
       INTEGER I1MACH, IREAD, IWRITE, ISTAK(19000)                      PREA0140
       EXTERNAL QUEI                                                    PREA0160
       COMMON /QUE/ A1, A2, N1, N2, N                                   PREA0180
       COMMON /CSTAK/ ISTAK                                             PREA0200
       IREAD = I1MACH(1)                                                PREA0220
       IWRITE = I1MACH(2)                                               PREA0240
       CALL ISTKIN(19000, 2)                                            PREA0260
  10   READ(IREAD,11)N1, N2                                             PREA0280
  11   FORMAT(2I3)                                                      PREA0300
       IF (N1. EQ. 0) STOP                                              PREA0320
       WRITE(IWRITE,12)N1, N2                                           PREA0340
  12   FORMAT(4H N1=,I3,4H N2=,I3)                                      PREA0360
       N = (N1+1)*(N2+1)                                                PREA0380
C                                                                       PREA0400
C DETERMINE THE ORDERING                                                PREA0420
C                                                                       PREA0440
       CALL SPFOR(N, QUEI, MCP)                                         PREA0460
C                                                                       PREA0480
C GET THE WORK SPACE FROM THE STORAGE STACK                             PREA0500
C                                                                       PREA0520
       MAXIW = ISTKQU(2)-3*N-50                                         PREA0540
       IW = ISTKGT(MAXIW, 2)                                            PREA0560
C                                                                       PREA0580
C DETERMINE THE SYMBOLIC FACTORIZATION                                  PREA0600
C                                                                       PREA0620
       DO 20 I=1,N                                                      PREA0640
          MRP(I) = MCP(I)                                               PREA0660
  20   CONTINUE                                                         PREA0680
       CALL SPFSF(N, MRP, MCP, QUEI, ISTAK(IW), MAXIW, ISIZE)           PREA0700
       WRITE(IWRITE,21)ISIZE                                            PREA0720
  21   FORMAT(34H SPACE NEEDED FOR DECOMPOSITION - ,I8)                 PREA0740
C                                                                       PREA0760
C REDO THE FACTORIZATION WITHOUT PIVOTING                               PREA0780
C                                                                       PREA0800
       DO 30 I = 1,N                                                    PREA0820
          MCP(I) = I                                                    PREA0840
          MRP(I) = I                                                    PREA0860
  30   CONTINUE                                                         PREA0880
       CALL SPFSF(N, MRP, MCP, QUEI, ISTAK(IW), MAXIW, ISIZE)           PREA0900
       WRITE(IWRITE, 31) ISIZE                                          PREA0920
  31   FORMAT(34H SPACE NEEDED WITHOUT ORDERING -   ,I8)                PREA0940
       CALL ISTKRL(1)                                                   PREA0960
       GO TO 10                                                         PREA0980
       END                                                              PREA1000
       SUBROUTINE QUEI(I, JCOL, NUM)                                    QUEI0000
       INTEGER I, NUM, JCOL(100), N, N1, N2, II, JJ, J                  QUEI0020
       COMMON /QUE/ A1, A2, N1, N2, N                                   QUEI0040
       IF (I.NE.N) GO TO 20                                             QUEI0060
C PROCESS LAST ROW                                                      QUEI0080
       DO 10 J=1, N                                                     QUEI0100
          JCOL(J) = J                                                   QUEI0120
  10   CONTINUE                                                         QUEI0140
       NUM = N                                                          QUEI0160
       RETURN                                                           QUEI0180
  20   N2P1=N2+1                                                        QUEI0200
C DETERMINE WHICH BLOCK                                                 QUEI0220
       II=(I-1)/N2P1                                                    QUEI0240
C DETERMINE THE POSITION IN THE BLOCK                                   QUEI0260
       JJ = MOD(I-1, N2P1)                                              QUEI0280
       JCOL(1) = I                                                      QUEI0300
C INSERT THE DIAGONAL ELEMENT                                           QUEI0320
       NUM = 1                                                          QUEI0340
       IF (II .EQ. 0) GO TO 30                                          QUEI0360
C THIS IS NOT THE FIRST ROW OF THE CURRENT BLOCK                        QUEI0380
       JCOL(2) = I-N2P1                                                 QUEI0400
       NUM = 2                                                          QUEI0420
  30   IF (JJ.EQ.0) GO TO 40                                            QUEI0440
C THIS IS NOT THE FIRST ROW OF THE CURRENT BLOCK                        QUEI0460
       NUM = NUM+1                                                      QUEI0480
       JCOL(NUM) = I-1                                                  QUEI0500
  40   IF (JJ.EQ. N2) GO TO 50                                          QUEI0520
C THIS IS NOT THE LAST ROW OF THE CURRENT BLOCK                         QUEI0540
       NUM=NUM+1                                                        QUEI0560
       JCOL(NUM)= I+1                                                   QUEI0580
  50   IF (II .EQ. N1) RETURN                                           QUEI0600
       NUM = NUM +1                                                     QUEI0620
       JCOL(NUM) = I+N2P1                                               QUEI0640
       RETURN                                                           QUEI0660
       END                                                              QUEI0680
C                                                                       QUEI0700
C DATA FOR THE EXAMPLE IN THE PORT SHEET...  (REMOVE THE C              QUEI0720
C IN COLUMN 1 BEFORE FEEDING THIS DATA TO THE PROGRAM ABOVE.)           QUEI0740
C$DATA                                                                  QUEI0760
C10 10                                                                  QUEI0780
C15 15                                                                  QUEI0800
C19 19                                                                  QUEI0820
C 0  0                                                                  QUEI0840
C$TEST PRMA                                                             PRMA0000
C***********************************************************************PRMA0020
C                                                                       PRMA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPMSF                             PRMA0060
C                                                                       PRMA0080
C***********************************************************************PRMA0100
       INTEGER MRP(32), MCP(32), INMCP(32)                              PRMA0120
       INTEGER IROW(33), JA(200), IWORK(500)                            PRMA0140
       IREAD = I1MACH(1)                                                PRMA0160
       IWRITE = I1MACH(2)                                               PRMA0180
       N = 32                                                           PRMA0200
       MAXIW = 500                                                      PRMA0220
C                                                                       PRMA0240
C READ IN THE VECTORS DEFINING THE NONZERO BLOCKS                       PRMA0260
C                                                                       PRMA0280
       READ(IREAD,11)(IROW(I),I=1,33)                                   PRMA0300
  11   FORMAT(20I3)                                                     PRMA0320
       IEND=IROW(33) - 1                                                PRMA0340
       READ(IREAD,11)(JA(I),I=1,IEND)                                   PRMA0360
       WRITE(IWRITE,12)IEND                                             PRMA0380
  12   FORMAT(29H NUMBER OF NONZEROS IN MATRIX,I5)                      PRMA0400
C                                                                       PRMA0420
C SET UP THE PERMUTATION VECTORS TO REFLECT NO REORDERING               PRMA0440
C                                                                       PRMA0460
       DO 20 I=1, N                                                     PRMA0480
          MRP(I) = I                                                    PRMA0500
          MCP(I) = I                                                    PRMA0520
          INMCP(I) = I                                                  PRMA0540
  20   CONTINUE                                                         PRMA0560
C                                                                       PRMA0580
C DETERMINE THE SYMBOLIC FACTORIZATION                                  PRMA0600
C                                                                       PRMA0620
       CALL SPMSF(N, MRP, INMCP, IROW, JA, IWORK, MAXIW, ISIZE)         PRMA0640
       WRITE(IWRITE,21)ISIZE                                            PRMA0660
  21   FORMAT(35H BLOCKS NEEDED WITHOUT PERMUTATIONS,I5)                PRMA0680
C                                                                       PRMA0700
C FIND AN ORDERING WHICH WOULD DECREASE FILL-IN AND RECOMPUTE THE       PRMA0720
C SYMBOLIC FACTORIZATION                                                PRMA0740
C                                                                       PRMA0760
       CALL SPMOR(N, IROW, JA, MCP, INMCP)                              PRMA0780
       CALL SPMSF(N, MCP, INMCP, IROW, JA, IWORK, MAXIW, ISIZE)         PRMA0800
       WRITE(IWRITE,22)ISIZE                                            PRMA0820
  22   FORMAT(32H BLOCKS NEEDED WITH PERMUTATIONS,I5)                   PRMA0840
       STOP                                                             PRMA0860
       END                                                              PRMA0880
C$TEST EBEA                                                             EBEA0000
C***********************************************************************EBEA0020
C                                                                       EBEA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM EEBSF                             EBEA0060
C                                                                       EBEA0080
C***********************************************************************EBEA0100
      INTEGER I1MACH,IWRITE,K,NT1,NT2                                   EBEA0120
      EXTERNAL F                                                        EBEA0140
      REAL EESFF,EEBSF,T1(100),A1(100),T2(100),A2(100),                 EBEA0160
     1 ERROR(2),ERREST(2)                                               EBEA0180
C                                                                       EBEA0200
C MAKE THE MESH                                                         EBEA0220
C                                                                       EBEA0240
      K = 4                                                             EBEA0260
      CALL UMB(0.0E0,3.14E0,16,K,T1,NT1)                                EBEA0280
      CALL UMB(0.0E0,3.14E0,21,K,T2,NT2)                                EBEA0300
C                                                                       EBEA0320
C DO THE FITTING                                                        EBEA0340
C                                                                       EBEA0360
      CALL L2SFF(F,K,T1,NT1,A1)                                         EBEA0380
      CALL L2SFF(F,K,T2,NT2,A2)                                         EBEA0400
C                                                                       EBEA0420
C GET THE ERROR                                                         EBEA0440
C                                                                       EBEA0460
      ERROR(1) = EESFF(K,T1,NT1,A1,F)                                   EBEA0480
      ERROR(2) = EESFF(K,T2,NT2,A2,F)                                   EBEA0500
C                                                                       EBEA0520
      ERREST(1) = EEBSF(K,T1,NT1,A1,T2,NT2,A2)                          EBEA0540
      ERREST(2) = ERREST(1)*(FLOAT(NT1-2*K+1)/FLOAT(                    EBEA0560
     1 NT2-2*K-1))**K                                                   EBEA0580
      IWRITE = I1MACH(2)                                                EBEA0600
      WRITE(IWRITE,99)ERROR(1),ERROR(2),ERREST(1),ERREST(2)             EBEA0620
   99  FORMAT(8H ERROR = ,2E10.2,8H ESTER = ,2E10.2)                    EBEA0640
C                                                                       EBEA0660
      STOP                                                              EBEA0680
C                                                                       EBEA0700
      END                                                               EBEA0720
      SUBROUTINE F(X,NX,FX,WX)                                          F   0000
C                                                                       F   0020
      REAL X(NX),FX(NX),WX(NX)                                          F   0040
C                                                                       F   0060
      DO 10 I = 1,NX                                                    F   0080
      FX(I) = SIN(X(I))                                                 F   0100
   10 CONTINUE                                                          F   0120
C                                                                       F   0140
      RETURN                                                            F   0160
C                                                                       F   0180
      END                                                               F   0200
C$TEST LSFA                                                             LSFA0000
C***********************************************************************LSFA0020
C                                                                       LSFA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM L2SFF                             LSFA0060
C                                                                       LSFA0080
C***********************************************************************LSFA0100
      EXTERNAL F                                                        LSFA0120
      INTEGER K,IWRITE,I1MACH,NT                                        LSFA0140
      REAL EESFF, T(100), A(100), ERROR                                 LSFA0160
C                                                                       LSFA0180
C MAKE THE MESH                                                         LSFA0200
C                                                                       LSFA0220
      K = 4                                                             LSFA0240
      CALL UMB (0.0E0,3.14E0,21,K,T,NT)                                 LSFA0260
C                                                                       LSFA0280
C DO THE FITTING                                                        LSFA0300
C                                                                       LSFA0320
      CALL L2SFF (F, K, T, NT, A)                                       LSFA0340
C                                                                       LSFA0360
C GET THE ERROR                                                         LSFA0380
C                                                                       LSFA0400
      ERROR = EESFF (K, T, NT, A, F)                                    LSFA0420
C                                                                       LSFA0440
      IWRITE = I1MACH(2)                                                LSFA0460
      WRITE (IWRITE, 1000) ERROR                                        LSFA0480
 1000 FORMAT (9H ERROR = ,E10.2)                                        LSFA0500
C                                                                       LSFA0520
      STOP                                                              LSFA0540
C                                                                       LSFA0560
      END                                                               LSFA0580
      SUBROUTINE F(X, NX, FX, WX)                                       F   0000
C                                                                       F   0020
      INTEGER I,NX                                                      F   0040
      REAL X(NX), FX(NX), WX(NX)                                        F   0060
C                                                                       F   0080
      DO 1000 I = 1,NX                                                  F   0100
      FX(I) = SIN(X(I))                                                 F   0120
 1000 CONTINUE                                                          F   0140
C                                                                       F   0160
      RETURN                                                            F   0180
C                                                                       F   0200
      END                                                               F   0220
C$TEST SDBA                                                             SDBA0000
C***********************************************************************SDBA0020
C                                                                       SDBA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM DL2SF                             SDBA0060
C                                                                       SDBA0080
C***********************************************************************SDBA0100
      INTEGER I,I1MACH,IWRITE,K,N,NT                                    SDBA0120
      REAL X(51),Y(51),T(100),A(100),                                   SDBA0140
     1 XCHECK(101),YCHECK(101,2),ERR(2)                                 SDBA0160
C                                                                       SDBA0180
      K = 4                                                             SDBA0200
C                                                                       SDBA0220
C MAKE THE ABSCISSAE FOR THE FIT.                                       SDBA0240
C                                                                       SDBA0260
      CALL UMD(0.0E0,3.14E0,51,X)                                       SDBA0280
C                                                                       SDBA0300
C MAKE THE DATA.                                                        SDBA0320
C                                                                       SDBA0340
      DO 1000 I = 1, 51                                                 SDBA0360
      Y(I) = SIN(X(I))                                                  SDBA0380
 1000 CONTINUE                                                          SDBA0400
C                                                                       SDBA0420
C MAKE THE CHECK POINTS                                                 SDBA0440
C                                                                       SDBA0460
      CALL UMD(X(1),X(51),101,XCHECK)                                   SDBA0480
C                                                                       SDBA0500
C MAKE THE MESH.                                                        SDBA0520
C                                                                       SDBA0540
      N = 2                                                             SDBA0560
C                                                                       SDBA0580
      CALL MNPB(X,51,N,K,T,NT)                                          SDBA0600
C                                                                       SDBA0620
C DO THE FIT.                                                           SDBA0640
C                                                                       SDBA0660
      CALL DL2SF(X,Y,51,K,T,NT,A)                                       SDBA0680
C                                                                       SDBA0700
C EVALUATE THE ERROR IN THE FIT AND ITS DERIVATIVES                     SDBA0720
C AT THE CHECK POINTS                                                   SDBA0740
C                                                                       SDBA0760
      CALL SPLND(K,T,NT,A,XCHECK,101,2,YCHECK)                          SDBA0780
C                                                                       SDBA0800
      CALL SETR(2,0.0E0,ERR)                                            SDBA0820
      DO 1001 I = 1, 101                                                SDBA0840
      ERR(1) = AMAX1(ERR(1),ABS(YCHECK(I,1)-SIN(XCHECK(I))))            SDBA0860
      ERR(2) = AMAX1(ERR(2),ABS(YCHECK(I,2)-COS(XCHECK(I))))            SDBA0880
 1001 CONTINUE                                                          SDBA0900
C                                                                       SDBA0920
      IWRITE = I1MACH(2)                                                SDBA0940
      WRITE(IWRITE,1006) ERR(1),ERR(2)                                  SDBA0960
 1006 FORMAT(9H ERROR = ,2E10.2)                                        SDBA0980
C                                                                       SDBA1000
      STOP                                                              SDBA1020
C                                                                       SDBA1040
      END                                                               SDBA1060
C$TEST PDEA                                                             PDEA0000
C***********************************************************************PDEA0020
C                                                                       PDEA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM POST                              PDEA0060
C                                                                       PDEA0080
C***********************************************************************PDEA0100
      REAL TSTOP,V( 1 ),DT,MESH( 100 ),U( 100 )                         PDEA0120
      REAL ERRPAR( 2 )                                                  PDEA0140
      INTEGER K,NMESH,NDX,NU,NV                                         PDEA0160
      EXTERNAL AF,BC,DEE,HANDLE,UOFX                                    PDEA0180
C                                                                       PDEA0200
      COMMON/TIME/TT                                                    PDEA0220
      REAL TT                                                           PDEA0240
      COMMON/CSTAK/DS( 2000 )                                           PDEA0260
      DOUBLEPRECISION DS                                                PDEA0280
      REAL WS( 1000 )                                                   PDEA0300
      REAL RS( 1000 )                                                   PDEA0320
      INTEGER IS( 1000 )                                                PDEA0340
      LOGICAL LS( 1000 )                                                PDEA0360
      EQUIVALENCE( DS( 1 ),WS( 1 ),RS( 1 ),IS( 1 ),LS( 1 ) )            PDEA0380
C                                                                       PDEA0400
C  INITIALIZE THE PORT STACK LENGTH                                     PDEA0420
C                                                                       PDEA0440
      CALL ISTKIN( 2000,4 )                                             PDEA0460
C                                                                       PDEA0480
      NU = 1                                                            PDEA0500
      NV = 1                                                            PDEA0520
C                                                                       PDEA0540
C  SET THE ERROR CRITERION FOR ABSOLUTE ERROR                           PDEA0560
C                                                                       PDEA0580
      ERRPAR( 1 ) = 0                                                   PDEA0600
      ERRPAR( 2 ) = 1.E-2                                               PDEA0620
C                                                                       PDEA0640
      TSTOP = 8.*ATAN( 1.E0 )                                           PDEA0660
      DT = 0.4                                                          PDEA0680
C                                                                       PDEA0700
C MAKE A MESH OF NDX UNIFORM POINTS ON (-PI, +PI)                       PDEA0720
C                                                                       PDEA0740
      K = 4                                                             PDEA0760
      NDX = 7                                                           PDEA0780
      CALL UMB(  - 4.*ATAN( 1.E0 ), + 4.*ATAN( 1.E0 ),NDX,K,MESH,NMESH )PDEA0800
      TT = 0                                                            PDEA0820
C                                                                       PDEA0840
C  SET THE INITIAL CONDITIONS FOR U                                     PDEA0860
C                                                                       PDEA0880
      CALL L2SFF( UOFX,K,MESH,NMESH,U )                                 PDEA0900
C                                                                       PDEA0920
C  SET THE INITIAL CONDITIONS FOR V                                     PDEA0940
C                                                                       PDEA0960
      V( 1 ) =  - 1.                                                    PDEA0980
C                                                                       PDEA1000
      CALL POST( U,NU,K,MESH,NMESH,V,NV,0E0,TSTOP,DT,AF,BC,DEE,ERRPAR,HAPDEA1020
     *NDLE )                                                            PDEA1040
C                                                                       PDEA1060
      STOP                                                              PDEA1080
      END                                                               PDEA1100
      SUBROUTINE AF( T,X,NX,U,UX,UT,UTX,NU,V,VT,NV,A,AU,AUX,AUT,AUTX,AV,AF  0000
     *AVT,F,FU,FUX,FUT,FUTX,FV,FVT )                                    AF  0020
      REAL T,X( NX ),U( NX,NU ),UX( NX,NU ),UT( NX,NU ),UTX( NX,NU ),V( AF  0040
     *NV ),VT( NV ),A( NX,NU ),AU( NX,NU,NU ),AUX( NX,NU,NU ),AUT( NX,NUAF  0060
     *,NU ),AUTX( NX,NU,NU ),AV( NX,NU,NV ),AVT( NX,NU,NV ),F( NX,NU ),FAF  0080
     *U( NX,NU,NU ),FUX( NX,NU,NU ),FUT( NX,NU,NU ),FUTX( NX,NU,NU ),FV(AF  0100
     * NX,NU,NV ),FVT( NX,NU,NV )                                       AF  0120
      INTEGER NU,NV,NX                                                  AF  0140
      INTEGER I                                                         AF  0160
      DO 23000 I = 1,NX                                                 AF  0180
      A( I,1 ) =  - UX( I,1 )                                           AF  0200
      AUX( I,1,1 ) =  - 1                                               AF  0220
      F( I,1 ) =  - UT( I,1 ) - U( I,1 )**3 + SIN( X( I ) )*( COS( T ) -AF  0240
     * SIN( T ) + SIN( X( I ) )**2*COS( T )**3 )                        AF  0260
      FUT( I,1,1 ) =  - 1                                               AF  0280
      FU( I,1,1 ) =  - 3*U( I,1 )**2                                    AF  0300
23000 CONTINUE                                                          AF  0320
      RETURN                                                            AF  0340
      END                                                               AF  0360
      SUBROUTINE BC( T,L,R,U,UX,UT,UTX,NU,V,VT,NV,B,BU,BUX,BUT,BUTX,BV,BBC  0000
     *VT )                                                              BC  0020
      REAL T,L,R,U( NU,2 ),UX( NU,2 ),UT( NU,2 ),UTX( NU,2 ),V( NV ),VT(BC  0040
     * NV ),B( NU,2 ),BU( NU,NU,2 ),BUX( NU,NU,2 ),BUT( NU,NU,2 ),BUTX( BC  0060
     *NU,NU,2 ),BV( NU,NV,2 ),BVT( NU,NV,2 )                            BC  0080
      INTEGER NU,NV                                                     BC  0100
      B( 1,1 ) = UX( 1,1 ) - V( 1 )                                     BC  0120
      B( 1,2 ) = UX( 1,2 ) - V( 1 )                                     BC  0140
      BUX( 1,1,1 ) = 1                                                  BC  0160
      BV( 1,1,1 ) =  - 1                                                BC  0180
      BUX( 1,1,2 ) = 1                                                  BC  0200
      BV( 1,1,2 ) =  - 1                                                BC  0220
      RETURN                                                            BC  0240
      END                                                               BC  0260
      SUBROUTINE DEE( T,K,X,NX,U,UT,NU,NXMK,V,VT,NV,D,DU,DUT,DV,DVT )   DEE 0000
      REAL T,X( NX ),U( NXMK,NU ),UT( NXMK,NU ),V( NV ),VT( NV ),D( NV )DEE 0020
     *,DU( NV,NXMK,NU ),DUT( NV,NXMK,NU ),DV( NV,NV ),DVT( NV,NV )      DEE 0040
      INTEGER K,NX,NU,NXMK,NV                                           DEE 0060
      D( 1 ) = U( 1,1 ) - U( NX - K,1 )                                 DEE 0080
      DU( 1,1,1 ) = 1                                                   DEE 0100
      DU( 1,NX - K,1 ) =  - 1                                           DEE 0120
      RETURN                                                            DEE 0140
      END                                                               DEE 0160
      SUBROUTINE HANDLE( T0,U0,V0,T,U,V,NU,NXMK,NV,K,X,NX,DT,TSTOP )    HAND0000
      REAL T0,U0( NXMK,NU ),V0( NV ),T,U( NXMK,NU ),V( NV ),X( NX ),DT,THAND0020
     *STOP                                                              HAND0040
      INTEGER NU,NXMK,NV,K,NX                                           HAND0060
      COMMON/TIME/TT                                                    HAND0080
      REAL TT                                                           HAND0100
      REAL EU,EESFF,EV                                                  HAND0120
      INTEGER I1MACH                                                    HAND0140
      EXTERNAL UOFX                                                     HAND0160
      IF( T0 .EQ. T )GO TO 23002                                        HAND0180
      GO TO 23003                                                       HAND0200
23002 CONTINUE                                                          HAND0220
      RETURN                                                            HAND0240
23003 CONTINUE                                                          HAND0260
      TT = T                                                            HAND0280
      EU = EESFF( K,X,NX,U,UOFX )                                       HAND0300
      EV = V( 1 ) + COS( T )                                            HAND0320
      IWUNIT = I1MACH( 2 )                                              HAND0340
      WRITE( IWUNIT,9001 )T,EU,EV                                       HAND0360
9001  FORMAT( 14H ERROR IN U(X,,1P1E10.2,4H ) =,1P1E10.2,6H   V =,1P4E10HAND0380
     *.2 )                                                              HAND0400
      RETURN                                                            HAND0420
      END                                                               HAND0440
      SUBROUTINE UOFX( X,NX,U,W )                                       UOFX0000
      REAL X( NX ),U( NX ),W( NX )                                      UOFX0020
      INTEGER NX                                                        UOFX0040
      COMMON/TIME/T                                                     UOFX0060
      REAL T                                                            UOFX0080
      INTEGER I                                                         UOFX0100
      DO 23005 I = 1,NX                                                 UOFX0120
      U( I ) = SIN( X( I ) )*COS( T )                                   UOFX0140
23005 CONTINUE                                                          UOFX0160
      RETURN                                                            UOFX0180
      END                                                               UOFX0200
C$TEST PDEW                                                             PDEW0000
C***********************************************************************PDEW0020
C                                                                       PDEW0040
C  EXAMPLE OF USE OF THE PORT PROGRAM POSTU                             PDEW0060
C                                                                       PDEW0080
C***********************************************************************PDEW0100
C  THE PORT STACK                                                       PDEW0120
C                                                                       PDEW0140
      COMMON /CSTAK/ DS                                                 PDEW0160
      DOUBLE PRECISION DS(4000)                                         PDEW0180
      REAL WS(1000)                                                     PDEW0200
      EQUIVALENCE (DS(1),WS(1))                                         PDEW0220
C                                                                       PDEW0240
C  TIME FOR THE FUNCTION UOFX.                                          PDEW0260
C                                                                       PDEW0280
      COMMON /TIME/ T                                                   PDEW0300
      REAL T                                                            PDEW0320
C                                                                       PDEW0340
C  MAPPING PARAMETERS FOR UOFX.                                         PDEW0360
C                                                                       PDEW0380
      COMMON /PARAM/ VC, X                                              PDEW0400
      REAL VC(4), X(3)                                                  PDEW0420
      EXTERNAL DEE, HANDLE, UOFX, BC, AF                                PDEW0440
      INTEGER NDX, K, IMMM, ISTKGT                                      PDEW0460
      INTEGER NU, NV, IMESH, ILUMB, NMESH                               PDEW0480
      REAL ERRPAR(2), TSTART, TSTOP, V(4), DT, XB(3), U(1000)           PDEW0500
C INITIALIZE THE PORT LIBRARY STACK LENGTH.                             PDEW0520
      CALL ISTKIN(4000, 4)                                              PDEW0540
      CALL ENTER(1)                                                     PDEW0560
      NU = 1                                                            PDEW0580
      NV = 4                                                            PDEW0600
      ERRPAR(1) = 0                                                     PDEW0620
C ABSOLUTE ERROR.                                                       PDEW0640
      ERRPAR(2) = 1E-2                                                  PDEW0660
      TSTART = 0                                                        PDEW0680
      TSTOP = 3.14                                                      PDEW0700
      DT = 0.4                                                          PDEW0720
      K = 4                                                             PDEW0740
C NDX UNIFORM MESH POINTS ON EACH INTERVAL OF XB.                       PDEW0760
      NDX = 6                                                           PDEW0780
      XB(1) = 0                                                         PDEW0800
      XB(2) = 1                                                         PDEW0820
      XB(3) = 2                                                         PDEW0840
C GET MESH ON PORT STACK.                                               PDEW0860
      IMESH = ILUMB(XB, 3, NDX, K, NMESH)                               PDEW0880
C MAKE 1 OF MULTIPLICITY K-1.                                           PDEW0900
      IMESH = IMMM(IMESH, NMESH, 1E0, K-1)                              PDEW0920
      X(1) = -3.14                                                      PDEW0940
      X(2) = 3.14/2.                                                    PDEW0960
      X(3) = 3.14                                                       PDEW0980
C INITIAL VALUES FOR V.                                                 PDEW1000
      CALL LPLMG(3, X, VC)                                              PDEW1020
C GET U ON THE PORT STACK.                                              PDEW1040
      IU = ISTKGT(NMESH-K, 3)                                           PDEW1060
C UOFX NEEDS TIME.                                                      PDEW1080
      T = TSTART                                                        PDEW1100
C THE INITIAL HEIGHT OF THE JUMP.                                       PDEW1120
      VC(4) = 1                                                         PDEW1140
C UOFX NEEDS V FOR MAPPING.                                             PDEW1160
      CALL MOVEFR(NV, VC, V)                                            PDEW1180
C INITIAL CONDITIONS FOR U.                                             PDEW1200
      CALL L2SFF(UOFX, K, WS(IMESH), NMESH, U)                          PDEW1220
C OUTPUT ICS.                                                           PDEW1240
      CALL HANDLE(T-1., U, V, T, U, V, NU, NMESH-K, NV, K, WS(          PDEW1260
     1   IMESH), NMESH, DT, TSTOP)                                      PDEW1280
      CALL POST(U, NU, K, WS(IMESH), NMESH, V, NV, TSTART, TSTOP,       PDEW1300
     1   DT, AF, BC, DEE, ERRPAR, HANDLE)                               PDEW1320
      CALL LEAVE                                                        PDEW1340
      CALL WRAPUP                                                       PDEW1360
      STOP                                                              PDEW1380
      END                                                               PDEW1400
      SUBROUTINE AF(T, XI, NX, U, UX, UT, UTX, NU, V, VT, NV,           AF  0000
     *              A, AU, AUX, AUT, AUTX, AV, AVT,                     AF  0020
     *              F, FU, FUX, FUT, FUTX, FV, FVT)                     AF  0040
      INTEGER NU, NV, NX                                                AF  0060
      REAL T, XI(NX), U(NX, NU), UX(NX, NU), UT(NX, NU), UTX(NX, NU)    AF  0080
      REAL V(NV), VT(NV),                                               AF  0100
     *     A(NX,NU),AU(NX,NU,NU),AUX(NX,NU,NU),AUT(NX,NU,NU),           AF  0120
     *     AUTX(NX,NU,NU),AV(NX,NU,NV),AVT(NX,NU,NV),                   AF  0140
     *     F(NX,NU),FU(NX,NU,NU),FUX(NX,NU,NU),FUT(NX,NU,NU),           AF  0160
     *     FUTX(NX,NU,NU),FV(NX,NU,NV),FVT(NX,NU,NV)                    AF  0180
      COMMON /POSTF/ FAILED                                             AF  0200
      LOGICAL FAILED                                                    AF  0220
      INTEGER I                                                         AF  0240
      REAL COS, SIN, XXI(99), XTV(99), XVV(99), X(99)                   AF  0260
      REAL XXIV(99), AX(99), FX(99), XT(99), XV(99)                     AF  0280
      LOGICAL TEMP                                                      AF  0300
      TEMP = V(2) .LE. V(1)                                             AF  0320
      IF (.NOT. TEMP) TEMP = V(2) .GE. V(3)                             AF  0340
      IF (.NOT. TEMP) GOTO 1                                            AF  0360
         FAILED = .TRUE.                                                AF  0380
         RETURN                                                         AF  0400
C MAP XI INTO X.                                                        AF  0420
   1  CALL LPLM(XI, NX, V, 3, X, XXI, XXIV, XV, XVV, XT, XTV)           AF  0440
C MAP U INTO X SYSTEM.                                                  AF  0460
      CALL POSTU(XI, X, XT, XXI, XV, VT, NX, 3, UX, UT, NU, AX, FX)     AF  0480
      DO  4 I = 1, NX                                                   AF  0500
         A(I, 1) = -U(I, 1)                                             AF  0520
         AU(I, 1, 1) = -1                                               AF  0540
         F(I, 1) = UT(I, 1)                                             AF  0560
         FUT(I, 1, 1) = 1                                               AF  0580
         IF (XI(I) .GT. 1.) GOTO 2                                      AF  0600
            F(I, 1) = F(I, 1)-2.*COS(X(I)+T)                            AF  0620
            FX(I) = 2.*SIN(X(I)+T)                                      AF  0640
            GOTO  3                                                     AF  0660
   2        F(I, 1) = F(I, 1)-VT(4)                                     AF  0680
            FVT(I, 1, 4) = -1                                           AF  0700
            F(I, 1) = F(I, 1)+2.*SIN(X(I)+T)                            AF  0720
            FX(I) = 2.*COS(X(I)+T)                                      AF  0740
   3     CONTINUE                                                       AF  0760
   4     CONTINUE                                                       AF  0780
C MAP A AND F INTO XI SYSTEM.                                           AF  0800
      CALL POSTI(XI, X, XT, XXI, XV, XTV, XXIV, XVV, NX, UX, UT, NU, V  AF  0820
     1   , VT, NV, 1, 3, A, AX, AU, AUX, AUT, AUTX, AV, AVT, F, FX, FU  AF  0840
     2   , FUX, FUT, FUTX, FV, FVT)                                     AF  0860
      RETURN                                                            AF  0880
      END                                                               AF  0900
      SUBROUTINE BC(T, L, R, U, UX, UT, UTX, NU, V, VT, NV,             BC  0000
     *              B, BU, BUX, BUT, BUTX, BV, BVT)                     BC  0020
      INTEGER NU, NV                                                    BC  0040
      REAL T,L,R,U(NU,2),UX(NU,2),UT(NU,2),UTX(NU,2),V(NV),VT(NV)       BC  0060
      REAL B(NU,2),BU(NU,NU,2),BUX(NU,NU,2),BUT(NU,NU,2),BUTX(NU,NU,2), BC  0080
     *     BV(NU,NV,2),BVT(NU,NV,2)                                     BC  0100
      B(1, 1) = U(1, 1)-SIN(T-3.14)                                     BC  0120
C U(-PI,T) = SIN(-PI+T).                                                BC  0140
      BU(1, 1, 1) = 1                                                   BC  0160
      RETURN                                                            BC  0180
      END                                                               BC  0200
      SUBROUTINE DEE(T, K, X, NX, U, UT, NU, NXMK, V, VT, NV,           DEE 0000
     *               D, DU, DUT, DV, DVT)                               DEE 0020
      INTEGER NXMK, NU, NV, NX, K                                       DEE 0040
      REAL T, X(NX), U(NXMK, NU), UT(NXMK, NU), V(NV), VT(NV)           DEE 0060
      REAL D(NV),DU(NV,NXMK,NU),DUT(NV,NXMK,NU),DV(NV,NV),DVT(NV,NV)    DEE 0080
      INTEGER INTRVR, I, ILEFT                                          DEE 0100
      REAL BX(10), XX(1), R1MACH                                        DEE 0120
      INTEGER TEMP                                                      DEE 0140
      D(1) = V(1)+3.14                                                  DEE 0160
C X(0,V) = -PI.                                                         DEE 0180
      DV(1, 1) = 1                                                      DEE 0200
C XX(1) = 1 + A ROUNDING ERROR.                                         DEE 0220
      XX(1) = R1MACH(4)+1.                                              DEE 0240
      ILEFT = INTRVR(NX, X, XX(1))                                      DEE 0260
C GET THE B-SPLINE BASIS AT XX.                                         DEE 0280
      CALL BSPLN(K, X, NX, XX, 1, ILEFT, BX)                            DEE 0300
      D(2) = -V(4)                                                      DEE 0320
C U(X(T)+,T) - JUMP = 0.                                                DEE 0340
      DV(2, 4) = -1                                                     DEE 0360
      DO  1 I = 1, K                                                    DEE 0380
         TEMP = ILEFT+I-K                                               DEE 0400
         D(2) = D(2)+U(TEMP, 1)*BX(I)                                   DEE 0420
         TEMP = ILEFT+I-K                                               DEE 0440
         DU(2, TEMP, 1) = BX(I)                                         DEE 0460
   1     CONTINUE                                                       DEE 0480
      D(3) = V(3)-3.14                                                  DEE 0500
C X(2,V) = +PI.                                                         DEE 0520
      DV(3, 3) = 1                                                      DEE 0540
C JUMP + D( X(1,V(T)) )/DT = 0.                                         DEE 0560
      D(4) = VT(2)+V(4)                                                 DEE 0580
      DVT(4, 2) = 1                                                     DEE 0600
      DV(4, 4) = 1                                                      DEE 0620
      RETURN                                                            DEE 0640
      END                                                               DEE 0660
      SUBROUTINE HANDLE(T0, U0, V0, T, U, V, NU, NXMK, NV,              HAND0000
     *                  K, X, NX, DT, TSTOP)                            HAND0020
      INTEGER NXMK, NU, NV, NX, K                                       HAND0040
      REAL T0, U0(NXMK, NU), V0(NV), T, U(NXMK, NU), V(NV),             HAND0060
     *     X(NX), DT, TSTOP                                             HAND0080
      COMMON /PARAM/ VC, XX                                             HAND0100
      REAL VC(4), XX(3)                                                 HAND0120
      COMMON /TIME/ TT                                                  HAND0140
      REAL TT                                                           HAND0160
      EXTERNAL UOFX                                                     HAND0180
      INTEGER I1MACH                                                    HAND0200
      REAL EU, EESFF, EV(2)                                             HAND0220
      INTEGER TEMP                                                      HAND0240
C OUTPUT AND CHECKING ROUTINE.                                          HAND0260
      IF (T0 .NE. T) GOTO 2                                             HAND0280
         TEMP = I1MACH(2)                                               HAND0300
         WRITE (TEMP,  1) T, DT                                         HAND0320
   1     FORMAT (16H RESTART FOR T =, 1PE10.2, 7H   DT =, 1PE10.2)      HAND0340
         RETURN                                                         HAND0360
   2  TT = T                                                            HAND0380
C UOFX NEEDS V FOR MAPPING.                                             HAND0400
      CALL MOVEFR(NV, V, VC)                                            HAND0420
      EU = EESFF(K, X, NX, U, UOFX)                                     HAND0440
C ERROR IN POSITION OF SHOCK.                                           HAND0460
      EV(1) = V(2)-(3.14/2.-T)                                          HAND0480
C ERROR IN HEIGHT OF SHOCK.                                             HAND0500
      EV(2) = V(4)-1.                                                   HAND0520
      TEMP = I1MACH(2)                                                  HAND0540
      WRITE (TEMP,  3) T, EU, EV                                        HAND0560
   3  FORMAT (14H ERROR IN U(X,, 1PE10.2, 4H ) =, 1PE10.2, 6H   V =, 2( HAND0580
     1   1PE10.2))                                                      HAND0600
      RETURN                                                            HAND0620
      END                                                               HAND0640
      SUBROUTINE UOFX(XI, NX, U, W)                                     UOFX0000
      INTEGER NX                                                        UOFX0020
      REAL XI(NX), U(NX), W(NX)                                         UOFX0040
      COMMON /CSTAK/ DS                                                 UOFX0060
      DOUBLE PRECISION DS(4000)                                         UOFX0080
      COMMON /PARAM/ VC, X                                              UOFX0100
      REAL VC(4), X(3)                                                  UOFX0120
      COMMON /TIME/ T                                                   UOFX0140
      REAL T                                                            UOFX0160
      INTEGER IXV, IXX, ISTKGT, I, IS(1000)                             UOFX0180
      REAL EWE, RS(1000), WS(1000)                                      UOFX0200
      LOGICAL LS(1000)                                                  UOFX0220
      INTEGER TEMP                                                      UOFX0240
      EQUIVALENCE (DS(1), WS(1), RS(1), IS(1), LS(1))                   UOFX0260
C THE PORT LIBRARY STACK AND ITS ALIASES.                               UOFX0280
      CALL ENTER(1)                                                     UOFX0300
      IXX = ISTKGT(NX, 3)                                               UOFX0320
C SPACE FOR X AND XV.                                                   UOFX0340
      IXV = ISTKGT(3*NX, 3)                                             UOFX0360
C MAP INTO USER SYSTEM.                                                 UOFX0380
      CALL LPLMX(XI, NX, VC, 3, WS(IXX), WS(IXV))                       UOFX0400
      DO  1 I = 1, NX                                                   UOFX0420
         TEMP = IXX+I                                                   UOFX0440
         U(I) = EWE(T, WS(TEMP-1), VC(2))                               UOFX0460
         IF (XI(I) .GT. 1.) U(I) = U(I)+1.                              UOFX0480
   1     CONTINUE                                                       UOFX0500
      CALL LEAVE                                                        UOFX0520
      RETURN                                                            UOFX0540
      END                                                               UOFX0560
      REAL FUNCTION EWE(T, X, XBREAK)                                   EWE 0000
      REAL T, X, XBREAK                                                 EWE 0020
      REAL COS, SIN                                                     EWE 0040
      IF (X .GE. XBREAK) GOTO 1                                         EWE 0060
         EWE = SIN(X+T)                                                 EWE 0080
         RETURN                                                         EWE 0100
   1     IF (X .LE. XBREAK) GOTO 2                                      EWE 0120
            EWE = COS(X+T)                                              EWE 0140
            RETURN                                                      EWE 0160
C/6S                                                                    EWE 0180
C  2        CALL SETERR(17HEWE - X == XBREAK, 17, 1, 2)                 EWE 0200
C/7S                                                                    EWE 0220
   2        CALL SETERR('EWE - X == XBREAK', 17, 1, 2)                  EWE 0240
C/                                                                      EWE 0260
   3  CONTINUE                                                          EWE 0280
   4  STOP                                                              EWE 0300
      END                                                               EWE 0320
C$TEST DDEA                                                             DDEA0000
C***********************************************************************DDEA0020
C                                                                       DDEA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM IODE                              DDEA0060
C                                                                       DDEA0080
C***********************************************************************DDEA0100
      REAL TSTOP,V(2),DT                                                DDEA0120
      REAL ERRPAR(2)                                                    DDEA0140
      INTEGER NV                                                        DDEA0160
      EXTERNAL DEE,HANDLE                                               DDEA0180
C                                                                       DDEA0200
      NV = 2                                                            DDEA0220
C                                                                       DDEA0240
C  SET FOR 1E-2 ABSOLUTE ERROR.                                         DDEA0260
C                                                                       DDEA0280
      ERRPAR(1) = 0                                                     DDEA0300
      ERRPAR(2) = 1E-2                                                  DDEA0320
C                                                                       DDEA0340
      TSTOP = 1E+20                                                     DDEA0360
      DT = 1E-7                                                         DDEA0380
C                                                                       DDEA0400
C  INITIAL CONDITIONS FOR V.                                            DDEA0420
C                                                                       DDEA0440
      V(1) = 1                                                          DDEA0460
      V(2) = 1                                                          DDEA0480
C                                                                       DDEA0500
      CALL IODE (V,NV,                                                  DDEA0520
     *           0E0,TSTOP,DT,                                          DDEA0540
     *           DEE,                                                   DDEA0560
     *           ERRPAR,                                                DDEA0580
     *           HANDLE)                                                DDEA0600
C                                                                       DDEA0620
      STOP                                                              DDEA0640
C                                                                       DDEA0660
      END                                                               DDEA0680
      SUBROUTINE DEE(T,                                                 DEE 0000
     *               V,VT,NV,                                           DEE 0020
     *               D,DV,DVT)                                          DEE 0040
C                                                                       DEE 0060
      REAL T,V(NV),VT(NV),D(NV),DV(NV,NV),DVT(NV,NV)                    DEE 0080
      INTEGER NV                                                        DEE 0100
C                                                                       DEE 0120
      D(1) = VT(1)+2E0*VT(2) + V(1) + 2E+6*V(2)                         DEE 0140
      D(2) = 3E0*VT(1)+VT(2) + 3E0*V(1) + 1E+6*V(2)                     DEE 0160
C                                                                       DEE 0180
      DVT(1,1) = 1                                                      DEE 0200
      DVT(1,2) = 2                                                      DEE 0220
      DV(1,1) = 1                                                       DEE 0240
      DV(1,2) = 2E+6                                                    DEE 0260
C                                                                       DEE 0280
      DVT(2,1) = 3                                                      DEE 0300
      DVT(2,2) = 1                                                      DEE 0320
      DV(2,1) = 3                                                       DEE 0340
      DV(2,2) = 1E+6                                                    DEE 0360
C                                                                       DEE 0380
      RETURN                                                            DEE 0400
C                                                                       DEE 0420
      END                                                               DEE 0440
      SUBROUTINE HANDLE(T0,V0,T,V,NV,DT,TSTOP)                          HAND0000
C                                                                       HAND0020
C OUTPUT AND CHECKING ROUTINE.                                          HAND0040
C                                                                       HAND0060
      REAL T0,V0(NV),T,V(NV),DT,TSTOP                                   HAND0080
      INTEGER NV                                                        HAND0100
C                                                                       HAND0120
      REAL EV(2)                                                        HAND0140
      INTEGER I1MACH                                                    HAND0160
C                                                                       HAND0180
      IF ( T0 .EQ. T ) RETURN                                           HAND0200
C                                                                       HAND0220
      EV(1) = V(1) - EXP(-T)                                            HAND0240
      EV(2) = V(2) - EXP(-1E+6*T)                                       HAND0260
C                                                                       HAND0280
      IWUNIT = I1MACH(2)                                                HAND0300
      WRITE(IWUNIT,9000) T,EV(1),EV(2)                                  HAND0320
 9000 FORMAT(13H ERROR IN V( ,1P1E10.2,4H ) =,1P2E10.2)                 HAND0340
C                                                                       HAND0360
      RETURN                                                            HAND0380
C                                                                       HAND0400
      END                                                               HAND0420
C$TEST DESA                                                             DESA0000
C***********************************************************************DESA0020
C                                                                       DESA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM ODES                              DESA0060
C                                                                       DESA0080
C***********************************************************************DESA0100
      EXTERNAL EQNS, PRINT                                              DESA0120
      COMMON /NMBR/NMFNS                                                DESA0140
      COMMON /DATA/ERRPAR,DT,X,TSTART                                   DESA0160
C                                                                       DESA0180
      INTEGER KASE,NMFNS                                                DESA0200
      REAL X(2),DX,DT,TSTART                                            DESA0220
      REAL ERRPAR(2)                                                    DESA0240
C                                                                       DESA0260
      DO 1 KASE=1,3                                                     DESA0280
      X(1) = 1.E0                                                       DESA0300
      X(2) = -1.E0                                                      DESA0320
      CALL CASE(KASE)                                                   DESA0340
C                                                                       DESA0360
      CALL ODES (EQNS, X, 2, TSTART, 2.0E0, DT, ERRPAR, PRINT)          DESA0380
C                                                                       DESA0400
    1 CONTINUE                                                          DESA0420
C                                                                       DESA0440
      STOP                                                              DESA0460
      END                                                               DESA0480
      SUBROUTINE EQNS (T, X, N, DX)                                     EQNS0000
      COMMON /NMBR/NMFNS                                                EQNS0020
C                                                                       EQNS0040
      INTEGER NMFNS,N                                                   EQNS0060
      REAL T,X(2),DX(2)                                                 EQNS0080
C                                                                       EQNS0100
      DX(1) = X(2)                                                      EQNS0120
      DX(2) = X(1)                                                      EQNS0140
      NMFNS = NMFNS + 1                                                 EQNS0160
C                                                                       EQNS0180
      RETURN                                                            EQNS0200
      END                                                               EQNS0220
      SUBROUTINE CASE(KASE)                                             CASE0000
      COMMON /NMBR/NMFNS                                                CASE0020
      COMMON /DATA/ERRPAR,DT,X,TSTART                                   CASE0040
C                                                                       CASE0060
      INTEGER IWRITE,I1MACH,NMFNS,KASE                                  CASE0080
      REAL X(2),DT,TSTART                                               CASE0100
      REAL ERRPAR(2)                                                    CASE0120
C                                                                       CASE0140
      IWRITE = I1MACH(2)                                                CASE0160
      NMFNS = 0                                                         CASE0180
      TSTART = 0.0E0                                                    CASE0200
      GO TO (10, 20, 30), KASE                                          CASE0220
C                                                                       CASE0240
C  SET UP CASE 1                                                        CASE0260
   10 ERRPAR(1) = 1.E-2                                                 CASE0280
      ERRPAR(2) = 1.E-3                                                 CASE0300
      DT = 1.E0                                                         CASE0320
      GO TO 40                                                          CASE0340
C                                                                       CASE0360
C  SET UP CASE 2                                                        CASE0380
   20 ERRPAR(1) = 1.E-4                                                 CASE0400
      ERRPAR(2) = 1.E-6                                                 CASE0420
      DT = 1.E-7                                                        CASE0440
      GO TO 40                                                          CASE0460
C                                                                       CASE0480
C  SET UP CASE 3                                                        CASE0500
   30 ERRPAR(1) = 1.E-4                                                 CASE0520
      ERRPAR(2) = 1.E-6                                                 CASE0540
      DT = 1.E0                                                         CASE0560
C                                                                       CASE0580
C  WRITE OUT ERRPAR AND DT                                              CASE0600
   40 WRITE (IWRITE, 9997) ERRPAR(1), ERRPAR(2), DT                     CASE0620
 9997 FORMAT(15X,28H FOR THE VALUES, ERRPAR(1) =, 1PE9.2,               CASE0640
     *   16H AND ERRPAR(2) =,1PE9.2  //16X,22HWITH INITIAL DT SET TO,   CASE0660
     *   1PE10.2//)                                                     CASE0680
C                                                                       CASE0700
C  WRITE OUT COLUMN HEADINGS FOR THE SOLUTION                           CASE0720
      WRITE (IWRITE,9998)                                               CASE0740
 9998 FORMAT(12X, 5H TIME,14X, 5H X(1),15X, 5H X(2),14X, 3H DT//)       CASE0760
C                                                                       CASE0780
C  WRITE OUT THE INITIAL VALUES OF T AND X                              CASE0800
      WRITE (IWRITE,9999) TSTART, X(1), X(2), DT                        CASE0820
 9999 FORMAT(2X,1P3E20.8,1PE14.2)                                       CASE0840
C                                                                       CASE0860
      RETURN                                                            CASE0880
      END                                                               CASE0900
      SUBROUTINE PRINT (T0, X0, T1, X1, N, DT, TSTOP, E)                PRIN0000
      COMMON /NMBR/NMFNS                                                PRIN0020
C                                                                       PRIN0040
      INTEGER IWRITE,I1MACH,N,NMFNS                                     PRIN0060
      REAL T0,X0(N),T1,X1(N),DT,TSTOP,E(N)                              PRIN0080
C                                                                       PRIN0100
      IF(T0 .EQ. T1) RETURN                                             PRIN0120
C                                                                       PRIN0140
      IWRITE = I1MACH(2)                                                PRIN0160
      WRITE (IWRITE,9998) T1,X1(1),X1(2),DT                             PRIN0180
 9998 FORMAT (2X,1P3E20.8,1PE14.2)                                      PRIN0200
C                                                                       PRIN0220
      IF (T1 .LT. TSTOP) RETURN                                         PRIN0240
C                                                                       PRIN0260
      WRITE (IWRITE,9999) NMFNS                                         PRIN0280
 9999 FORMAT (1H0,15X,  39H THE NUMBER OF FUNCTION EVALUATIONS WAS,I4)  PRIN0300
C                                                                       PRIN0320
      RETURN                                                            PRIN0340
C                                                                       PRIN0360
      END                                                               PRIN0380
C$TEST CSPQ                                                             CSPQ0000
C***********************************************************************CSPQ0020
C                                                                       CSPQ0040
C  EXAMPLE OF USE OF THE PORT PROGRAM CSPFE                             CSPQ0060
C                                                                       CSPQ0080
C***********************************************************************CSPQ0100
       INTEGER I1MACH,J,IWRITE                                          CSPQ0120
      REAL X(9),Y(9),YP(9),YPP(9),BC(6),XX(4),YY(4),ERR(4),PI           CSPQ0140
C                                                                       CSPQ0160
      PI=4.0*ATAN(1.0)                                                  CSPQ0180
C                                                                       CSPQ0200
C COMPUTE THE POINTS AT WHICH THE SPLINE IS TO BE FITTED                CSPQ0220
C                                                                       CSPQ0240
      DO 10 J=1,9                                                       CSPQ0260
         X(J)=FLOAT(J-1)/8.0                                            CSPQ0280
   10    Y(J)=SIN(X(J)*PI/2.0)                                          CSPQ0300
C                                                                       CSPQ0320
C SET THE END CONDITIONS FOR THE INTERPOLATION                          CSPQ0340
C (SPECIFY FIRST DERIVATIVE AT X=0, SECOND AT X=1)                      CSPQ0360
C                                                                       CSPQ0380
      BC(1)=1.0                                                         CSPQ0400
      BC(2)=0.0                                                         CSPQ0420
      BC(3)=PI/2.0                                                      CSPQ0440
      BC(4)=0.0                                                         CSPQ0460
      BC(5)=1.0                                                         CSPQ0480
      BC(6)=-X(9)*(PI/2.0)**2                                           CSPQ0500
C                                                                       CSPQ0520
C DO THE CUBIC SPLINE FIT                                               CSPQ0540
C                                                                       CSPQ0560
      CALL CSPFI(X,Y,9,BC,YP,YPP)                                       CSPQ0580
C                                                                       CSPQ0600
C SET THE POINTS AT WHICH TO INTERPOLATE                                CSPQ0620
C                                                                       CSPQ0640
      XX(1)=0.1                                                         CSPQ0660
      XX(2)=0.3                                                         CSPQ0680
      XX(3)=0.6                                                         CSPQ0700
      XX(4)=0.9                                                         CSPQ0720
C                                                                       CSPQ0740
C DO THE INTERPOLATION                                                  CSPQ0760
C                                                                       CSPQ0780
      CALL CSPFE(X,Y,YP,YPP,9,XX,YY,4)                                  CSPQ0800
C                                                                       CSPQ0820
C COMPUTE THE INTERPOLATION ERROR                                       CSPQ0840
C                                                                       CSPQ0860
      DO 20 K=1,4                                                       CSPQ0880
   20    ERR(K)=YY(K)-SIN(XX(K)*PI/2.0)                                 CSPQ0900
C                                                                       CSPQ0920
C SET THE OUTPUT UNIT                                                   CSPQ0940
C                                                                       CSPQ0960
      IWRITE=I1MACH(2)                                                  CSPQ0980
C                                                                       CSPQ1000
      WRITE(IWRITE,9997)                                                CSPQ1020
 9997    FORMAT(2X,2HXX,10X,13HINTERPOLATION)                           CSPQ1040
      WRITE(IWRITE,9998)                                                CSPQ1060
 9998    FORMAT(12X,5HVALUE,6X,5HERROR//)                               CSPQ1080
C                                                                       CSPQ1100
      WRITE(IWRITE,9999) (XX(K),YY(K),ERR(K),K=1,4)                     CSPQ1120
 9999    FORMAT(0PF6.3,0PF12.6,1PE12.3/)                                CSPQ1140
C                                                                       CSPQ1160
      STOP                                                              CSPQ1180
      END                                                               CSPQ1200
C$TEST CSPE                                                             CSPE0000
C***********************************************************************CSPE0020
C                                                                       CSPE0040
C  EXAMPLE OF USE OF THE PORT PROGRAM CSPDI                             CSPE0060
C                                                                       CSPE0080
C***********************************************************************CSPE0100
       INTEGER IWRITE,I1MACH,J,K                                        CSPE0120
       REAL PI,X(9),Y(9),YY(9),XX(4),YYP(4),ZZ(4),ZZD(4)                CSPE0140
C                                                                       CSPE0160
       PI=3.14159265                                                    CSPE0180
C                                                                       CSPE0200
C COMPUTE THE POINTS AT WHICH THE SPLINE IS TO BE FITTED                CSPE0220
C                                                                       CSPE0240
       DO 10 J=1,9                                                      CSPE0260
       X(J)=FLOAT(J-1)/8.                                               CSPE0280
       Y(J)=SIN(X(J)*PI/2.)                                             CSPE0300
   10  CONTINUE                                                         CSPE0320
C                                                                       CSPE0340
C                                                                       CSPE0360
C SET THE POINTS AT WHICH THE INTERPOLATION AND                         CSPE0380
C DIFFERENTIATION ARE TO BE DONE                                        CSPE0400
C                                                                       CSPE0420
       XX(1)=.1                                                         CSPE0440
       XX(2)=.3                                                         CSPE0460
       XX(3)=.6                                                         CSPE0480
       XX(4)=.9                                                         CSPE0500
C                                                                       CSPE0520
C THE INTERPOLATION:                                                    CSPE0540
C                                                                       CSPE0560
       CALL CSPIN(X,Y,9,XX,YY,4)                                        CSPE0580
C                                                                       CSPE0600
C COMPUTE THE INTERPOLATION ERROR                                       CSPE0620
C                                                                       CSPE0640
       DO 20 K=1,4                                                      CSPE0660
   20  ZZ(K)=YY(K)-SIN(XX(K)*PI/2.)                                     CSPE0680
C                                                                       CSPE0700
C THE DIFFERENTIATION:                                                  CSPE0720
C                                                                       CSPE0740
       CALL CSPDI(X,Y,9,XX,YY,YYP,4)                                    CSPE0760
C                                                                       CSPE0780
C COMPUTE THE DIFFERENTIATION ERROR                                     CSPE0800
C                                                                       CSPE0820
       DO 30 K=1,4                                                      CSPE0840
   30  ZZD(K)=(2./PI)*YYP(K)-COS(XX(K)*PI/2.)                           CSPE0860
C                                                                       CSPE0880
C                                                                       CSPE0900
C SET THE OUTPUT UNIT                                                   CSPE0920
C                                                                       CSPE0940
       IWRITE=I1MACH(2)                                                 CSPE0960
C                                                                       CSPE0980
       WRITE (IWRITE,9997)                                              CSPE1000
 9997     FORMAT(2X,2HXX,10X,13HINTERPOLATION,9X,15HDIFFERENTIATION/)   CSPE1020
C                                                                       CSPE1040
       WRITE (IWRITE,9998)                                              CSPE1060
 9998     FORMAT(12X,5HVALUE,6X,5HERROR,7X,5HVALUE,6X,6H ERROR//)       CSPE1080
C                                                                       CSPE1100
       WRITE (IWRITE,9999)(XX(K),YY(K),ZZ(K),YYP(K),ZZD(K), K=1,4)      CSPE1120
 9999     FORMAT(0PF6.3,0PF12.6,1PE12.3,0PF12.6,1PE12.3/)               CSPE1140
C                                                                       CSPE1160
       STOP                                                             CSPE1180
       END                                                              CSPE1200
C$TEST CSPG                                                             CSPG0000
C***********************************************************************CSPG0020
C                                                                       CSPG0040
C  EXAMPLE OF USE OF THE PORT PROGRAM CSPIN                             CSPG0060
C                                                                       CSPG0080
C***********************************************************************CSPG0100
C                                                                       CSPG0120
       INTEGER IWRITE,I1MACH,I                                          CSPG0140
       REAL X(9),Y(9),YY(9),XX(9)                                       CSPG0160
C                                                                       CSPG0180
C COMPUTED THE POINTS AT WHICH THE SPLINE IS TO BE FITTED               CSPG0200
C                                                                       CSPG0220
       DO 10 J=1,9                                                      CSPG0240
       X(J)=FLOAT(J-1)/8.                                               CSPG0260
       Y(J)=X(J)**3                                                     CSPG0280
   10  CONTINUE                                                         CSPG0300
C                                                                       CSPG0320
C SET THE POINTS AT WHICH INTERPOLATION IS TO BE DONE                   CSPG0340
C                                                                       CSPG0360
       XX(1)=.3                                                         CSPG0380
       XX(2)=.6                                                         CSPG0400
       XX(3)=.9                                                         CSPG0420
C                                                                       CSPG0440
C PERFORM THE INTERPOLATION                                             CSPG0460
C                                                                       CSPG0480
       CALL CSPIN(X,Y,9,XX,YY,3)                                        CSPG0500
C                                                                       CSPG0520
C SET THE OUTPUT UNIT                                                   CSPG0540
C                                                                       CSPG0560
       IWRITE=I1MACH(2)                                                 CSPG0580
C                                                                       CSPG0600
       WRITE (IWRITE,9998)                                              CSPG0620
 9998     FORMAT(2X,2HXX,5X,11HINTERPOLATE//)                           CSPG0640
C                                                                       CSPG0660
       WRITE (IWRITE,9999) (XX(J), YY(J), J=1,3)                        CSPG0680
 9999     FORMAT(F6.3,F12.6)                                            CSPG0700
C                                                                       CSPG0720
       STOP                                                             CSPG0740
       END                                                              CSPG0760
C$TEST MNNA                                                             MNNA0000
C***********************************************************************MNNA0020
C                                                                       MNNA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM FMIN                              MNNA0060
C                                                                       MNNA0080
C***********************************************************************MNNA0100
       EXTERNAL F                                                       MNNA0120
       INTEGER IWRITE,I1MACH                                            MNNA0140
       REAL A,B,T,ANS,X                                                 MNNA0160
       IWRITE = I1MACH(2)                                               MNNA0180
       A    =  .8                                                       MNNA0200
       B    = 1.2                                                       MNNA0220
       T    =  .0000001                                                 MNNA0240
       ANS  = FMIN(F,X,A,B,T)                                           MNNA0260
       WRITE (IWRITE,9999) A,B,T                                        MNNA0280
9999      FORMAT (5H A = ,1PE14.8,5H B = ,1PE14.8,5H T = ,1PE9.3)       MNNA0300
       WRITE (IWRITE,9998) ANS                                          MNNA0320
9998      FORMAT(16H THE MINIMUM IS ,1PE16.8)                           MNNA0340
       WRITE (IWRITE,9997) X                                            MNNA0360
9997      FORMAT(14H IT OCCURS AT ,1PE18.8)                             MNNA0380
       STOP                                                             MNNA0400
       END                                                              MNNA0420
       FUNCTION F(X)                                                    F   0000
       F = -X * EXP(-X)                                                 F   0020
       RETURN                                                           F   0040
       END                                                              F   0060
C$TEST EVAA                                                             EVAA0000
C***********************************************************************EVAA0020
C                                                                       EVAA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM EIGEN                             EVAA0060
C                                                                       EVAA0080
C***********************************************************************EVAA0100
      REAL A(4,4),ORT(4),Z(4,4)                                         EVAA0120
      REAL H(4,4),WR(4),WI(4)                                           EVAA0140
C                                                                       EVAA0160
      DATA A(1,1),A(1,2),A(1,3),A(1,4) / 3., 1., 2., 5. /               EVAA0180
      DATA A(2,1),A(2,2),A(2,3),A(2,4) / 2., 1., 3., 7. /               EVAA0200
      DATA A(3,1),A(3,2),A(3,3),A(3,4) / 3., 1., 2., 4. /               EVAA0220
      DATA A(4,1),A(4,2),A(4,3),A(4,4) / 4., 1., 3., 2. /               EVAA0240
C                                                                       EVAA0260
      NM=4                                                              EVAA0280
      N=4                                                               EVAA0300
C                                                                       EVAA0320
C     SET OUTPUT WRITE UNIT                                             EVAA0340
C                                                                       EVAA0360
       IWUNIT=I1MACH(2)                                                 EVAA0380
C                                                                       EVAA0400
      CALL EIGEN(NM,N,A,WR,WI,Z)                                        EVAA0420
C                                                                       EVAA0440
      WRITE (IWUNIT,96)                                                 EVAA0460
  96  FORMAT (22H0THE EIGENVALUES ARE -/)                               EVAA0480
C                                                                       EVAA0500
      WRITE (IWUNIT,97) (WR(J),WI(J),J=1,N)                             EVAA0520
  97  FORMAT (/1X,2E20.8)                                               EVAA0540
C                                                                       EVAA0560
      DO 20 K=1,N                                                       EVAA0580
      SCALE=AMAX1(ABS(Z(1,K)),ABS(Z(2,K)),ABS(Z(3,K)),ABS(Z(4,K)))      EVAA0600
      DO 20 J=1,N                                                       EVAA0620
 20   Z(J,K)=Z(J,K)/SCALE                                               EVAA0640
C                                                                       EVAA0660
      WRITE (IWUNIT,98)                                                 EVAA0680
  98  FORMAT (30H0THE SCALED EIGENVECTORS ARE -//)                      EVAA0700
C                                                                       EVAA0720
      WRITE (IWUNIT,99) ((Z(J,K),K=1,N),J=1,N)                          EVAA0740
  99  FORMAT (1X,1P4E18.8/)                                             EVAA0760
C                                                                       EVAA0780
      STOP                                                              EVAA0800
      END                                                               EVAA0820
C$TEST LLZA                                                             LLZA0000
C***********************************************************************LLZA0020
C                                                                       LLZA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM LZ                                LLZA0060
C                                                                       LLZA0080
C***********************************************************************LLZA0100
       COMPLEX B(5,5),A(5,5),EIGA(5),EIGB(5),X,EIG                      LLZA0120
       IIN=I1MACH(1)                                                    LLZA0140
       IOUT=I1MACH(2)                                                   LLZA0160
C                                                                       LLZA0180
C READ IN MATRICES                                                      LLZA0200
C                                                                       LLZA0220
       READ(IIN,10)((A(I,J),J=1,5),I=1,5)                               LLZA0240
       READ(IIN,10)((B(I,J),J=1,5),I=1,5)                               LLZA0260
  10   FORMAT(10F6.0)                                                   LLZA0280
C                                                                       LLZA0300
C PRINT MATRICES                                                        LLZA0320
C                                                                       LLZA0340
       WRITE(IOUT,20)                                                   LLZA0360
  20   FORMAT(13H THE A MATRIX)                                         LLZA0380
       WRITE(IOUT,30)((A(I,J),J=1,5),I=1,5)                             LLZA0400
  30   FORMAT(5(F6.0,2H+ ,F6.0,1HI))                                    LLZA0420
       WRITE(IOUT,40)                                                   LLZA0440
  40   FORMAT(13H THE B MATRIX)                                         LLZA0460
       WRITE(IOUT,30)((B(I,J),J=1,5), I=1,5)                            LLZA0480
C                                                                       LLZA0500
C SOLVE THE EIGENVALUE PROBLEM                                          LLZA0520
C                                                                       LLZA0540
       CALL LZ(5,A,5,B,5,X,1,.FALSE.,EIGA,EIGB)                         LLZA0560
       WRITE(IOUT,50)                                                   LLZA0580
  50   FORMAT(10X,4HEIGA,16X,4HEIGB,22X,10HEIGENVALUE)                  LLZA0600
       DO 60 I=1,5                                                      LLZA0620
          EIG=CMPLX(R1MACH(2),R1MACH(2))                                LLZA0640
          IF(REAL(EIGB(I)).NE.0.0.OR.AIMAG(EIGB(I)).NE.0.0)             LLZA0660
     1    EIG=EIGA(I)/EIGB(I)                                           LLZA0680
          WRITE(IOUT,70)EIGA(I),EIGB(I),EIG                             LLZA0700
  60   CONTINUE                                                         LLZA0720
  70   FORMAT(1H ,2E10.3,2X,2E10.3,2X,2E16.8)                           LLZA0740
       STOP                                                             LLZA0760
       END                                                              LLZA0780
C                                                                       LLZA0800
C DATA FOR THE EXAMPLE IN THE PORT SHEET...  (REMOVE THE C              LLZA0820
C IN COLUMN 1 BEFORE FEEDING THIS DATA TO THE PROGRAM ABOVE.)           LLZA0840
C$DATA                                                                  LLZA0860
C   41. -369. -143. -747.  -20.-1368.   20.  486.  104. -432.           LLZA0880
C  148.  261.  144.  666.   -6.-1152.  -78.   45.    8. -540.           LLZA0900
C  -19.  819.   87.  243.    4. 1548.  -56. -954. -164.  180.           LLZA0920
C  -60. -945.  -81. -279.   99.  171.   34.  441.   84. -144.           LLZA0940
C    1. -468.  133.  747.  132.  774.  -46.  -45.  -12. -216.           LLZA0960
C   90.  161.  180.  335.   36.  182.  -90. -162.  -72.  -36.           LLZA0980
C -105. -169. -210. -322.  -42.   24.  105.  167.   84.  204.           LLZA1000
C  -90. -211. -180. -307.  -36. -160.   90.  186.   72.   36.           LLZA1020
C   75.  205.  150.  215.   30.   45.  -75. -165.  -60.  -80.           LLZA1040
C  -75.  -48. -150. -299.  -30. -102.   75.   89.   60.   88.           LLZA1060
C$TEST LGEA                                                             LGEA0000
C***********************************************************************LGEA0020
C                                                                       LGEA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GESS                              LGEA0060
C                                                                       LGEA0080
C***********************************************************************LGEA0100
       INTEGER N, IREAD, I1MACH, I, NB, IWRITE, J                       LGEA0120
       REAL A(5,5), B(5,2), COND                                        LGEA0140
       N=5                                                              LGEA0160
       IREAD=I1MACH(1)                                                  LGEA0180
C                                                                       LGEA0200
       DO 10 I=1,N                                                      LGEA0220
           READ(IREAD,1) (A(I,J),J=1,N)                                 LGEA0240
    1      FORMAT(1X,5F10.0)                                            LGEA0260
   10  CONTINUE                                                         LGEA0280
C                                                                       LGEA0300
       NB=2                                                             LGEA0320
       DO 20 I=1,N                                                      LGEA0340
           READ(IREAD,11) (B(I,J),J=1,NB)                               LGEA0360
   11      FORMAT(1X,2F10.3)                                            LGEA0380
   20  CONTINUE                                                         LGEA0400
C                                                                       LGEA0420
C SOLVE AX = B  BY CALLING GESS                                         LGEA0440
C                                                                       LGEA0460
       CALL GESS(N,A,N,B,N,NB,COND)                                     LGEA0480
       IWRITE=I1MACH(2)                                                 LGEA0500
       WRITE(IWRITE,21) COND                                            LGEA0520
   21  FORMAT(52H AN ESTIMATE OF THE CONDITION NUMBER OF THE MATRIX =,  LGEA0540
     1          E14.7)                                                  LGEA0560
C                                                                       LGEA0580
       WRITE(IWRITE,22)                                                 LGEA0600
   22  FORMAT(27H THE COMPUTED SOLUTION X IS,//)                        LGEA0620
       DO 30 I=1,N                                                      LGEA0640
           WRITE(IWRITE,23) (B(I,J),J=1,NB)                             LGEA0660
   23      FORMAT(1H ,5F20.7)                                           LGEA0680
   30  CONTINUE                                                         LGEA0700
C                                                                       LGEA0720
       STOP                                                             LGEA0740
       END                                                              LGEA0760
C                                                                       LGEA0780
C DATA FOR THE EXAMPLE IN THE PORT SHEET...  (REMOVE THE C              LGEA0800
C IN COLUMN 1 BEFORE FEEDING THIS DATA TO THE PROGRAM ABOVE.)           LGEA0820
C$DATA                                                                  LGEA0840
C        1.       -2.        3.        7.       -9.                     LGEA0860
C       -2.        8.       -6.        9.       50.                     LGEA0880
C       11.       -6.       18.      -15.      -18.                     LGEA0900
C        7.        2.      -15.      273.      173.                     LGEA0920
C       -9.       50.      -18.        6.     1667.                     LGEA0940
C       30.    29.419                                                   LGEA0960
C     -191.  -190.994                                                   LGEA0980
C      133.   133.072                                                   LGEA1000
C     -986.  -985.775                                                   LGEA1020
C    -6496. -6495.553                                                   LGEA1040
C$TEST LGEB                                                             LGEB0000
C***********************************************************************LGEB0020
C                                                                       LGEB0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GECE                              LGEB0060
C                                                                       LGEB0080
C***********************************************************************LGEB0100
       INTEGER N, IA, IB, NB, INTER(5), IREAD, I1MACH                   LGEB0120
       INTEGER I, J, IWRITE, ITER, IEND                                 LGEB0140
       REAL A(5, 5), SAVEA(5, 5), B(5), SAVEB(5), R(5)                  LGEB0160
       REAL COND, BNORM, R1MACH, ABS, RNORM                             LGEB0180
       DOUBLE PRECISION DSDOT                                           LGEB0200
C                                                                       LGEB0220
       N=5                                                              LGEB0240
       IA=5                                                             LGEB0260
       IB=5                                                             LGEB0280
       NB=1                                                             LGEB0300
       IREAD=I1MACH(1)                                                  LGEB0320
C                                                                       LGEB0340
       DO 10 I=1,N                                                      LGEB0360
   10     READ(IREAD,11) (A(I,J),J=1,N)                                 LGEB0380
   11     FORMAT(1X,5F8.0)                                              LGEB0400
       DO 20 I=1,IB                                                     LGEB0420
   20     READ(IREAD,21) B(I)                                           LGEB0440
   21     FORMAT(F8.0)                                                  LGEB0460
C                                                                       LGEB0480
C SAVE THE MATRIX AND RIGHT-HAND SIDE (WHICH WILL BE OVERWRITTEN)       LGEB0500
C                                                                       LGEB0520
       DO 40 I=1,N                                                      LGEB0540
         SAVEB(I)=B(I)                                                  LGEB0560
         DO 30 J=1,N                                                    LGEB0580
   30       SAVEA(I,J)=A(I,J)                                           LGEB0600
   40  CONTINUE                                                         LGEB0620
C                                                                       LGEB0640
C SOLVE AX = B USING SEPARATE CALLS TO GECE, GEFS, GEBS                 LGEB0660
C                                                                       LGEB0680
       CALL GECE(N,A,IA,INTER,COND)                                     LGEB0700
       IWRITE=I1MACH(2)                                                 LGEB0720
       IF (COND.GE.1.0/R1MACH(4)) WRITE(IWRITE,41)                      LGEB0740
   41  FORMAT(49H CONDITION NUMBER HIGH,ACCURATE SOLUTION UNLIKELY)     LGEB0760
C                                                                       LGEB0780
       CALL GEFS(N,A,IA,B,IB,NB,INTER)                                  LGEB0800
C                                                                       LGEB0820
       CALL GEBS(N,A,IA,B,IB,NB)                                        LGEB0840
       WRITE(IWRITE,42)                                                 LGEB0860
   42  FORMAT(44H ESTIMATED CONDITION NUMBER OF THE MATRIX A,)          LGEB0880
       WRITE(IWRITE,43) COND                                            LGEB0900
   43  FORMAT(27H  USING ONE CALL TO GECE = ,E15.7)                     LGEB0920
       BNORM=0.0                                                        LGEB0940
       WRITE(IWRITE,44)                                                 LGEB0960
   44  FORMAT(/22H THE FIRST SOLUTION X,)                               LGEB0980
       WRITE(IWRITE,45)                                                 LGEB1000
   45  FORMAT(41H (USING CALLS TO GECE, GEFS, AND GEBS) = )             LGEB1020
C                                                                       LGEB1040
C COMPUTE NORM OF SOLUTION                                              LGEB1060
C                                                                       LGEB1080
       DO 50 I=1,N                                                      LGEB1100
          BNORM=BNORM + ABS(B(I))                                       LGEB1120
   50     WRITE(IWRITE,51) B(I)                                         LGEB1140
   51     FORMAT(1X, 5F20.7)                                            LGEB1160
C                                                                       LGEB1180
C REFINE THE SOLUTION DEPENDING ON THE LENGTH OF THE MANTISSA           LGEB1200
C                                                                       LGEB1220
              IEND=I1MACH(11)*IFIX(R1MACH(5)/ALOG10(2.0) + 1.0)         LGEB1240
       DO 90 ITER=1,IEND                                                LGEB1260
C  COMPUTE RESIDUAL R = B - AX, IN DOUBLE PRECISION                     LGEB1280
C                                                                       LGEB1300
          WRITE(IWRITE,52)                                              LGEB1320
   52     FORMAT(/27H THE RESIDUAL R = B - AX = )                       LGEB1340
          DO 70 I=1,IA                                                  LGEB1360
                DSDOT=0.0                                               LGEB1380
                DO 60 J=1,N                                             LGEB1400
   60              DSDOT = DSDOT  +  DBLE(SAVEA(I,J))*B(J)              LGEB1420
                R(I) = SAVEB(I) - DSDOT                                 LGEB1440
   70           WRITE(IWRITE,51) R(I)                                   LGEB1460
C                                                                       LGEB1480
C  SOLVE LU*(DELTA X) = R USING SEPARATE CALLS TO GEFS AND GEBS         LGEB1500
C                                                                       LGEB1520
          CALL GEFS(N,A,IA,R,IB,NB,INTER)                               LGEB1540
          CALL GEBS(N,A,IA,R,IB,NB)                                     LGEB1560
C                                                                       LGEB1580
C  THE NEW SOLUTION X = X  +  DELTA X                                   LGEB1600
C                                                                       LGEB1620
          WRITE(IWRITE,71)                                              LGEB1640
   71     FORMAT(/38H THE NEW SOLUTION X = X  +  DELTA X = )            LGEB1660
C                                                                       LGEB1680
C DETERMINE NORM OF CORRECTION AND ADD IN CORRECTION                    LGEB1700
C                                                                       LGEB1720
          RNORM=0.0                                                     LGEB1740
          DO 80 I=1,N                                                   LGEB1760
                B(I) = B(I)  +  R(I)                                    LGEB1780
                RNORM=RNORM + ABS(R(I))                                 LGEB1800
   80           WRITE(IWRITE,51) B(I)                                   LGEB1820
C                                                                       LGEB1840
C TEST FOR CONVERGENCE                                                  LGEB1860
C                                                                       LGEB1880
          IF(RNORM.LT.R1MACH(4)*BNORM) GO TO 100                        LGEB1900
   90  CONTINUE                                                         LGEB1920
       WRITE(IWRITE,91)                                                 LGEB1940
   91  FORMAT(/29H ITERATIVE IMPROVEMENT FAILED)                        LGEB1960
  100  CONTINUE                                                         LGEB1980
       STOP                                                             LGEB2000
       END                                                              LGEB2020
C                                                                       LGEB2040
C DATA FOR THE EXAMPLE IN THE PORT SHEET...  (REMOVE THE C              LGEB2060
C IN COLUMN 1 BEFORE FEEDING THIS DATA TO THE PROGRAM ABOVE.)           LGEB2080
C$DATA                                                                  LGEB2100
C     1.     -2.      3.      7.     -9.                                LGEB2120
C    -2.      8.     -6.      2.     50.                                LGEB2140
C     3.     -6.     18.    -15.    -18.                                LGEB2160
C     7.      2.    -15.    273.    174.                                LGEB2180
C    -9.     50.    -18.    173.   1667.                                LGEB2200
C    78.                                                                LGEB2220
C  -320.                                                                LGEB2240
C   -81.                                                                LGEB2260
C   215.                                                                LGEB2280
C-10856.                                                                LGEB2300
C$TEST LGEF                                                             LGEF0000
C***********************************************************************LGEF0020
C                                                                       LGEF0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GELE                              LGEF0060
C                                                                       LGEF0080
C***********************************************************************LGEF0100
        INTEGER IA, IB, I1MACH, N, I, J, IT, ILAPSZ, IWRITE             LGEF0120
        REAL A(100, 100), AA(100, 100), B(100), BB(100)                 LGEF0140
        REAL SUM, ERR, COND, ABS, TIME, TIMES, AMAX1                    LGEF0160
        IA=100                                                          LGEF0180
        IB =100                                                         LGEF0200
C                                                                       LGEF0220
C GENERATE THE MATRIX AND RIGHT-HAND SIDE                               LGEF0240
C                                                                       LGEF0260
        DO 40 N=10,90,40                                                LGEF0280
           DO 20 I=1,N                                                  LGEF0300
              SUM=0.0                                                   LGEF0320
              DO 10 J=1,N                                               LGEF0340
                 A(I,J)=IABS(I-J)                                       LGEF0360
                 IF (I.GE.J) A(I,J)=A(I,J) + 1.0                        LGEF0380
                 AA(I,J)=A(I,J)                                         LGEF0400
                 SUM=SUM + AA(I,J)                                      LGEF0420
  10          CONTINUE                                                  LGEF0440
              B(I)=SUM                                                  LGEF0460
              BB(I)=SUM                                                 LGEF0480
  20       CONTINUE                                                     LGEF0500
C                                                                       LGEF0520
C CALL  GELE AND TIME IT                                                LGEF0540
           IT =ILAPSZ(0)                                                LGEF0560
           CALL GELE(N,A,IA,B,IB,1)                                     LGEF0580
           TIME=FLOAT(ILAPSZ(0)-IT)/64.0                                LGEF0600
C                                                                       LGEF0620
C COMPUTE THE MAXIMUM ERROR                                             LGEF0640
C                                                                       LGEF0660
           ERR=0.0                                                      LGEF0680
           DO 30 I=1,N                                                  LGEF0700
              ERR=AMAX1(ERR, ABS(B(I)-1.0))                             LGEF0720
  30       CONTINUE                                                     LGEF0740
C                                                                       LGEF0760
C CALL GESS                                                             LGEF0780
C                                                                       LGEF0800
           IT =ILAPSZ(0)                                                LGEF0820
           CALL GESS(N,AA,IA,BB,IB,1,COND)                              LGEF0840
           TIMES=FLOAT(ILAPSZ(0)-IT)/64.0                               LGEF0860
           IWRITE=I1MACH(2)                                             LGEF0880
           WRITE(IWRITE,31)N,COND                                       LGEF0900
  31       FORMAT(8H FOR N= ,I4,20H CONDITION NUMBER = ,E15.7)          LGEF0920
           WRITE(IWRITE,32)ERR                                          LGEF0940
  32       FORMAT(30H MAXIMUM ERROR IN SOLUTION IS ,F15.7)              LGEF0960
           WRITE(IWRITE,33)TIME                                         LGEF0980
  33       FORMAT(34H TIME IN MILLISECONDS FOR GELE IS ,F10.2)          LGEF1000
           WRITE(IWRITE,34)TIMES                                        LGEF1020
  34       FORMAT(34H TIME IN MILLISECONDS FOR GESS IS ,F10.2)          LGEF1040
  40    CONTINUE                                                        LGEF1060
        STOP                                                            LGEF1080
        END                                                             LGEF1100
      INTEGER FUNCTION ILAPSZ(N)                                        ILAP0000
      INTEGER N                                                         ILAP0020
      ILAPSZ = 0                                                        ILAP0040
      RETURN                                                            ILAP0060
      END                                                               ILAP0080
C$TEST LGEH                                                             LGEH0000
C***********************************************************************LGEH0020
C                                                                       LGEH0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GENM                              LGEH0060
C                                                                       LGEH0080
C***********************************************************************LGEH0100
        INTEGER I, J, L, N, IA, IWRITE, I1MACH                          LGEH0120
        REAL A(50, 50), AA(50, 50), B(50), X(50)                        LGEH0140
        REAL RELERR, RELRES, XNORM, RNORM, ERR, R(50)                   LGEH0160
        REAL GENM, SAMAX                                                LGEH0180
        IA = 50                                                         LGEH0200
C                                                                       LGEH0220
C GENERATE MATRIX                                                       LGEH0240
C                                                                       LGEH0260
        N=50                                                            LGEH0280
        DO 20 I=1,N                                                     LGEH0300
           DO 10 J=I,N                                                  LGEH0320
              A(I,J)=J-I                                                LGEH0340
              A(J,I)=J-I + 1                                            LGEH0360
              AA(I,J)=A(I,J)                                            LGEH0380
              AA(J,I)=A(J,I)                                            LGEH0400
 10        CONTINUE                                                     LGEH0420
           B(I)=I                                                       LGEH0440
 20     CONTINUE                                                        LGEH0460
C                                                                       LGEH0480
C GENERATE RIGHT HAND SIDE                                              LGEH0500
C                                                                       LGEH0520
        CALL GEML(N,A,IA,B,X)                                           LGEH0540
C                                                                       LGEH0560
C MAKE COPY OF RIGHT HAND SIDE                                          LGEH0580
C                                                                       LGEH0600
        CALL MOVEFR(N,X,B)                                              LGEH0620
C                                                                       LGEH0640
C SOLVE THE SYSTEM                                                      LGEH0660
C                                                                       LGEH0680
        CALL GELE(N,A,IA,B,N,1)                                         LGEH0700
C                                                                       LGEH0720
C COMPUTE THE RELATIVE ERROR AND THE RELATIVE RESIDUAL                  LGEH0740
C                                                                       LGEH0760
        CALL GEML(N,AA,IA,B,R)                                          LGEH0780
        ERR=0.0                                                         LGEH0800
        DO 30 I=1,N                                                     LGEH0820
           ERR=AMAX1(ERR,ABS(B(I)-FLOAT(I)))                            LGEH0840
           R(I)=R(I)-X(I)                                               LGEH0860
 30     CONTINUE                                                        LGEH0880
        XNORM=SAMAX(N,X,1)                                              LGEH0900
        RNORM=SAMAX(N,R,1)                                              LGEH0920
        RELERR=ERR/XNORM                                                LGEH0940
        RELRES=RNORM/(XNORM*GENM(N,AA,IA))                              LGEH0960
        IWRITE=I1MACH(2)                                                LGEH0980
        WRITE(IWRITE,31)RELERR,RELRES                                   LGEH1000
 31     FORMAT(16H RELATIVE ERROR=,E15.5,19H RELATIVE RESIDUAL=,        LGEH1020
     1   E15.5)                                                         LGEH1040
        STOP                                                            LGEH1060
        END                                                             LGEH1080
C$TEST LGEJ                                                             LGEJ0000
C***********************************************************************LGEJ0020
C                                                                       LGEJ0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GELU                              LGEJ0060
C                                                                       LGEJ0080
C***********************************************************************LGEJ0100
       SUBROUTINE DET(N,A,IA,DETMAN,IDETEX)                             DET 0000
C                                                                       DET 0020
C THIS SUBROUTINE COMPUTES THE DETERMINANT OF A                         DET 0040
C THE RESULT IS GIVEN BY DETMAN*BETA**IDETEX                            DET 0060
C WHERE BETA IS THE BASE OF THE MACHINE                                 DET 0080
C AND DETMAN IS BETWEEN 1/BETA AND 1                                    DET 0100
C                                                                       DET 0120
       INTEGER N, IA, IDETEX                                            DET 0140
       INTEGER E, IPOINT, ISTKGT, I1MACH, ISIGN, I                      DET 0160
       INTEGER IN(1000)                                                 DET 0180
       REAL A(IA, N), DETMAN, BETA, FLOAT, ONOVBE, M, ABS               DET 0200
       DOUBLE PRECISION D(500)                                          DET 0220
       COMMON /CSTAK/ D                                                 DET 0240
       EQUIVALENCE(D(1),IN(1))                                          DET 0260
C                                                                       DET 0280
C ALLOCATE SPACE FROM THE STACK FOR THE PIVOT ARRAY                     DET 0300
C                                                                       DET 0320
       IPOINT=ISTKGT(N,2)                                               DET 0340
       CALL GELU(N,A,IA,IN(IPOINT),0.0)                                 DET 0360
C                                                                       DET 0380
C THE DETERMINANT IS THE PRODUCT OF THE DIAGONAL ELEMENTS               DET 0400
C AND THE LAST ELEMENT OF THE INTERCHANGE ARRAY                         DET 0420
C WE TRY TO COMPUTE THIS PRODUCT IN A WAY THAT WILL                     DET 0440
C AVOID UNDERFLOW AND OVERFLOW                                          DET 0460
C                                                                       DET 0480
       BETA=FLOAT(I1MACH(10))                                           DET 0500
       ONOVBE=1.0/BETA                                                  DET 0520
       ISIGN=IPOINT + N-1                                               DET 0540
       DETMAN=IN(ISIGN)*ONOVBE                                          DET 0560
       IDETEX=1                                                         DET 0580
       DO 10 I=1,N                                                      DET 0600
           CALL UMKFL(A(I,I),E,M)                                       DET 0620
           DETMAN=DETMAN*M                                              DET 0640
           IDETEX=IDETEX+E                                              DET 0660
           IF(ABS(DETMAN).GE.ONOVBE) GO TO 10                           DET 0680
              IDETEX=IDETEX-1                                           DET 0700
              DETMAN=DETMAN*BETA                                        DET 0720
  10   CONTINUE                                                         DET 0740
       RETURN                                                           DET 0760
       END                                                              DET 0780
C$TEST LGEL                                                             LGEL0000
C***********************************************************************LGEL0020
C                                                                       LGEL0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GEBS                              LGEL0060
C                                                                       LGEL0080
C***********************************************************************LGEL0100
        INTEGER N, I, J, IWRITE, I1MACH                                 LGEL0120
        REAL A(15,15), B(15)                                            LGEL0140
        N=15                                                            LGEL0160
C                                                                       LGEL0180
C FORM THE MATRIX AND SET THE RIGHT-HAND SIDE                           LGEL0200
C TO THE LAST COLUMN OF THE IDENTITY MATRIX                             LGEL0220
        DO 20 I=1,N                                                     LGEL0240
           DO 10 J=I,N                                                  LGEL0260
              A(I,J) = -1.0                                             LGEL0280
  10       CONTINUE                                                     LGEL0300
           A(I,I) = 1.0                                                 LGEL0320
           B(I)   = 0.0                                                 LGEL0340
  20    CONTINUE                                                        LGEL0360
        B(N)=1.0                                                        LGEL0380
C FIND THE LAST COLUMN OF THE INVERSE MATRIX                            LGEL0400
        CALL GEBS(N,A,15,B,N,1)                                         LGEL0420
        IWRITE=I1MACH(2)                                                LGEL0440
        WRITE(IWRITE,21)(I,B(I),I=1,N)                                  LGEL0460
  21    FORMAT(3H B(,I3,3H )=,F15.4)                                    LGEL0480
        STOP                                                            LGEL0500
        END                                                             LGEL0520
C$TEST LGEM                                                             LGEM0000
C***********************************************************************LGEM0020
C                                                                       LGEM0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GEML                              LGEM0060
C                                                                       LGEM0080
C***********************************************************************LGEM0100
        INTEGER I, J, IWRITE, I1MACH, N                                 LGEM0120
        REAL A(10, 10), X(10), B(10)                                    LGEM0140
        REAL ERR, SASUM, UNI, COND                                      LGEM0160
        N=10                                                            LGEM0180
C                                                                       LGEM0200
C CONSTRUCT A MATRIX                                                    LGEM0220
C                                                                       LGEM0240
        DO 20 I=1,N                                                     LGEM0260
           DO 10 J=I,N                                                  LGEM0280
              A(I,J)=J-I                                                LGEM0300
              A(J,I)=J-I + 1                                            LGEM0320
  10       CONTINUE                                                     LGEM0340
  20    CONTINUE                                                        LGEM0360
C                                                                       LGEM0380
C CONSTRUCT A RANDOM VECTOR X                                           LGEM0400
C                                                                       LGEM0420
        DO 30 I=1,N                                                     LGEM0440
           X(I)=UNI(0)                                                  LGEM0460
  30    CONTINUE                                                        LGEM0480
C                                                                       LGEM0500
C FIND THE VECTOR B=AX                                                  LGEM0520
C                                                                       LGEM0540
       CALL GEML(N,A,10,X,B)                                            LGEM0560
C                                                                       LGEM0580
C SOLVE THE SYSTEM AX=B                                                 LGEM0600
C                                                                       LGEM0620
       CALL GESS(N,A,10,B,N,1,COND)                                     LGEM0640
C                                                                       LGEM0660
C PRINT THE COMPUTED AND TRUE SOLUTION                                  LGEM0680
C                                                                       LGEM0700
       IWRITE=I1MACH(2)                                                 LGEM0720
       WRITE(IWRITE,31)                                                 LGEM0740
  31   FORMAT(34H TRUE SOLUTION   COMPUTED SOLUTION)                    LGEM0760
       WRITE(IWRITE,32)(X(I),B(I),I=1,N)                                LGEM0780
  32   FORMAT(1H ,2E17.8)                                               LGEM0800
C                                                                       LGEM0820
C COMPUTE THE RELATIVE ERROR                                            LGEM0840
C                                                                       LGEM0860
       ERR=0.0                                                          LGEM0880
       DO 40 I=1,N                                                      LGEM0900
          ERR=ERR + ABS(B(I)-X(I))                                      LGEM0920
  40   CONTINUE                                                         LGEM0940
       ERR=ERR/SASUM(N,X,1)                                             LGEM0960
       WRITE(IWRITE,41)ERR                                              LGEM0980
  41   FORMAT(19H RELATIVE ERROR IS ,1PE15.7)                           LGEM1000
       WRITE(6,42)COND                                                  LGEM1020
  42   FORMAT(21H CONDITION NUMBER IS ,1PE15.7)                         LGEM1040
       STOP                                                             LGEM1060
       END                                                              LGEM1080
C$TEST LYMA                                                             LYMA0000
C***********************************************************************LYMA0020
C                                                                       LYMA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SYSS                              LYMA0060
C                                                                       LYMA0080
C***********************************************************************LYMA0100
         INTEGER N, L, I, IWRITE, I1MACH                                LYMA0120
         REAL C(5000), B(100)                                           LYMA0140
         REAL SUM, FLOAT, ABS, ERR, COND                                LYMA0160
         DO 40  N=10,90,40                                              LYMA0180
C                                                                       LYMA0200
C CREATE THE MATRIX A(I,J)=ABS(I-J), PACK IT INTO                       LYMA0220
C THE VECTOR C AND FORM THE RIGHT-HAND SIDE SO THE                      LYMA0240
C SOLUTION HAS ALL ONES.                                                LYMA0260
C                                                                       LYMA0280
           L=1                                                          LYMA0300
           SUM=(N*(N-1))/2                                              LYMA0320
           DO 20 I=1,N                                                  LYMA0340
              DO 10 J=I,N                                               LYMA0360
                 C(L)=J-I                                               LYMA0380
                 L=L+1                                                  LYMA0400
  10          CONTINUE                                                  LYMA0420
              B(I)=SUM                                                  LYMA0440
              SUM=SUM+FLOAT(I-(N-I))                                    LYMA0460
  20       CONTINUE                                                     LYMA0480
C                                                                       LYMA0500
C SOLVE THE SYSTEM AND GET THE CONDITION NUMBER OF THE MATRIX           LYMA0520
           CALL SYSS(N,C,B,100,1,COND)                                  LYMA0540
C                                                                       LYMA0560
C COMPUTE THE ERROR IN THE SOLUTION                                     LYMA0580
           ERR=0.0                                                      LYMA0600
           DO 30 I=1,N                                                  LYMA0620
  30           ERR=ERR+ABS(B(I)-1.0)                                    LYMA0640
           ERR=ERR/FLOAT(N)                                             LYMA0660
           IWRITE=I1MACH(2)                                             LYMA0680
           WRITE(IWRITE,31)N                                            LYMA0700
  31       FORMAT(/8H FOR N= ,I5)                                       LYMA0720
           WRITE(IWRITE,32)COND                                         LYMA0740
  32       FORMAT(23H CONDITION ESTIMATE IS 1PE15.7)                    LYMA0760
           WRITE(IWRITE,33)ERR                                          LYMA0780
  33       FORMAT(30H RELATIVE ERROR IN SOLUTION IS,1PE15.7)            LYMA0800
  40     CONTINUE                                                       LYMA0820
         STOP                                                           LYMA0840
         END                                                            LYMA0860
C$TEST LYMB                                                             LYMB0000
C***********************************************************************LYMB0020
C                                                                       LYMB0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SYCE                              LYMB0060
C                                                                       LYMB0080
C***********************************************************************LYMB0100
       INTEGER N, JEND, IREAD, I1MACH, I, JBEGIN, J, IWRITE             LYMB0120
       INTEGER INTER(6), IEND, ITER, L, IFIX                            LYMB0140
       REAL C(20), SAVEC(36), B(6), SAVEB(6), R(6)                      LYMB0160
       REAL COND, R1MACH, BNORM, RNORM, ABS, ALOG10                     LYMB0180
       DOUBLE PRECISION D(6)                                            LYMB0200
       N=5                                                              LYMB0220
C                                                                       LYMB0240
C READ IN A SYMMETRIC MATRIX WHOSE UPPER TRIANGULAR                     LYMB0260
C PORTION IS STORED ONE ROW PER CARD. MAKE A                            LYMB0280
C COPY OF THE MATRIX SO THAT IT CAN BE USED LATER                       LYMB0300
C                                                                       LYMB0320
        JEND=0                                                          LYMB0340
        IREAD=I1MACH(1)                                                 LYMB0360
        DO 20 I=1,N                                                     LYMB0380
           JBEGIN=JEND+1                                                LYMB0400
           JEND=JBEGIN+N - I                                            LYMB0420
           READ(IREAD,1)(C(J),J=JBEGIN,JEND)                            LYMB0440
  1        FORMAT(5F8.0)                                                LYMB0460
           DO 10 J=JBEGIN,JEND                                          LYMB0480
                SAVEC(J)=C(J)                                           LYMB0500
  10       CONTINUE                                                     LYMB0520
  20    CONTINUE                                                        LYMB0540
C READ IN RIGHT HAND SIDE AND SAVE IT                                   LYMB0560
        DO 30 I=1,N                                                     LYMB0580
           READ(IREAD,1)B(I)                                            LYMB0600
           SAVEB(I)=B(I)                                                LYMB0620
  30    CONTINUE                                                        LYMB0640
C                                                                       LYMB0660
C  SOLVE AX = B USING SEPARATE CALLS TO SYCE AND SYFBS                  LYMB0680
C                                                                       LYMB0700
       CALL SYCE(N,C,INTER,COND)                                        LYMB0720
       CALL SYFBS(N,C,B,6,1,INTER)                                      LYMB0740
       IWRITE=I1MACH(2)                                                 LYMB0760
       IF(COND.GE.1.0/R1MACH(4))WRITE(IWRITE,31)                        LYMB0780
  31   FORMAT(49H CONDITION NUMBER HIGH,ACCURATE SOLUTION UNLIKELY)     LYMB0800
       WRITE(IWRITE,32) COND                                            LYMB0820
  32   FORMAT(21H CONDITION NUMBER IS ,1PE16.8)                         LYMB0840
C      COMPUTE NORM OF SOLUTION                                         LYMB0860
       BNORM=0.0                                                        LYMB0880
       WRITE(IWRITE,33)                                                 LYMB0900
  33   FORMAT(43H THE FIRST SOLUTION X, FROM SYCE AND SYFBS=)           LYMB0920
       DO 40 I=1,N                                                      LYMB0940
          BNORM=BNORM+ABS(B(I))                                         LYMB0960
  40      WRITE(IWRITE,41)B(I)                                          LYMB0980
  41   FORMAT(1H ,F20.7)                                                LYMB1000
C                                                                       LYMB1020
C IEND IS THE UPPER BOUND ON THE NUMBER OF BITS PER WORD                LYMB1040
C                                                                       LYMB1060
       IEND=I1MACH(11)*IFIX(R1MACH(5)/ALOG10(2.0)+1.0)                  LYMB1080
C                                                                       LYMB1100
C REFINE SOLUTION                                                       LYMB1120
C                                                                       LYMB1140
       DO 90 ITER=1,IEND                                                LYMB1160
C                                                                       LYMB1180
C COMPUTE RESIDUAL R = B - AX, IN DOUBLE PRECISION                      LYMB1200
C                                                                       LYMB1220
          DO 50 I=1,N                                                   LYMB1240
  50         D(I)=DBLE(SAVEB(I))                                        LYMB1260
          L=1                                                           LYMB1280
          DO 70 I=1,N                                                   LYMB1300
             DO 60 J=I,N                                                LYMB1320
                IF (I.NE.J) D(J)=D(J) - DBLE(SAVEC(L))*B(I)             LYMB1340
                D(I) = D(I) - DBLE(SAVEC(L))*B(J)                       LYMB1360
  60         L=L+1                                                      LYMB1380
             R(I) = D(I)                                                LYMB1400
  70      CONTINUE                                                      LYMB1420
C                                                                       LYMB1440
C SOLVE A(DELTAX) =R                                                    LYMB1460
C                                                                       LYMB1480
          CALL SYFBS(N,C,R,8,1,INTER)                                   LYMB1500
C                                                                       LYMB1520
C DETERMINE NORM OF CORRECTION AND ADD IN CORRECTION                    LYMB1540
C                                                                       LYMB1560
          WRITE(IWRITE,71)ITER                                          LYMB1580
  71      FORMAT(30H THE SOLUTION AFTER ITERATION ,I5)                  LYMB1600
          RNORM=0.0                                                     LYMB1620
          DO 80 I=1,N                                                   LYMB1640
                B(I) = B(I) + R(I)                                      LYMB1660
                RNORM=RNORM+ABS(R(I))                                   LYMB1680
                WRITE(IWRITE,41)B(I)                                    LYMB1700
  80      CONTINUE                                                      LYMB1720
       IF(RNORM.LT.R1MACH(4)*BNORM) STOP                                LYMB1740
  90   CONTINUE                                                         LYMB1760
       WRITE(IWRITE,91)                                                 LYMB1780
  91   FORMAT(29H ITERATIVE IMPROVEMENT FAILED)                         LYMB1800
       STOP                                                             LYMB1820
       END                                                              LYMB1840
C                                                                       LYMB1860
C DATA FOR THE EXAMPLE IN THE PORT SHEET...  (REMOVE THE C              LYMB1880
C IN COLUMN 1 BEFORE FEEDING THIS DATA TO THE PROGRAM ABOVE.)           LYMB1900
C$DATA                                                                  LYMB1920
C    -4.      0.    -16.    -32.     28.                                LYMB1940
C     1.      5.     10.     -6.                                        LYMB1960
C   -37.    -66.     64.                                                LYMB1980
C   -85.     53.                                                        LYMB2000
C   -15.                                                                LYMB2020
C   448.                                                                LYMB2040
C  -111.                                                                LYMB2060
C  1029.                                                                LYMB2080
C  1207.                                                                LYMB2100
C  -719.                                                                LYMB2120
C$TEST LYMK                                                             LYMK0000
C***********************************************************************LYMK0020
C                                                                       LYMK0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SYNM                              LYMK0060
C                                                                       LYMK0080
C***********************************************************************LYMK0100
        INTEGER I, J, L, N, I1MACH, IWRITE                              LYMK0120
        REAL C(1300), CC(1300), B(50), X(50)                            LYMK0140
        REAL RELERR, RELRES, XNORM, RNORM, ERR, R(50)                   LYMK0160
        REAL SYNM, SAMAX                                                LYMK0180
        L=0                                                             LYMK0200
C                                                                       LYMK0220
C GENERATE MATRIX                                                       LYMK0240
C                                                                       LYMK0260
        N=50                                                            LYMK0280
        DO 20 I=1,N                                                     LYMK0300
           DO 10 J=I,N                                                  LYMK0320
              L=L+1                                                     LYMK0340
              C(L)=J-I                                                  LYMK0360
              CC(L)=C(L)                                                LYMK0380
 10        CONTINUE                                                     LYMK0400
           B(I)=I                                                       LYMK0420
 20     CONTINUE                                                        LYMK0440
C                                                                       LYMK0460
C GENERATE RIGHT HAND SIDE                                              LYMK0480
C                                                                       LYMK0500
        CALL SYML(N,C,B,X)                                              LYMK0520
C                                                                       LYMK0540
C MAKE COPY OF RIGHT HAND SIDE                                          LYMK0560
C                                                                       LYMK0580
        CALL MOVEFR(N,X,B)                                              LYMK0600
C                                                                       LYMK0620
C SOLVE THE SYSTEM                                                      LYMK0640
C                                                                       LYMK0660
        CALL SYLE(N,C,B,N,1)                                            LYMK0680
C                                                                       LYMK0700
C COMPUTE THE RELATIVE ERROR AND THE RELATIVE RESIDUAL                  LYMK0720
C                                                                       LYMK0740
        CALL SYML(N,CC,B,R)                                             LYMK0760
        ERR=0.0                                                         LYMK0780
        DO 30 I=1,N                                                     LYMK0800
           ERR=AMAX1(ERR,ABS(B(I)-FLOAT(I)))                            LYMK0820
           R(I)=R(I)-X(I)                                               LYMK0840
 30     CONTINUE                                                        LYMK0860
        XNORM=SAMAX(N,X,1)                                              LYMK0880
        RNORM=SAMAX(N,R,1)                                              LYMK0900
        RELERR=ERR/XNORM                                                LYMK0920
        RELRES=RNORM/(XNORM*SYNM(N,CC))                                 LYMK0940
        IWRITE=I1MACH(2)                                                LYMK0960
        WRITE(IWRITE,31)RELERR,RELRES                                   LYMK0980
 31     FORMAT(16H RELATIVE ERROR=,E15.5,19H RELATIVE RESIDUAL=,        LYMK1000
     1   E15.5)                                                         LYMK1020
        STOP                                                            LYMK1040
        END                                                             LYMK1060
C$TEST LYMP                                                             LYMP0000
C***********************************************************************LYMP0020
C                                                                       LYMP0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SYML                              LYMP0060
C                                                                       LYMP0080
C***********************************************************************LYMP0100
        INTEGER N, L, I, J, IWRITE, I1MACH                              LYMP0120
        REAL C(55), X(10), B(10)                                        LYMP0140
        REAL UNI, ERR, SASUM, ABS                                       LYMP0160
        N=10                                                            LYMP0180
C                                                                       LYMP0200
C CONSTRUCT THE MATRIX A(I,J)=ABS(J-I) AND PACK INTO C                  LYMP0220
C                                                                       LYMP0240
        L=0                                                             LYMP0260
        DO 20 I=1,N                                                     LYMP0280
           DO 10 J=I,N                                                  LYMP0300
              L=L+1                                                     LYMP0320
              C(L)=J-I                                                  LYMP0340
  10       CONTINUE                                                     LYMP0360
  20    CONTINUE                                                        LYMP0380
C                                                                       LYMP0400
C CONSTRUCT A RANDOM VECTOR X                                           LYMP0420
C                                                                       LYMP0440
        DO 30 I=1,N                                                     LYMP0460
           X(I)=UNI(0)                                                  LYMP0480
  30    CONTINUE                                                        LYMP0500
C                                                                       LYMP0520
C FIND THE VECTOR B=AX                                                  LYMP0540
C                                                                       LYMP0560
       CALL SYML(N,C,X,B)                                               LYMP0580
C                                                                       LYMP0600
C SOLVE THE SYSTEM AX=B                                                 LYMP0620
C                                                                       LYMP0640
       CALL SYLE(N,C,B,N,1)                                             LYMP0660
C                                                                       LYMP0680
C PRINT THE COMPUTED AND TRUE SOLUTION                                  LYMP0700
C                                                                       LYMP0720
       IWRITE=I1MACH(2)                                                 LYMP0740
       WRITE(IWRITE,31)                                                 LYMP0760
  31   FORMAT(34H TRUE SOLUTION   COMPUTED SOLUTION)                    LYMP0780
       WRITE(IWRITE,32)(X(I),B(I),I=1,N)                                LYMP0800
  32   FORMAT(1H ,2E17.8)                                               LYMP0820
C                                                                       LYMP0840
C COMPUTE THE RELATIVE ERROR                                            LYMP0860
C                                                                       LYMP0880
       ERR=0.0                                                          LYMP0900
       DO 40 I=1,N                                                      LYMP0920
          ERR=ERR+ABS(B(I)-X(I))                                        LYMP0940
  40   CONTINUE                                                         LYMP0960
       ERR=ERR/SASUM(N,X,1)                                             LYMP0980
       WRITE(IWRITE,41)ERR                                              LYMP1000
  41   FORMAT(19H RELATIVE ERROR IS ,1PE15.7)                           LYMP1020
       STOP                                                             LYMP1040
       END                                                              LYMP1060
C$TEST LBAA                                                             LBAA0000
C***********************************************************************LBAA0020
C                                                                       LBAA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BASS                              LBAA0060
C                                                                       LBAA0080
C***********************************************************************LBAA0100
       INTEGER N, IG, ML, M, I, J, IWRITE, I1MACH                       LBAA0120
       REAL G(13,80), B(80,2), X(80)                                    LBAA0140
       REAL START, FLOAT, ERR, ERR2, ABS, COND                          LBAA0160
       IG=13                                                            LBAA0180
       N=80                                                             LBAA0200
       DO 60 ML=2,6                                                     LBAA0220
C                                                                       LBAA0240
C CONSTRUCT THE MATRIX A(I,J)=I+J AND PACK IT INTO G                    LBAA0260
C                                                                       LBAA0280
            M=2*ML-1                                                    LBAA0300
            START=-FLOAT(M-ML)                                          LBAA0320
            DO 20 I=1,N                                                 LBAA0340
               G(1,I)=START+FLOAT(2*I)                                  LBAA0360
               IF(M.EQ.1) GO TO 20                                      LBAA0380
               DO 10 J=2,M                                              LBAA0400
                  G(J,I)=G(J-1,I)+1.                                    LBAA0420
  10           CONTINUE                                                 LBAA0440
  20        CONTINUE                                                    LBAA0460
C CONSTRUCT FIRST RIGHT-HAND SIDE SO SOLUTION IS ALL 1S                 LBAA0480
            DO 30 I=1,N                                                 LBAA0500
  30           X(I)=1                                                   LBAA0520
            CALL BAML(N,ML,M,G,IG,X,B)                                  LBAA0540
C CONSTRUCT THE SECOND COLUMN SO X(I)=I                                 LBAA0560
            DO 40 I=1,N                                                 LBAA0580
  40           X(I)=I                                                   LBAA0600
            CALL BAML(N,ML,M,G,IG,X,B(1,2))                             LBAA0620
C SOLVE THE SYSTEM                                                      LBAA0640
            CALL BASS(N,ML,M,G,IG,B,80,2,COND)                          LBAA0660
C COMPUTE THE ERRORS IN THE SOLUTION                                    LBAA0680
            ERR=0.0                                                     LBAA0700
            ERR2=0.0                                                    LBAA0720
            DO 50 I=1,N                                                 LBAA0740
               ERR=ERR+ABS(B(I,1)-1.0)                                  LBAA0760
               ERR2=ERR2+ABS(B(I,2)-FLOAT(I))                           LBAA0780
  50        CONTINUE                                                    LBAA0800
            ERR=ERR/FLOAT(N)                                            LBAA0820
            ERR2=ERR2/FLOAT(N*(N+1))*2.0                                LBAA0840
            IWRITE=I1MACH(2)                                            LBAA0860
            WRITE(IWRITE,51)ML,COND                                     LBAA0880
  51        FORMAT(/9H WHEN ML=,I4,21H THE CONDITION NO. IS,1PE15.7)    LBAA0900
            WRITE(IWRITE,52)ERR                                         LBAA0920
  52        FORMAT(38H REL. ERROR IN THE FIRST SOLUTION IS  ,1PE15.7)   LBAA0940
            WRITE(IWRITE,53)ERR2                                        LBAA0960
  53        FORMAT(38H REL. ERROR IN THE SECOND SOLUTION IS ,1PE15.7)   LBAA0980
  60     CONTINUE                                                       LBAA1000
  70  CONTINUE                                                          LBAA1020
      STOP                                                              LBAA1040
      END                                                               LBAA1060
C$TEST LBAB                                                             LBAB0000
C***********************************************************************LBAB0020
C                                                                       LBAB0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BACE                              LBAB0060
C                                                                       LBAB0080
C***********************************************************************LBAB0100
       INTEGER IG, IGL, N, ML, M, I, J, MU, IWRITE, I1MACH              LBAB0120
       INTEGER INTER(80)                                                LBAB0140
       REAL G(13, 80), B(80), X(80), GL(6, 80)                          LBAB0160
       REAL START, FLOAT, AINNO, COND, CONDNO, ABS, AINNOI              LBAB0180
       IG=13                                                            LBAB0200
       IGL=6                                                            LBAB0220
       N=80                                                             LBAB0240
       IWRITE=I1MACH(2)                                                 LBAB0260
       DO 60 ML=2,6                                                     LBAB0280
C                                                                       LBAB0300
C CONSTRUCT THE MATRIX A(I,J)=I+J AND PACK IT INTO G                    LBAB0320
            M=2*ML - 1                                                  LBAB0340
            START=-FLOAT(M-ML)                                          LBAB0360
            DO 20 I=1,N                                                 LBAB0380
               G(1,I)=START+FLOAT(2*I)                                  LBAB0400
               DO 10 J=2,M                                              LBAB0420
                  G(J,I)=G(J-1,I)+1.                                    LBAB0440
  10           CONTINUE                                                 LBAB0460
  20        CONTINUE                                                    LBAB0480
C                                                                       LBAB0500
C DETERMINE AN ESTIMATE OF THE CONDITION NUMBER                         LBAB0520
C AND COMPUTE THE LU DECOMPOSITION                                      LBAB0540
C                                                                       LBAB0560
            CALL BACE(N,ML,M,G,IG,GL,IGL,INTER,MU,COND)                 LBAB0580
C                                                                       LBAB0600
C DETERMINE THE NORM OF THE INVERSE MATRIX BY                           LBAB0620
C SOLVING FOR ONE COLUMN OF THE INVERSE MATRIX                          LBAB0640
C AT A TIME                                                             LBAB0660
C                                                                       LBAB0680
            AINNO=0.0                                                   LBAB0700
            DO 50 I=1,N                                                 LBAB0720
C                                                                       LBAB0740
C FIND THE ITH COLUMN OF THE INVERSE MATRIX BY                          LBAB0760
C SETTING THE RIGHT HAND SIDE TO THE ITH COLUMN                         LBAB0780
C OF THE IDENTITY MATRIX                                                LBAB0800
C                                                                       LBAB0820
                DO 30 J=1,N                                             LBAB0840
                   B(J)=0.0                                             LBAB0860
  30            CONTINUE                                                LBAB0880
                B(I)=1.0                                                LBAB0900
                CALL BAFS(N,ML,GL,IGL,INTER,B,80,1)                     LBAB0920
                CALL BABS(N,G,IG,B,80,1,MU)                             LBAB0940
C FIND THE NORM OF THE ITH COLUMN                                       LBAB0960
                AINNOI=0.0                                              LBAB0980
                DO 40 J=1,N                                             LBAB1000
                   AINNOI=AINNOI+ABS(B(J))                              LBAB1020
  40            CONTINUE                                                LBAB1040
                IF(AINNOI.GT.AINNO)AINNO=AINNOI                         LBAB1060
  50         CONTINUE                                                   LBAB1080
             WRITE(IWRITE,51)ML                                         LBAB1100
  51         FORMAT(/6H ML IS ,I4)                                      LBAB1120
             WRITE(IWRITE,52)COND                                       LBAB1140
  52         FORMAT(22H CONDITION ESTIMATE IS,1PE15.7)                  LBAB1160
             CONDNO=AINNO*FLOAT(M*(N-ML+1)*2)                           LBAB1180
             WRITE(IWRITE,53)CONDNO                                     LBAB1200
  53         FORMAT(22H TRUE CONDITION NO. IS,1PE15.7)                  LBAB1220
  60      CONTINUE                                                      LBAB1240
          STOP                                                          LBAB1260
          END                                                           LBAB1280
C$TEST LBAF                                                             LBAF0000
C***********************************************************************LBAF0020
C                                                                       LBAF0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BALE                              LBAF0060
C                                                                       LBAF0080
C***********************************************************************LBAF0100
         INTEGER IG, IWRITE, I1MACH, N, ML, II, MP1, I, K               LBAF0120
         INTEGER IB, NB, IT, ILAPSZ                                     LBAF0140
         REAL G(19, 100), B(100, 10), BB(100, 10), GG(19, 100)          LBAF0160
         REAL COND, TIME1, TIME2, UNI                                   LBAF0180
C                                                                       LBAF0200
C THIS PROGRAM SOLVES BANDED SYSTEMS USING BALE AND                     LBAF0220
C BASS AND COMPARES THE TIME FOR EACH OF THEM. THE                      LBAF0240
C SYSTEMS HAVE VARIOUS BANDWIDTHS,DIMENSIONS, AND                       LBAF0260
C NUMBERS OF RIGHT-HAND SIDES                                           LBAF0280
         DOUBLE PRECISION D(600)                                        LBAF0300
         COMMON /CSTAK/ D                                               LBAF0320
C MAKE SURE THE STACK MECHANISM HAS SUFFICIENT SPACE                    LBAF0340
C FOR BASS                                                              LBAF0360
         CALL ISTKIN(1200,3)                                            LBAF0380
         IG=19                                                          LBAF0400
         IWRITE=I1MACH(2)                                               LBAF0420
         IB=100                                                         LBAF0440
         DO 70 N=50,100,50                                              LBAF0460
            DO 60 ML=2,10,8                                             LBAF0480
               M=2*ML - 1                                               LBAF0500
               MP1=M+1                                                  LBAF0520
               DO 50 NB=1,10,9                                          LBAF0540
                  WRITE(IWRITE,1)N,M,NB                                 LBAF0560
  1               FORMAT(/5H N IS,I4,6H M IS ,I3,7H NB IS ,I3)          LBAF0580
C                                                                       LBAF0600
C CONSTRUCT THE MATRIX A(I,J)=ABS(I-J) AND PACK IT INTO G               LBAF0620
C AND MAKE A COPY OF THE MATRIX SO THE SYSTEM CAN BE                    LBAF0640
C SOLVED WITH BOTH BALE AND BASS                                        LBAF0660
C                                                                       LBAF0680
                  K=ML - 1                                              LBAF0700
                  DO 20 I=1,ML                                          LBAF0720
                     II=MP1 - I                                         LBAF0740
                     DO 10 J=1,N                                        LBAF0760
                        G(I,J)=K                                        LBAF0780
                        GG(I,J)=K                                       LBAF0800
                        G(II,J)=K                                       LBAF0820
                        GG(II,J)=K                                      LBAF0840
  10                 CONTINUE                                           LBAF0860
                     K=K - 1                                            LBAF0880
  20              CONTINUE                                              LBAF0900
C                                                                       LBAF0920
C CONSTRUCT RANDOM RIGHT-HAND SIDES                                     LBAF0940
C AND MAKE A COPY                                                       LBAF0960
C                                                                       LBAF0980
                  DO 40 I=1,NB                                          LBAF1000
                     DO 30 II=1,N                                       LBAF1020
                        B(II,I)=UNI(0)                                  LBAF1040
                        BB(II,I)=B(II,I)                                LBAF1060
  30                 CONTINUE                                           LBAF1080
  40              CONTINUE                                              LBAF1100
C                                                                       LBAF1120
C SOLVE THE SYSTEM USING BOTH BASS AND BALE                             LBAF1140
C                                                                       LBAF1160
                  IT=ILAPSZ(0)                                          LBAF1180
                  CALL BASS(N,ML,M,G,IG,B,IB,NB,COND)                   LBAF1200
                  TIME1=(ILAPSZ(0)-IT)/64.0                             LBAF1220
                  WRITE(IWRITE,41)TIME1                                 LBAF1240
  41              FORMAT(34H TIME FOR BASS IN MILLISECONDS IS ,F10.1)   LBAF1260
                  IT=ILAPSZ(0)                                          LBAF1280
                  CALL BALE(N,ML,M,GG,IG,BB,IB,NB)                      LBAF1300
                  TIME2=(ILAPSZ(0)-IT)/64.0                             LBAF1320
                  WRITE(IWRITE,42)TIME2                                 LBAF1340
  42              FORMAT(34H TIME FOR BALE IN MIILISECONDS IS ,F10.1)   LBAF1360
  50           CONTINUE                                                 LBAF1380
  60        CONTINUE                                                    LBAF1400
  70     CONTINUE                                                       LBAF1420
         STOP                                                           LBAF1440
         END                                                            LBAF1460
      INTEGER FUNCTION ILAPSZ(N)                                        ILAP0000
      INTEGER N                                                         ILAP0020
      ILAPSZ = 0                                                        ILAP0040
      RETURN                                                            ILAP0060
      END                                                               ILAP0080
C$TEST LBAJ                                                             LBAJ0000
C***********************************************************************LBAJ0020
C                                                                       LBAJ0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BADC                              LBAJ0060
C                                                                       LBAJ0080
C***********************************************************************LBAJ0100
       SUBROUTINE NEWTON(N,M,ML,X,EPS,FUN,JAC,LIMIT,F)                  NEWT0000
C                                                                       NEWT0020
C THIS SUBROUTINE IMPLEMENTS A LINEARIZED FORM OF NEWTONS               NEWT0040
C METHOD TO FIND THE ZERO OF A FUNCTION F DEFINED BY                    NEWT0060
C FUN, WHOSE BAND JACOBIAN (WITH BANDWIDTH M AND ML                     NEWT0080
C LOWER DIAGONALS) IS EVALUATED IN JAC. LIMIT GIVES                     NEWT0100
C A BOUND ON THE NUMBER OF ITERATIONS AND IN F THE                      NEWT0120
C FINAL FUNCTION VALUE IS RETURNED.                                     NEWT0140
C                                                                       NEWT0160
       INTEGER N, ML, M, LIMIT                                          NEWT0180
       INTEGER JG, JAL, JINTER, ISTKGT, MU, LIM, I                      NEWT0200
       INTEGER IST(1000)                                                NEWT0220
       REAL EPS, X(N), F(N)                                             NEWT0240
       REAL FU, SNRM2, R(1000)                                          NEWT0260
       DOUBLE PRECISION D(500)                                          NEWT0280
       EXTERNAL FUN,JAC                                                 NEWT0300
       COMMON /CSTAK/ D                                                 NEWT0320
       EQUIVALENCE (D(1),R(1)),(D(1),IST(1))                            NEWT0340
C                                                                       NEWT0360
C GET SPACE FOR G,INTER, AND AL FROM                                    NEWT0380
C THE STORAGE STACK                                                     NEWT0400
C                                                                       NEWT0420
       JG= ISTKGT(M*N,3)                                                NEWT0440
       JAL = ISTKGT ((ML-1)*N,3)                                        NEWT0460
       JINTER = ISTKGT(N,2)                                             NEWT0480
       CALL JAC(N,M,ML,X,R(JG),M)                                       NEWT0500
       CALL BADC(N,ML,M,R(JH),M,R(JAL),ML-1,IST(JINTER),MU)             NEWT0520
       LIM=0                                                            NEWT0540
  10   CALL FUN(N,X,F)                                                  NEWT0560
       FU=SNRM2(N,F,1)                                                  NEWT0580
C                                                                       NEWT0600
C CHECK FOR CONVERGENCE OR IF ITERATION LIMIT IS REACHED                NEWT0620
C                                                                       NEWT0640
      IF (FU.LE.EPS.OR.LIM.GT.LIMIT) RETURN                             NEWT0660
      LIM=LIM+1                                                         NEWT0680
C SOLVE THE LINEAR SYSTEM                                               NEWT0700
      CALL BAFS(N,ML,R(JAL),ML-1,IST(JINTER),F,N,1)                     NEWT0720
      CALL BABS(N,R(JG),M,F,N,1,MU)                                     NEWT0740
C CORRECT THE CURRENT ESTIMATE OF THE SOLUTION                          NEWT0760
      DO 20 I=1,N                                                       NEWT0780
         X(I)=X(I)-F(I)                                                 NEWT0800
  20  CONTINUE                                                          NEWT0820
      GO TO 10                                                          NEWT0840
      END                                                               NEWT0860
C$TEST LBAK                                                             LBAK0000
C***********************************************************************LBAK0020
C                                                                       LBAK0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BANM                              LBAK0060
C                                                                       LBAK0080
C***********************************************************************LBAK0100
      INTEGER IG,  ML,  M,  N,  I,  J, IWRITE, I1MACH                   LBAK0120
      REAL G(13,  80),  START,  BANM,  TRNORM                           LBAK0140
      IG=13                                                             LBAK0160
      N=80                                                              LBAK0180
      DO 30 ML=2,6                                                      LBAK0200
C                                                                       LBAK0220
C CONSTRUCT THE MATRIX A(I,J)=I+J AND PACK IT INTO G                    LBAK0240
C                                                                       LBAK0260
         M=2*ML-1                                                       LBAK0280
         START=-FLOAT(M-ML)                                             LBAK0300
         DO 20 I=1,N                                                    LBAK0320
            G(1,I)=START+FLOAT(2*I)                                     LBAK0340
            DO 10 J=2,M                                                 LBAK0360
               G(J,I)=G(J-1,I)+1.0                                      LBAK0380
 10         CONTINUE                                                    LBAK0400
 20      CONTINUE                                                       LBAK0420
C                                                                       LBAK0440
C PRINT OUT THE NORM CALCULATED FROM BANM AND THE TRUE NORM             LBAK0460
C                                                                       LBAK0480
         TRNORM=M*(N-ML+1)*2                                            LBAK0500
         IWRITE=I1MACH(2)                                               LBAK0520
         WRITE(IWRITE,21)ML                                             LBAK0540
 21      FORMAT(/6H ML IS ,I4)                                          LBAK0560
         WRITE(IWRITE,22)TRNORM,BANM(N,ML,M,G,IG)                       LBAK0580
 22      FORMAT(15H THE TRUE NORM=,E15.5,15H COMPUTED NORM=,E15.5)      LBAK0600
 30   CONTINUE                                                          LBAK0620
      STOP                                                              LBAK0640
      END                                                               LBAK0660
C$TEST LBAL                                                             LBAL0000
C***********************************************************************LBAL0020
C                                                                       LBAL0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BALU                              LBAL0060
C                                                                       LBAL0080
C***********************************************************************LBAL0100
       SUBROUTINE BADET(N,ML,M,A,IA,DETMAN,IDETEX)                      BADE0000
C                                                                       BADE0020
C THIS SUBROUTINE COMPUTES THE DETERMINANT OF A                         BADE0040
C BANDED MATRIX STORED IN PACKED FORM IN A                              BADE0060
C THE DETERMINANT IS COMPUTED AS DETMAN*BETA**IDETEX,                   BADE0080
C WHERE BETA IS THE BASE OF THE MACHINE AND                             BADE0100
C DETMAN IS BETWEEN 1/BETA AND 1 IN ABSOLUTE VALUE                      BADE0120
C                                                                       BADE0140
       INTEGER ML, M, N, IA, IDETEX                                     BADE0160
       INTEGER E, ISPAC, IALOW, ISTKGT, ISIGN, INTER, I, MU             BADE0180
       INTEGER IN(1000)                                                 BADE0200
       REAL A(IA,1), DETMAN, BETA, ONOVBE, S                            BADE0220
       REAL R(1000)                                                     BADE0240
       DOUBLE PRECISION D(500)                                          BADE0260
       COMMON /CSTAK/D                                                  BADE0280
       EQUIVALENCE(D(1),R(1)),(D(1),IN(1))                              BADE0300
C                                                                       BADE0320
C ALLOCATE SPACE FROM THE STACK FOR THE PIVOT ARRAY                     BADE0340
C AND THE EXTRA SPACE TO HOLD THE LOWER TRIANGLE                        BADE0360
C                                                                       BADE0380
       ISPAC=(ML-1)*N                                                   BADE0400
       IALOW=ISTKGT(ISPAC,3)                                            BADE0420
       INTER=ISTKGT(N,2)                                                BADE0440
       CALL BALU(N,ML,M,A,IA,R(IALOW),ML-1,IN(INTER),MU,0.0)            BADE0460
C                                                                       BADE0480
C THE DETERMINANT IS THE PRODUCT OF THE ELEMENTS OF                     BADE0500
C ROW 1 OF A TIMES THE LAST ELEMENT IN THE ARRAY INTER.                 BADE0520
C WE TRY TO COMPUTE THIS PRODUCT IN A WAY THAT WILL                     BADE0540
C AVOID UNDERFLOW AND OVERFLOW.                                         BADE0560
C                                                                       BADE0580
       BETA=FLOAT(I1MACH(10))                                           BADE0600
       ONOVBE=1.0/BETA                                                  BADE0620
       ISIGN=INTER+N-1                                                  BADE0640
       DETMAN=IN(ISIGN)*ONOVBE                                          BADE0660
       IDETEX=1                                                         BADE0680
       DO 10 I=1,N                                                      BADE0700
          CALL UMKFL(A(1,I),E,S)                                        BADE0720
          DETMAN=DETMAN*S                                               BADE0740
          IDETEX=IDETEX+E                                               BADE0760
          IF (ABS(DETMAN).GE.ONOVBE) GO TO 10                           BADE0780
             IDETEX=IDETEX-1                                            BADE0800
             DETMAN=DETMAN*BETA                                         BADE0820
   10   CONTINUE                                                        BADE0840
        CALL ISTKRL(2)                                                  BADE0860
        RETURN                                                          BADE0880
        END                                                             BADE0900
C$TEST LBAN                                                             LBAN0000
C***********************************************************************LBAN0020
C                                                                       LBAN0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BABS                              LBAN0060
C                                                                       LBAN0080
C***********************************************************************LBAN0100
      INTEGER N, I, IWRITE, I1MACH                                      LBAN0120
      REAL G(3, 200), EVEC(100)                                         LBAN0140
      N=10                                                              LBAN0160
      DO 10 I=1,N                                                       LBAN0180
         G(1,I)=-1.0                                                    LBAN0200
         G(2,I)=1.0                                                     LBAN0220
         G(3,I)=-1.0                                                    LBAN0240
 10   CONTINUE                                                          LBAN0260
      G(2,1)=-.75                                                       LBAN0280
      G(2,N)=-.75                                                       LBAN0300
      G(3,1)=-.5                                                        LBAN0320
      G(1,2)=-.5                                                        LBAN0340
      G(1,N)=-.5                                                        LBAN0360
      G(3,N-1)=-.5                                                      LBAN0380
      IWRITE=I1MACH(2)                                                  LBAN0400
      CALL EIGVEC(N,3,2,G,3,-1.0,EVEC,2)                                LBAN0420
      DO 20 I=1,N                                                       LBAN0440
         WRITE(IWRITE,21)EVEC(I)                                        LBAN0460
 20   CONTINUE                                                          LBAN0480
 21   FORMAT(12H EIGENVECTOR,F16.8)                                     LBAN0500
      STOP                                                              LBAN0520
      END                                                               LBAN0540
      SUBROUTINE EIGVEC(N,M,ML,G,IG,EVAL,EVEC,LIMIT)                    EIGV0000
C                                                                       EIGV0020
C GIVEN A BANDED MATRIX PACKED INTO G WITH                              EIGV0040
C N ROWS, M NONZERO DIAGONALS AND ML NONZERO DIAGONALS                  EIGV0060
C ON AND BELOW THE DIAGONAL AND GIVEN AN EIGENVALUE OF THE              EIGV0080
C MATRIX IN EVAL, THIS SUBROUTINE USES INVERSE ITERATION TO             EIGV0100
C DETERMINE THE CORRESPONDING EIGENVECTOR AND RETURNS IT                EIGV0120
C IN EVEC.                                                              EIGV0140
C LIMIT IS A BOUND ON THE NUMBER OF ITERATIONS                          EIGV0160
C                                                                       EIGV0180
      INTEGER N, M, ML, IG, LIMIT                                       EIGV0200
      INTEGER I, JAL, ISTKGT, JINTER, JX, MU, IERR, NERROR              EIGV0220
      INTEGER LIM, JJ, ISAMAX, JXI, IST(1000)                           EIGV0240
      REAL G(IG, N), EVEC(N), EVAL                                      EIGV0260
      REAL SIZE, R1MACH, EPS, SC, BET, D1, SC2, ABS                     EIGV0280
      REAL R(1000)                                                      EIGV0300
      DOUBLE PRECISION D(500)                                           EIGV0320
      COMMON /CSTAK/ D                                                  EIGV0340
      EQUIVALENCE (D(1),IST(1)),(R(1),D(1))                             EIGV0360
      CALL ENTER(1)                                                     EIGV0380
C DETERMINE ITERATION TOLERANCE                                         EIGV0400
      SIZE = BANM(N,ML,M,G,IG)                                          EIGV0420
      EPS=SIZE*R1MACH(4)                                                EIGV0440
C SUBTRACT EIGENVALUE FROM DIAGONAL OF G                                EIGV0460
      DO 10 I=1,N                                                       EIGV0480
         G(ML,I)=G(ML,I) - EVAL                                         EIGV0500
 10   CONTINUE                                                          EIGV0520
C GET SPACE FROM STACK FOR AL,INTER, AND SCRATCH VECTOR                 EIGV0540
      JAL =ISTKGT(N*(ML-1),3)                                           EIGV0560
      JINTER=ISTKGT(N,2)                                                EIGV0580
      JX=ISTKGT(N,3)                                                    EIGV0600
C GET LU DECOMPOSITION OF MATRIX                                        EIGV0620
      CALL BALU(N,ML,M,G,IG,R(JAL),ML-1,IST(JINTER),MU,EPS)             EIGV0640
C OBTAIN INITIAL RIGHT HAND SIDE                                        EIGV0660
      IF (NERROR(IERR).NE.0) CALL ERROFF                                EIGV0680
      DO 20 I=1,N                                                       EIGV0700
         EVEC(I)=1.0                                                    EIGV0720
 20   CONTINUE                                                          EIGV0740
      CALL BABS(N,G,IG,EVEC,N,1,MU)                                     EIGV0760
      LIM=0                                                             EIGV0780
      JJ=ISAMAX(N,EVEC,1)                                               EIGV0800
      SC=1.0/EVEC(JJ)                                                   EIGV0820
C SCALE FIRST RHS TO HAVE INFINITY NORM OF 1                            EIGV0840
      CALL SSCAL(N,SC,EVEC,1)                                           EIGV0860
C ITERATIVE PHASE BEGINS HERE                                           EIGV0880
 30   LIM=LIM+1                                                         EIGV0900
C MAKE A COPY OF OLD APPROXIMATION                                      EIGV0920
      CALL MOVEFR(N,EVEC,R(JX))                                         EIGV0940
C GET NEW APPROXIMATION OF EIGNVECTOR                                   EIGV0960
      CALL BAFS(N,ML,R(JAL),ML-1,IST(JINTER),EVEC,N,1)                  EIGV0980
      CALL BABS(N,G,IG,EVEC,N,1,MU)                                     EIGV1000
      BET=1.0/EVEC(JJ)                                                  EIGV1020
      JJ=ISAMAX(N,EVEC,1)                                               EIGV1040
      SC2=1.0/EVEC(JJ)                                                  EIGV1060
C COMPUTE CONVERGENCE CRITERIA                                          EIGV1080
      D1=0.0                                                            EIGV1100
      DO 40 I=1,N                                                       EIGV1120
         JXI=JX-1+I                                                     EIGV1140
         D1=AMAX1(D1,ABS((R(JXI)-BET*EVEC(I))*SC2))                     EIGV1160
 40   CONTINUE                                                          EIGV1180
      SC=SC2                                                            EIGV1200
      CALL SSCAL(N,SC,EVEC,1)                                           EIGV1220
C TEST FOR CONVERGENCE AND IF ITERATION LIMIT EXCEEDED                  EIGV1240
      IF (D1.GT.EPS.AND.LIM.LT.LIMIT) GO TO 30                          EIGV1260
      CALL LEAVE                                                        EIGV1280
      RETURN                                                            EIGV1300
      END                                                               EIGV1320
C$TEST LBAP                                                             LBAP0000
C***********************************************************************LBAP0020
C                                                                       LBAP0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BAML                              LBAP0060
C                                                                       LBAP0080
C***********************************************************************LBAP0100
         INTEGER IG, M, ML, N, I, IWRITE, I1MACH                        LBAP0120
         REAL G(5,20), X(20), B(20), UNI, ERR, SASUM, ABS, COND         LBAP0140
         IG=5                                                           LBAP0160
         M=5                                                            LBAP0180
         N=10                                                           LBAP0200
         ML=3                                                           LBAP0220
C                                                                       LBAP0240
C CONSTRUCT THE A MATRIX AND PACK IT INTO G                             LBAP0260
C                                                                       LBAP0280
          DO 10 I=1,N                                                   LBAP0300
             G(1,I)=2.0                                                 LBAP0320
             G(2,I)=1.0                                                 LBAP0340
             G(3,I)=0.0                                                 LBAP0360
             G(4,I)=1.0                                                 LBAP0380
             G(5,I)=2.0                                                 LBAP0400
  10      CONTINUE                                                      LBAP0420
C                                                                       LBAP0440
C CONSTRUCT A RANDOM VECTOR                                             LBAP0460
C                                                                       LBAP0480
          DO 20 I=1,N                                                   LBAP0500
             X(I)=UNI(0)                                                LBAP0520
  20      CONTINUE                                                      LBAP0540
C                                                                       LBAP0560
C CONSTRUCT B=AX                                                        LBAP0580
C                                                                       LBAP0600
          CALL BAML(N,ML,M,G,IG,X,B)                                    LBAP0620
C                                                                       LBAP0640
C SOLVE THE SYSTEM AX=B                                                 LBAP0660
C                                                                       LBAP0680
          CALL BASS(N,ML,M,G,IG,B,N,1,COND)                             LBAP0700
C                                                                       LBAP0720
C PRINT OUT THE TRUE SOLUTION AND THE COMPUTED SOLUTION                 LBAP0740
C                                                                       LBAP0760
          IWRITE=I1MACH(2)                                              LBAP0780
          WRITE(IWRITE,21)                                              LBAP0800
  21      FORMAT(34H TRUE SOLUTION   COMPUTED SOLUTION)                 LBAP0820
          WRITE(IWRITE,22)(X(I),B(I),I=1,N)                             LBAP0840
  22      FORMAT(1H ,2E17.8)                                            LBAP0860
C                                                                       LBAP0880
C COMPUTE THE RELATIVE ERROR                                            LBAP0900
C                                                                       LBAP0920
          ERR=0.0                                                       LBAP0940
          DO 30 I=1,N                                                   LBAP0960
             ERR=ERR+ABS(B(I)-X(I))                                     LBAP0980
  30      CONTINUE                                                      LBAP1000
          ERR=ERR/SASUM(N,X,1)                                          LBAP1020
          WRITE(IWRITE,31)ERR                                           LBAP1040
  31      FORMAT(19H RELATIVE ERROR IS ,1PE15.7)                        LBAP1060
          WRITE(IWRITE,32)COND                                          LBAP1080
  32      FORMAT(20H CONDITION NUMBER IS,1PE15.7)                       LBAP1100
          STOP                                                          LBAP1120
          END                                                           LBAP1140
C$TEST LPSA                                                             LPSA0000
C***********************************************************************LPSA0020
C                                                                       LPSA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BPSS                              LPSA0060
C                                                                       LPSA0080
C***********************************************************************LPSA0100
       INTEGER N, K, I, IWRITE, I1MACH, MU                              LPSA0120
       REAL G(2,100), B(200)                                            LPSA0140
       REAL X, COND, ERR, AMAX1                                         LPSA0160
C CONSTRUCT MATRIX AND RIGHT-HAND SIDE SO TRUE SOLUTION IS              LPSA0180
C COMPOSED ENTIRELY OF ONES                                             LPSA0200
       N=100                                                            LPSA0220
       X=1                                                              LPSA0240
       DO 30  K=1,3                                                     LPSA0260
          DO 10 I=1,N                                                   LPSA0280
             G(1,I)=2.0                                                 LPSA0300
             G(2,I)=-1.0                                                LPSA0320
             B(I)=0.0                                                   LPSA0340
  10      CONTINUE                                                      LPSA0360
          G(1,1)=1.0+X                                                  LPSA0380
          G(1,N)=1.0+X                                                  LPSA0400
          B(1)=X                                                        LPSA0420
          B(N)=X                                                        LPSA0440
C SOLVE THE SYSTEM                                                      LPSA0460
          MU=2                                                          LPSA0480
          CALL BPSS(N,MU,G,2,B,N,1,COND)                                LPSA0500
          IWRITE=I1MACH(2)                                              LPSA0520
          WRITE(IWRITE,11)X                                             LPSA0540
  11      FORMAT(/5H X IS,F15.7)                                        LPSA0560
          WRITE(IWRITE,12)COND                                          LPSA0580
  12      FORMAT(20H CONDITION NUMBER IS,1PE15.7)                       LPSA0600
C COMPUTE THE ERROR                                                     LPSA0620
          ERR=0.0                                                       LPSA0640
          DO 20 I=1,N                                                   LPSA0660
             ERR=AMAX1(ERR,ABS(B(I)-1.0))                               LPSA0680
  20      CONTINUE                                                      LPSA0700
          WRITE(IWRITE,21)ERR                                           LPSA0720
  21      FORMAT(22H FOR BPSS THE ERROR IS,F16.8)                       LPSA0740
          X=X/100.                                                      LPSA0760
  30   CONTINUE                                                         LPSA0780
       STOP                                                             LPSA0800
       END                                                              LPSA0820
C$TEST LPSB                                                             LPSB0000
C***********************************************************************LPSB0020
C                                                                       LPSB0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BPCE                              LPSB0060
C                                                                       LPSB0080
C***********************************************************************LPSB0100
        INTEGER N, MU, IG, K, I, IWRITE, I1MACH, J                      LPSB0120
        REAL G(2,100), B(200)                                           LPSB0140
        REAL X, COND, AINVNO, AINORM, ABS                               LPSB0160
        N=100                                                           LPSB0180
        X=1.0                                                           LPSB0200
        MU=2                                                            LPSB0220
        IG=2                                                            LPSB0240
        DO 50 K=1,3                                                     LPSB0260
C CONSTRUCT MATRIX                                                      LPSB0280
            DO 10 I=1,N                                                 LPSB0300
               G(1,I)=2.0                                               LPSB0320
               G(2,I)=-1.0                                              LPSB0340
  10        CONTINUE                                                    LPSB0360
            G(1,1)=1.0+X                                                LPSB0380
            G(1,N)=1.0+X                                                LPSB0400
C GET ESTIMATE OF CONDITION NUMBER FROM BPCE                            LPSB0420
            CALL BPCE(N,MU,G,IG,COND)                                   LPSB0440
            IWRITE=I1MACH(2)                                            LPSB0460
            WRITE(IWRITE,11)X                                           LPSB0480
  11        FORMAT(/10H WHEN X IS,E14.6)                                LPSB0500
            WRITE(IWRITE,12)COND                                        LPSB0520
  12        FORMAT(25H CONDITION ESTIMATE IS   ,E15.8)                  LPSB0540
C SINCE CONDITION NUMBER IS NORM(A)*NORM(INVERSE(A)),                   LPSB0560
C FIND THE NORM OF EACH COLUMN OF INVERSE(A). GENERATE                  LPSB0580
C THE COLUMNS ONE AT A TIME AND REUSE SPACE                             LPSB0600
            AINVNO=0.0                                                  LPSB0620
            DO 40 I=1,N                                                 LPSB0640
C GENERATE ITH COLUMN OF IDENTITY MATRIX AS RIGHT HAND SIDE             LPSB0660
                DO 20 J=1,N                                             LPSB0680
                   B(J)=0.0                                             LPSB0700
  20            CONTINUE                                                LPSB0720
                B(I)=1.0                                                LPSB0740
C SOLVE AX=B TO GET ITH COLUMN OF A(INVERSE)                            LPSB0760
                CALL BPFS(N,MU,G,IG,B,N,1)                              LPSB0780
                CALL BPBS(N,MU,G,IG,B,N,1)                              LPSB0800
C FIND NORM OF COLUMN                                                   LPSB0820
                AINORM=0.0                                              LPSB0840
                DO 30 J=1,N                                             LPSB0860
                   AINORM=AINORM+ABS(B(J))                              LPSB0880
  30            CONTINUE                                                LPSB0900
                IF(AINVNO.LT.AINORM)AINVNO=AINORM                       LPSB0920
  40        CONTINUE                                                    LPSB0940
            COND=4.0*AINVNO                                             LPSB0960
            WRITE(IWRITE,41)COND                                        LPSB0980
  41        FORMAT(25H TRUE CONDITION NUMBER IS,E15.8)                  LPSB1000
            X=X/100.0                                                   LPSB1020
  50     CONTINUE                                                       LPSB1040
         STOP                                                           LPSB1060
         END                                                            LPSB1080
C$TEST LPSF                                                             LPSF0000
C***********************************************************************LPSF0020
C                                                                       LPSF0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BPLE                              LPSF0060
C                                                                       LPSF0080
C***********************************************************************LPSF0100
           INTEGER IG, N, MU, MLM1, I, KBLOK, KK, J                     LPSF0120
           INTEGER IWRITE, I1MACH                                       LPSF0140
           REAL G(11,100), B(100), X(100)                               LPSF0160
           REAL ERR, AMAX1                                              LPSF0180
           IG=11                                                        LPSF0200
           N=100                                                        LPSF0220
           MU=11                                                        LPSF0240
C                                                                       LPSF0260
C SET UP MATRIX FOR ELLIPTIC PDE IN 2 DIMENSIONS                        LPSF0280
C                                                                       LPSF0300
           MLM1=MU-1                                                    LPSF0320
           I=0                                                          LPSF0340
           DO 30 KBLOK=1,MLM1                                           LPSF0360
              DO 20 KK=1,MLM1                                           LPSF0380
                 I=I+1                                                  LPSF0400
                 G(1,I)=4.0                                             LPSF0420
                 G(2,I)=-1.0                                            LPSF0440
                 DO 10 J=3,MLM1                                         LPSF0460
                    G(J,I)=0.0                                          LPSF0480
   10            CONTINUE                                               LPSF0500
                 G(MU,I)=-1.0                                           LPSF0520
   20         CONTINUE                                                  LPSF0540
              G(2,I)=0.0                                                LPSF0560
   30      CONTINUE                                                     LPSF0580
C                                                                       LPSF0600
C SET UP RIGHT HAND SIDE SO SOLUTION IS ALL 1'S                         LPSF0620
C                                                                       LPSF0640
           DO 40 I=1,N                                                  LPSF0660
              X(I)=1.0                                                  LPSF0680
  40       CONTINUE                                                     LPSF0700
           CALL BPML(N,MU,G,IG,X,B)                                     LPSF0720
C                                                                       LPSF0740
C SOLVE THE SYSTEM                                                      LPSF0760
C                                                                       LPSF0780
           CALL BPLE(N,MU,G,IG,B,100,1)                                 LPSF0800
C                                                                       LPSF0820
C COMPUTE THE ERROR                                                     LPSF0840
C                                                                       LPSF0860
           ERR=0.0                                                      LPSF0880
           DO 50 I=1,N                                                  LPSF0900
              ERR=AMAX1(ERR,ABS(B(I)-1.0))                              LPSF0920
  50       CONTINUE                                                     LPSF0940
           IWRITE=I1MACH(2)                                             LPSF0960
           WRITE(IWRITE,51)ERR                                          LPSF0980
  51       FORMAT(31H ERROR IN SOLUTION FROM BPLE IS,F15.8)             LPSF1000
           STOP                                                         LPSF1020
           END                                                          LPSF1040
C$TEST LPSG                                                             LPSG0000
C***********************************************************************LPSG0020
C                                                                       LPSG0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BPDC                              LPSG0060
C                                                                       LPSG0080
C***********************************************************************LPSG0100
       INTEGER IG, MLM1, IWRITE, I1MACH, K, N, MU                       LPSG0120
       INTEGER NBLOK, KBLOK, KK, I, J, IT, ILAPSZ, IT2                  LPSG0140
       REAL G(17, 100), G2(17, 100), G3(17, 100)                        LPSG0160
       REAL COND                                                        LPSG0180
       IG=17                                                            LPSG0200
       MLM1=4                                                           LPSG0220
       IWRITE=I1MACH(2)                                                 LPSG0240
       DO 70  K=1,3                                                     LPSG0260
          DO 60 N=48,96,48                                              LPSG0280
             MU=MLM1+1                                                  LPSG0300
             I=0                                                        LPSG0320
             NBLOK=N/MLM1                                               LPSG0340
C                                                                       LPSG0360
C SET UP THREE MATRICES FOR ELLIPTIC PDE IN 2 DIMENSION                 LPSG0380
C                                                                       LPSG0400
             DO 30 KBLOK=1,NBLOK                                        LPSG0420
                DO 20 KK=1,MLM1                                         LPSG0440
                   I=I+1                                                LPSG0460
                   G(1,I)=4.0                                           LPSG0480
                   G(2,I)=-1.0                                          LPSG0500
                   G(MU,I)=-1.0                                         LPSG0520
                   DO 10 J=3,MLM1                                       LPSG0540
                      G(J,I)=0.0                                        LPSG0560
  10               CONTINUE                                             LPSG0580
  20            CONTINUE                                                LPSG0600
                G(2,I)=0.0                                              LPSG0620
  30         CONTINUE                                                   LPSG0640
             DO 50 I=1,N                                                LPSG0660
                DO 40 J=1,MU                                            LPSG0680
                   G2(J,I)=G(J,I)                                       LPSG0700
                   G3(J,I)=G(J,I)                                       LPSG0720
  40            CONTINUE                                                LPSG0740
  50         CONTINUE                                                   LPSG0760
             WRITE(IWRITE,51)N,MU                                       LPSG0780
  51         FORMAT(/6H N IS ,I4,30H ,NUMBER OF UPPER DIAGONALS IS,I3)  LPSG0800
C TIME DECOMPOSITION BY BPLD                                            LPSG0820
             IT=ILAPSZ(0)                                               LPSG0840
             CALL BPLD(N,MU,G,IG,0.0)                                   LPSG0860
             IT=ILAPSZ(0)-IT                                            LPSG0880
             WRITE(IWRITE,52)IT                                         LPSG0900
  52         FORMAT(14H TIME FOR BPLD,I7)                               LPSG0920
C TIME DECOMPOSITION BY BPDC                                            LPSG0940
             IT2=ILAPSZ(0)                                              LPSG0960
             CALL BPDC(N,MU,G2,IG)                                      LPSG0980
             IT2=ILAPSZ(0)-IT2                                          LPSG1000
             WRITE(IWRITE,53)IT2                                        LPSG1020
  53         FORMAT(14H TIME FOR BPDC,I7)                               LPSG1040
C TIME DECOMPOSITION BY BPCE                                            LPSG1060
             IT3=ILAPSZ(0)                                              LPSG1080
             CALL BPCE(N,MU,G3,IG,COND)                                 LPSG1100
             IT3=ILAPSZ(0)-IT3                                          LPSG1120
             WRITE(IWRITE,54)IT3                                        LPSG1140
  54         FORMAT(14H TIME FOR BPCE,I7)                               LPSG1160
  60     CONTINUE                                                       LPSG1180
         MLM1=MLM1*2                                                    LPSG1200
  70  CONTINUE                                                          LPSG1220
      STOP                                                              LPSG1240
      END                                                               LPSG1260
      INTEGER FUNCTION ILAPSZ(N)                                        ILAP0000
      INTEGER N                                                         ILAP0020
      ILAPSZ = 0                                                        ILAP0040
      RETURN                                                            ILAP0060
      END                                                               ILAP0080
C$TEST LPSJ                                                             LPSJ0000
C***********************************************************************LPSJ0020
C                                                                       LPSJ0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BPLD                              LPSJ0060
C                                                                       LPSJ0080
C***********************************************************************LPSJ0100
       SUBROUTINE BPDET(N,MU,G,IG,DETMAN,IDETEX)                        BPDE0000
C                                                                       BPDE0020
C THIS SUBROUTINE COMPUTES THE DETERMINANT OF A                         BPDE0040
C BAND SYMMETRIC POSITIVE DEFINITE MATRIX STORED IN G.                  BPDE0060
C IT IS GIVEN BY DETMAN*BETA**IDETEX                                    BPDE0080
C WHERE BETA IS THE BASE OF THE MACHINE                                 BPDE0100
C AND DETMAN IS BETWEEN 1/BETA AND 1                                    BPDE0120
C                                                                       BPDE0140
       REAL G(IG,N),DETMAN                                              BPDE0160
       REAL ONOVBE,M                                                    BPDE0180
       INTEGER E                                                        BPDE0200
       INTEGER IDETEX                                                   BPDE0220
       CALL BPLD(N,MU,G,IG,0.0)                                         BPDE0240
C                                                                       BPDE0260
C THE DETERMINANT IS THE PRODUCT OF THE ELEMENTS OF ROW 1 OF G          BPDE0280
C WE TRY TO COMPUTE THIS PRODUCT IN A WAY THAT WILL                     BPDE0300
C AVOID UNDERFLOW AND OVERFLOW                                          BPDE0320
C                                                                       BPDE0340
       ONOVBE=1.0/FLOAT(I1MACH(10))                                     BPDE0360
       DETMAN=ONOVBE                                                    BPDE0380
       BETA=FLOAT(I1MACH(10))                                           BPDE0400
       IDETEX=1                                                         BPDE0420
       DO 10 I=1,N                                                      BPDE0440
           CALL UMKFL(G(1,I),E,M)                                       BPDE0460
           DETMAN=DETMAN*M                                              BPDE0480
           IDETEX=IDETEX+E                                              BPDE0500
           IF(DETMAN.GE.ONOVBE) GO TO 10                                BPDE0520
              IDETEX=IDETEX-1                                           BPDE0540
              DETMAN=DETMAN*BETA                                        BPDE0560
  10   CONTINUE                                                         BPDE0580
       RETURN                                                           BPDE0600
       END                                                              BPDE0620
C$TEST LPSK                                                             LPSK0000
C***********************************************************************LPSK0020
C                                                                       LPSK0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BPFS                              LPSK0060
C                                                                       LPSK0080
C***********************************************************************LPSK0100
       INTEGER N, ML, IG, NM1, K, I, IWRITE, I1MACH, IT, IEND, ITER     LPSK0120
       REAL G(2,100), B(200), R(200)                                    LPSK0140
       REAL X, ERR, AMAX1, RNORM, BNORM, R1MACH, ABS                    LPSK0160
       DOUBLE PRECISION DBLE                                            LPSK0180
C CONSTRUCT MATRIX AND RIGHT HAND SIDE SO TRUE SOLUTION IS              LPSK0200
C COMPOSED ENTIRELY OF 1S                                               LPSK0220
       N=100                                                            LPSK0240
       X=1                                                              LPSK0260
       ML=2                                                             LPSK0280
       IG=2                                                             LPSK0300
       NM1=N-1                                                          LPSK0320
       DO 90 K=1,3                                                      LPSK0340
          DO 10 I=1,N                                                   LPSK0360
             G(1,I)=2.0                                                 LPSK0380
             G(2,I)=-1.0                                                LPSK0400
             B(I)=0.0                                                   LPSK0420
  10      CONTINUE                                                      LPSK0440
          G(1,1)=1.0+X                                                  LPSK0460
          G(1,N)=1.0+X                                                  LPSK0480
          B(1)=X                                                        LPSK0500
          B(N)=X                                                        LPSK0520
C SOLVE THE SYSTEM                                                      LPSK0540
          CALL BPLE(N,ML,G,IG,B,N,1)                                    LPSK0560
          IWRITE=I1MACH(2)                                              LPSK0580
          WRITE(IWRITE,11)X                                             LPSK0600
  11      FORMAT(/5H X IS,F16.8)                                        LPSK0620
C COMPUTE THE ERROR                                                     LPSK0640
          ERR=0.0                                                       LPSK0660
          DO 20 I=1,N                                                   LPSK0680
             ERR=AMAX1(ERR,ABS(B(I)-1.0))                               LPSK0700
  20      CONTINUE                                                      LPSK0720
          WRITE(IWRITE,21)ERR                                           LPSK0740
  21      FORMAT(22H FOR BPLE THE ERROR IS,F16.8)                       LPSK0760
          IEND=I1MACH(11)*IFIX(R1MACH(5)/ALOG10(2.0)+1.0)               LPSK0780
C FIND THE NORM OF THE SOLUTION                                         LPSK0800
          BNORM=0.0                                                     LPSK0820
          DO 30 I=1,N                                                   LPSK0840
              BNORM=AMAX1(BNORM,ABS(B(I)))                              LPSK0860
  30      CONTINUE                                                      LPSK0880
C REFINE THE SOLUTION                                                   LPSK0900
          DO 60 ITER=1,IEND                                             LPSK0920
             IT=ITER                                                    LPSK0940
C COMPUTE THE RESIDUAL R=B-AX, IN DOUBLE PRECISION                      LPSK0960
             DO 40 I=2,NM1                                              LPSK0980
                R(I)=DBLE(B(I-1))+DBLE(B(I+1))-2.D0*DBLE(B(I))          LPSK1000
  40         CONTINUE                                                   LPSK1020
             R(1)=X+B(2)-DBLE(1.0+X)*DBLE(B(1))                         LPSK1040
             R(N)=X+B(N-1)-DBLE(1.+X)*DBLE(B(N))                        LPSK1060
C SOLVE A(DELTAX)=R                                                     LPSK1080
             CALL BPFS(N,ML,G,IG,R,N,1)                                 LPSK1100
             CALL BPBS(N,ML,G,IG,R,N,1)                                 LPSK1120
C DETERMINE NORM OF CORRECTION AND ADD IN CORRECTION                    LPSK1140
             RNORM=0.0                                                  LPSK1160
             DO 50 I=1,N                                                LPSK1180
                B(I)=B(I)+R(I)                                          LPSK1200
                RNORM=RNORM+ABS(R(I))                                   LPSK1220
  50         CONTINUE                                                   LPSK1240
             IF(RNORM.LT.R1MACH(4)*BNORM) GO TO 70                      LPSK1260
  60      CONTINUE                                                      LPSK1280
          WRITE(IWRITE,61)                                              LPSK1300
  61      FORMAT(18H REFINEMENT FAILED)                                 LPSK1320
C COMPUTE NEW ERROR                                                     LPSK1340
  70      ERR=0.0                                                       LPSK1360
          DO 80 I=1,N                                                   LPSK1380
             ERR=AMAX1(ERR,ABS(B(I)-1.0))                               LPSK1400
  80      CONTINUE                                                      LPSK1420
          WRITE(IWRITE,81)IT,ERR                                        LPSK1440
  81      FORMAT(24H ERROR AFTER REFINEMENT ,I4,3H IS,E14.7)            LPSK1460
          X=X/100.0                                                     LPSK1480
  90   CONTINUE                                                         LPSK1500
       STOP                                                             LPSK1520
       END                                                              LPSK1540
C$TEST LPSM                                                             LPSM0000
C***********************************************************************LPSM0020
C                                                                       LPSM0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BPML                              LPSM0060
C                                                                       LPSM0080
C***********************************************************************LPSM0100
         INTEGER IG, N, MU, I, IWRITE, I1MACH                           LPSM0120
         REAL G(3,20), X(20), B(20)                                     LPSM0140
         REAL UNI, ERR, COND, SASUM, ABS                                LPSM0160
         IG=3                                                           LPSM0180
         N=10                                                           LPSM0200
         MU=3                                                           LPSM0220
C                                                                       LPSM0240
C CONSTRUCT MATRIX A AND PACK IT INTO G                                 LPSM0260
C                                                                       LPSM0280
          DO 10 I=1,N                                                   LPSM0300
             G(1,I)=4.0                                                 LPSM0320
             G(2,I)=-1.0                                                LPSM0340
             G(3,I)=-1.0                                                LPSM0360
  10      CONTINUE                                                      LPSM0380
C                                                                       LPSM0400
C CONSTRUCT A RANDOM VECTOR                                             LPSM0420
C                                                                       LPSM0440
          DO 20 I=1,N                                                   LPSM0460
             X(I)=UNI(0)                                                LPSM0480
  20      CONTINUE                                                      LPSM0500
C                                                                       LPSM0520
C CONSTRUCT B=AX                                                        LPSM0540
C                                                                       LPSM0560
          CALL BPML(N,MU,G,IG,X,B)                                      LPSM0580
C                                                                       LPSM0600
C SOLVE THE SYSTEM AX=B                                                 LPSM0620
C                                                                       LPSM0640
          CALL BPSS(N,MU,G,IG,B,N,1,COND)                               LPSM0660
C                                                                       LPSM0680
C PRINT OUT THE TRUE SOLUTION AND THE COMPUTED SOLUTION                 LPSM0700
C                                                                       LPSM0720
          IWRITE=I1MACH(2)                                              LPSM0740
          WRITE(IWRITE,21)                                              LPSM0760
  21      FORMAT(34H TRUE SOLUTION   COMPUTED SOLUTION)                 LPSM0780
          WRITE(IWRITE,22)(X(I),B(I),I=1,N)                             LPSM0800
  22      FORMAT(1H ,2E16.8)                                            LPSM0820
          ERR=0.0                                                       LPSM0840
          DO 30 I=1,N                                                   LPSM0860
              ERR=ERR+ABS(B(I)-X(I))                                    LPSM0880
  30      CONTINUE                                                      LPSM0900
          ERR=ERR/SASUM(N,X,1)                                          LPSM0920
          WRITE(IWRITE,31)ERR                                           LPSM0940
  31      FORMAT(19H RELATIVE ERROR IS ,1PE15.7)                        LPSM0960
          WRITE(IWRITE,32)COND                                          LPSM0980
  32      FORMAT(20H CONDITION NUMBER IS,1PE15.7)                       LPSM1000
          STOP                                                          LPSM1020
          END                                                           LPSM1040
C$TEST QBLC                                                             QBLC0000
C***********************************************************************QBLC0020
C                                                                       QBLC0040
C  EXAMPLE OF USE OF THE PORT PROGRAM BQUAD                             QBLC0060
C                                                                       QBLC0080
C***********************************************************************QBLC0100
      INTEGER NCALL,IWRITE,I1MACH                                       QBLC0120
      REAL SFUNC,X(3),ANS,ERREST,TRUERR                                 QBLC0140
      EXTERNAL SFUNC                                                    QBLC0160
      COMMON/COUNT/NCALL                                                QBLC0180
      NCALL=0                                                           QBLC0200
      X(1) = -1.0E0                                                     QBLC0220
      X(2) =   0.0E0                                                    QBLC0240
      X(3) = +1.0E0                                                     QBLC0260
C                                                                       QBLC0280
C  BQUAD WILL TAKE INTO ACCOUNT THE BREAK AT X=0                        QBLC0300
C                                                                       QBLC0320
      CALL BQUAD (SFUNC,3,X,1.E-6,ANS,ERREST)                           QBLC0340
      TRUERR=EXP(1.E0) - ANS                                            QBLC0360
      IWRITE=I1MACH(2)                                                  QBLC0380
      WRITE(IWRITE, 99) ANS, ERREST, TRUERR, NCALL                      QBLC0400
  99   FORMAT(1X,4HANS=,1PE15.7,10H   ERREST=,1PE12.3,                  QBLC0420
     1     10H   TRUERR=,1PE12.3/1X,6HNCALL=,I4)                        QBLC0440
      STOP                                                              QBLC0460
      END                                                               QBLC0480
      REAL FUNCTION SFUNC(X)                                            SFUN0000
      REAL X                                                            SFUN0020
      COMMON/COUNT/NCALL                                                SFUN0040
      NCALL = NCALL+1                                                   SFUN0060
      SFUNC = AMAX1(1.E0, EXP(X))                                       SFUN0080
      RETURN                                                            SFUN0100
      END                                                               SFUN0120
C$TEST CSPA                                                             CSPA0000
C***********************************************************************CSPA0020
C                                                                       CSPA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM CSPQU                             CSPA0060
C                                                                       CSPA0080
C***********************************************************************CSPA0100
      INTEGER NPTS,J,IWRITE,I1MACH                                      CSPA0120
      REAL PI,X(65),Y(65),ANS,ZZI                                       CSPA0140
      PI=3.14159265                                                     CSPA0160
C                                                                       CSPA0180
      NPTS=9                                                            CSPA0200
C                                                                       CSPA0220
C COMPUTE THE POINTS AT WHICH THE SPLINE IS TO BE FITTED                CSPA0240
C                                                                       CSPA0260
      DO 10 J=1,NPTS                                                    CSPA0280
      X(J)=FLOAT(J-1)/FLOAT(NPTS-1)                                     CSPA0300
      Y(J)=SIN(X(J)*PI/2.)                                              CSPA0320
   10 CONTINUE                                                          CSPA0340
C                                                                       CSPA0360
C THE INTEGRATION:                                                      CSPA0380
C                                                                       CSPA0400
      CALL CSPQU(X,Y,NPTS,X(1),X(NPTS),ANS)                             CSPA0420
C                                                                       CSPA0440
C ERROR IN INTEGRATION                                                  CSPA0460
C                                                                       CSPA0480
      ZZI=ANS-2./PI                                                     CSPA0500
C                                                                       CSPA0520
C                                                                       CSPA0540
C SET THE OUTPUT UNIT                                                   CSPA0560
C                                                                       CSPA0580
      IWRITE=I1MACH(2)                                                  CSPA0600
C                                                                       CSPA0620
      WRITE (IWRITE,9998) ANS                                           CSPA0640
 9998 FORMAT(48H THE INTEGRAL OF SINE(X*PI/2) FROM X=0 TO X=1 IS,E16.8) CSPA0660
C                                                                       CSPA0680
      WRITE (IWRITE,9999) ZZI                                           CSPA0700
 9999 FORMAT(17H WITH AN ERROR OF,1PE10.2)                              CSPA0720
C                                                                       CSPA0740
      STOP                                                              CSPA0760
      END                                                               CSPA0780
C$TEST QODD                                                             QODD0000
C***********************************************************************QODD0020
C                                                                       QODD0040
C  EXAMPLE OF USE OF THE PORT PROGRAM DODEQ                             QODD0060
C                                                                       QODD0080
C***********************************************************************QODD0100
C                                                                       QODD0120
      EXTERNAL F                                                        QODD0140
C                                                                       QODD0160
      INTEGER I1MACH,K,IWRITE                                           QODD0180
      DOUBLE PRECISION TWOPI,EM1,ANS(10),EPS                            QODD0200
      DOUBLE PRECISION CHK1,CHK2,DK,DTEMP                               QODD0220
      DOUBLE PRECISION DATAN, DEXP, DSIN, DCOSP                         QODD0240
C                                                                       QODD0260
C  INITIALIZE 2*PI AND EXP - 1                                          QODD0280
C                                                                       QODD0300
      TWOPI = 8.0D0*DATAN(1.0D0)                                        QODD0320
      EM1 = DEXP(1.0D0) - 1.0D0                                         QODD0340
C                                                                       QODD0360
C  SET OUTPUT WRITE UNIT                                                QODD0380
C                                                                       QODD0400
      IWRITE = I1MACH(2)                                                QODD0420
C                                                                       QODD0440
C  SET ACCURACY PARAMETER                                               QODD0460
C                                                                       QODD0480
      EPS = 1.0D-10                                                     QODD0500
C                                                                       QODD0520
      WRITE(IWRITE,97) EPS                                              QODD0540
 97   FORMAT(11H FOR EPS = ,1PD10.2,21H THE COEFFICIENTS ARE)           QODD0560
      WRITE(IWRITE,98)                                                  QODD0580
 98   FORMAT(/7X,1HK,11X,9HSIN COEFF,16X,9HCOS COEFF,10X,9HMAX ERROR)   QODD0600
C                                                                       QODD0620
      CALL DODEQ(10,F,0.0D0,1.0D0,EPS,ANS)                              QODD0640
C                                                                       QODD0660
      DO 10 K=1,5                                                       QODD0680
      DK=K                                                              QODD0700
      DTEMP = 1.D0 + (TWOPI*DK)**2                                      QODD0720
      CHK1 = TWOPI*DK*(-EM1)/DTEMP - ANS(2*K-1)                         QODD0740
      CHK2 = EM1/DTEMP - ANS(2*K)                                       QODD0760
C                                                                       QODD0780
      DTEMP = DMAX1( DABS(CHK1), DABS(CHK2) )                           QODD0800
C                                                                       QODD0820
 10   WRITE(IWRITE,99) K, ANS(2*K-1), ANS(2*K), DTEMP                   QODD0840
 99   FORMAT (1H0,2X,I5,2D25.14,1PD15.4)                                QODD0860
      STOP                                                              QODD0880
      END                                                               QODD0900
      SUBROUTINE F(X,Y,N,FVAL)                                          F   0000
C                                                                       F   0020
      INTEGER J, N                                                      F   0040
      DOUBLE PRECISION TWOPI,X,Y,EXPX,ANGL,FVAL(10)                     F   0060
C                                                                       F   0080
C  INITIALIZE 2*PI AND E**X                                             F   0100
C                                                                       F   0120
      TWOPI = 8.0D0*DATAN(1.0D0)                                        F   0140
      EXPX = DEXP(X)                                                    F   0160
C                                                                       F   0180
C  COMPUTE THE TWO INTEGRANDS, E**X * SIN AND E**X * COS,               F   0200
C                                                                       F   0220
      DO 20 J=1,5                                                       F   0240
         ANGL   = J                                                     F   0260
         ANGL   = TWOPI*ANGL*X                                          F   0280
         FVAL(2*J-1)   = EXPX*DSIN(ANGL)                                F   0300
  20     FVAL(2*J)     = EXPX*DCOS(ANGL)                                F   0320
C                                                                       F   0340
      RETURN                                                            F   0360
      END                                                               F   0380
C$TEST QGSG                                                             QGSG0000
C***********************************************************************QGSG0020
C                                                                       QGSG0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GQ1                               QGSG0060
C                                                                       QGSG0080
C***********************************************************************QGSG0100
      REAL X(5),W(5),CALC,TRUE,ERR                                      QGSG0120
C                                                                       QGSG0140
      CALL  GQ1(5,X,W)                                                  QGSG0160
      IWRITE=I1MACH(2)                                                  QGSG0180
      WRITE(IWRITE,30)                                                  QGSG0200
      DO 10 J=1,5                                                       QGSG0220
   10    WRITE(IWRITE,40) J, X(J),W(J)                                  QGSG0240
      CALC = 0.E0                                                       QGSG0260
      DO 20 J=1,5                                                       QGSG0280
   20    CALC = CALC+W(J)*(1.0/(2.0+X(J)))                              QGSG0300
      TRUE = ALOG(3.E0)                                                 QGSG0320
      ERR  = TRUE-CALC                                                  QGSG0340
      WRITE(IWRITE,50) TRUE,CALC,ERR                                    QGSG0360
      STOP                                                              QGSG0380
   30 FORMAT(///13H TEST OF  GQ1//30H0ABSCISSAS AND WEIGHTS FOR N=5)    QGSG0400
   40 FORMAT(I4,0P2E16.7)                                               QGSG0420
   50 FORMAT(15H0SAMPLE PROBLEM/6H TRUE=,1PE16.7/                       QGSG0440
     X   6H CALC=,1PE16.7/6H ERR =,1PE11.2)                             QGSG0460
      END                                                               QGSG0480
C$TEST QGSH                                                             QGSH0000
C***********************************************************************QGSH0020
C                                                                       QGSH0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GQEX                              QGSH0060
C                                                                       QGSH0080
C***********************************************************************QGSH0100
      REAL X(5),W(5),CALC,TRUE,PI,ERR                                   QGSH0120
C                                                                       QGSH0140
      CALL  GQEX(5,X,W)                                                 QGSH0160
      IWRITE=I1MACH(2)                                                  QGSH0180
      WRITE(IWRITE,30)                                                  QGSH0200
      DO 10 J=1,5                                                       QGSH0220
   10    WRITE(IWRITE,40) J, X(J),W(J)                                  QGSH0240
      CALC = 0.E0                                                       QGSH0260
      DO 20 J=1,5                                                       QGSH0280
   20    CALC = CALC+W(J)*X(J)/(1.0 - EXP(-X(J)))                       QGSH0300
      PI   = 2.E0*ATAN2(1.E0,0.E0)                                      QGSH0320
      TRUE = PI**2/6.E0                                                 QGSH0340
      ERR  = TRUE - CALC                                                QGSH0360
      WRITE(IWRITE,50) TRUE,CALC,ERR                                    QGSH0380
      STOP                                                              QGSH0400
   30 FORMAT(///14H TEST OF  GQEX//30H0ABSCISSAS AND WEIGHTS FOR N=5)   QGSH0420
   40 FORMAT(I4,0P2E16.7)                                               QGSH0440
   50 FORMAT(15H0SAMPLE PROBLEM/6H TRUE=,1PE16.7/                       QGSH0460
     X   6H CALC=,1PE16.7/6H ERR =,1PE11.2)                             QGSH0480
      END                                                               QGSH0500
C$TEST QGSJ                                                             QGSJ0000
C***********************************************************************QGSJ0020
C                                                                       QGSJ0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GQEX2                             QGSJ0060
C                                                                       QGSJ0080
C***********************************************************************QGSJ0100
      REAL X(5),W(5),FEX2,CALC,TRUE,PI,ERR                              QGSJ0120
C                                                                       QGSJ0140
      CALL  GQEX2(5,X,W)                                                QGSJ0160
      IWRITE=I1MACH(2)                                                  QGSJ0180
      WRITE(IWRITE,1)                                                   QGSJ0200
      DO 10 J=1,5                                                       QGSJ0220
   10    WRITE(IWRITE,2) J, X(J),W(J)                                   QGSJ0240
      CALC=0.E0                                                         QGSJ0260
      DO 20 J=1,5                                                       QGSJ0280
   20    CALC=CALC+W(J)*FEX2(X(J))                                      QGSJ0300
      PI=2.E0*ATAN2(1.E0,0.E0)                                          QGSJ0320
      TRUE=SQRT(PI)*EXP(-.25E0)                                         QGSJ0340
      ERR=TRUE - CALC                                                   QGSJ0360
      WRITE(IWRITE,3) TRUE,CALC,ERR                                     QGSJ0380
      STOP                                                              QGSJ0400
    1 FORMAT(///15H TEST OF  GQEX2//30H0ABSCISSAS AND WEIGHTS FOR N=5)  QGSJ0420
    2 FORMAT(I4,0P2E16.7)                                               QGSJ0440
    3 FORMAT(15H0SAMPLE PROBLEM/6H TRUE=,1PE16.7/                       QGSJ0460
     X   6H CALC=,1PE16.7/6H ERR =,1PE11.2)                             QGSJ0480
      END                                                               QGSJ0500
      REAL FUNCTION FEX2(X)                                             FEX20000
      REAL X                                                            FEX20020
      FEX2=COS(X)                                                       FEX20040
      RETURN                                                            FEX20060
      END                                                               FEX20080
C$TEST QGSM                                                             QGSM0000
C***********************************************************************QGSM0020
C                                                                       QGSM0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GQEXA                             QGSM0060
C                                                                       QGSM0080
C***********************************************************************QGSM0100
      REAL X(5),W(5),FEXA,CALC,TRUE,PI,ERR                              QGSM0120
C                                                                       QGSM0140
      CALL  GQEXA(5,-0.5E0,X,W)                                         QGSM0160
      IWRITE=I1MACH(2)                                                  QGSM0180
      WRITE(IWRITE,1)                                                   QGSM0200
      DO 10 J=1,5                                                       QGSM0220
   10    WRITE(IWRITE,2) J, X(J),W(J)                                   QGSM0240
      CALC = 0.E0                                                       QGSM0260
      DO 20 J=1,5                                                       QGSM0280
   20    CALC = CALC+W(J)*FEXA(X(J))                                    QGSM0300
      PI   = 2.E0*ATAN2(1.E0,0.E0)                                      QGSM0320
      TRUE = 0.5E0*SQRT(PI)*(1.E0-1.E0/SQRT(3.E0))                      QGSM0340
      ERR  = TRUE-CALC                                                  QGSM0360
      WRITE(IWRITE,3) TRUE,CALC,ERR                                     QGSM0380
      STOP                                                              QGSM0400
    1 FORMAT(///15H TEST OF  GQEXA//30H0ABSCISSAS AND WEIGHTS FOR N=5)  QGSM0420
    2 FORMAT(I4,0P2E16.7)                                               QGSM0440
    3 FORMAT(15H0SAMPLE PROBLEM/6H TRUE=,1PE16.7/                       QGSM0460
     X   6H CALC=,1PE16.7/6H ERR =,1PE11.2)                             QGSM0480
      END                                                               QGSM0500
      REAL FUNCTION FEXA(X)                                             FEXA0000
      REAL X                                                            FEXA0020
      FEXA=0.5E0*(1.E0-EXP(-2.E0*X))                                    FEXA0040
      RETURN                                                            FEXA0060
      END                                                               FEXA0080
C$TEST QGSP                                                             QGSP0000
C***********************************************************************QGSP0020
C                                                                       QGSP0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GQLOG                             QGSP0060
C                                                                       QGSP0080
C***********************************************************************QGSP0100
      REAL X(5),W(5),FLOG,CALC,TRUE,PI2,ERR                             QGSP0120
C                                                                       QGSP0140
      CALL  GQLOG(5,X,W)                                                QGSP0160
      IWRITE = I1MACH(2)                                                QGSP0180
      WRITE(IWRITE,1)                                                   QGSP0200
      DO 10 J = 1,5                                                     QGSP0220
   10    WRITE(IWRITE,2) J, X(J),W(J)                                   QGSP0240
      CALC = 0.E0                                                       QGSP0260
      DO 20 J = 1,5                                                     QGSP0280
   20    CALC = CALC+W(J)*FLOG(X(J))                                    QGSP0300
      PI2  = ATAN2(1.E0,0.E0)                                           QGSP0320
      TRUE = -(PI2**2/3.E0)                                             QGSP0340
      ERR  = TRUE - CALC                                                QGSP0360
      WRITE(IWRITE,3) TRUE,CALC,ERR                                     QGSP0380
      STOP                                                              QGSP0400
    1 FORMAT(///15H TEST OF  GQLOG//30H0ABSCISSAS AND WEIGHTS FOR N=5)  QGSP0420
    2 FORMAT(I4,0P2E16.7)                                               QGSP0440
    3 FORMAT(15H0SAMPLE PROBLEM/6H TRUE=,1PE16.7/                       QGSP0460
     X   6H CALC=,1PE16.7/6H ERR =,1PE11.2)                             QGSP0480
      END                                                               QGSP0500
      REAL FUNCTION FLOG(X)                                             FLOG0000
      REAL X                                                            FLOG0020
      FLOG = -1.E0/(1.E0+X)                                             FLOG0040
      RETURN                                                            FLOG0060
      END                                                               FLOG0080
C$TEST QGSR                                                             QGSR0000
C***********************************************************************QGSR0020
C                                                                       QGSR0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GQXA                              QGSR0060
C                                                                       QGSR0080
C***********************************************************************QGSR0100
      REAL X(5),W(5),FXA,CALC,TRUE,B(1),PI2,ERR                         QGSR0120
C                                                                       QGSR0140
      CALL  GQXA(5,-0.5E0,X,W)                                          QGSR0160
      IWRITE = I1MACH(2)                                                QGSR0180
      WRITE(IWRITE,1)                                                   QGSR0200
      DO 10 J=1,5                                                       QGSR0220
   10    WRITE(IWRITE,2) J, X(J),W(J)                                   QGSR0240
      CALC = 0.E0                                                       QGSR0260
      DO 20 J=1,5                                                       QGSR0280
   20    CALC = CALC+W(J)*FXA(X(J))                                     QGSR0300
      CALL BESRJ(1.E0,1,B)                                              QGSR0320
      PI2  = ATAN2(1.E0,0.E0)                                           QGSR0340
      TRUE = PI2*B(1)                                                   QGSR0360
      ERR  = TRUE-CALC                                                  QGSR0380
      WRITE(IWRITE,3) TRUE,CALC,ERR                                     QGSR0400
      STOP                                                              QGSR0420
    1 FORMAT(///14H TEST OF  GQXA//30H0ABSCISSAS AND WEIGHTS FOR N=5)   QGSR0440
    2 FORMAT(I4,0P2E16.7)                                               QGSR0460
    3 FORMAT(15H0SAMPLE PROBLEM/6H TRUE=,1PE16.7/                       QGSR0480
     X   6H CALC=,1PE16.7/6H ERR =,1PE11.2)                             QGSR0500
      END                                                               QGSR0520
      REAL FUNCTION FXA(X)                                              FXA 0000
      REAL X                                                            FXA 0020
      FXA=COS(1.E0-X)/SQRT(2.E0-X)                                      FXA 0040
      RETURN                                                            FXA 0060
      END                                                               FXA 0080
C$TEST QGST                                                             QGST0000
C***********************************************************************QGST0020
C                                                                       QGST0040
C  EXAMPLE OF USE OF THE PORT PROGRAM GQXAB                             QGST0060
C                                                                       QGST0080
C***********************************************************************QGST0100
      REAL X(5),W(5),FXAB,CALC,TRUE,PI,ERR                              QGST0120
C                                                                       QGST0140
      CALL  GQXAB(5,-0.5E0,0.5E0,X,W)                                   QGST0160
      IWRITE=I1MACH(2)                                                  QGST0180
      WRITE(IWRITE,1)                                                   QGST0200
      DO 10 J=1,5                                                       QGST0220
   10    WRITE(IWRITE,2) J, X(J),W(J)                                   QGST0240
      CALC = 0.E0                                                       QGST0260
      DO 20 J=1,5                                                       QGST0280
   20    CALC = CALC+W(J)*FXAB(X(J))                                    QGST0300
      PI   = 2.E0*ATAN2(1.E0,0.E0)                                      QGST0320
      TRUE = PI*(1.E0-1.E0/SQRT(3.E0))                                  QGST0340
      ERR  = TRUE - CALC                                                QGST0360
      WRITE(IWRITE,3) TRUE,CALC,ERR                                     QGST0380
      STOP                                                              QGST0400
    1 FORMAT(///15H TEST OF  GQXAB//30H0ABSCISSAS AND WEIGHTS FOR N=5)  QGST0420
    2 FORMAT(I4,0P2E16.7)                                               QGST0440
    3 FORMAT(15H0SAMPLE PROBLEM/6H TRUE=,1PE16.7/                       QGST0460
     X   6H CALC=,1PE16.7/6H ERR =,1PE11.2)                             QGST0480
      END                                                               QGST0500
      REAL FUNCTION FXAB(X)                                             FXAB0000
      REAL X                                                            FXAB0020
      FXAB = 1.E0/(2.E0+X)                                              FXAB0040
      RETURN                                                            FXAB0060
      END                                                               FXAB0080
C$TEST QBLG                                                             QBLG0000
C***********************************************************************QBLG0020
C                                                                       QBLG0040
C  EXAMPLE OF USE OF THE PORT PROGRAM QUAD                              QBLG0060
C                                                                       QBLG0080
C***********************************************************************QBLG0100
      EXTERNAL F                                                        QBLG0120
      COMMON /COUNTS/NMEVAL                                             QBLG0140
      INTEGER NMEVAL,IWRITE,I1MACH                                      QBLG0160
      REAL ERROR,RESULT                                                 QBLG0180
C                                                                       QBLG0200
C  INITIALIZE COUNT TO ZERO                                             QBLG0220
      NMEVAL = 0                                                        QBLG0240
C                                                                       QBLG0260
      CALL QUAD(F, 0.0, 1.0, 1.0E-4, RESULT, ERROR)                     QBLG0280
C                                                                       QBLG0300
      IWRITE = I1MACH(2)                                                QBLG0320
      WRITE (IWRITE, 10)                                                QBLG0340
   10 FORMAT(11X, 48H THE INTEGRAL OF X**0.5(LOGX) BETWEEN 0 AND 1 IS)  QBLG0360
      WRITE (IWRITE, 20) RESULT, ERROR                                  QBLG0380
   20 FORMAT(1H0,10X, E15.7, 21H WITH ESTIMATED ERROR, 1PE9.2)          QBLG0400
      WRITE (IWRITE, 30) NMEVAL                                         QBLG0420
   30 FORMAT(1H0, 14X,1H(,I2,38H FUNCTION EVALUATIONS WERE REQUIRED TO  QBLG0440
     1      /17X, 26H   PERFORM THE QUADRATURE) )                       QBLG0460
      STOP                                                              QBLG0480
      END                                                               QBLG0500
      REAL FUNCTION F(X)                                                F   0000
      COMMON /COUNTS/NMEVAL                                             F   0020
      INTEGER NMEVAL                                                    F   0040
      REAL X                                                            F   0060
C                                                                       F   0080
C  COMPUTE THE INTEGRAND                                                F   0100
      F = 0.0                                                           F   0120
      IF (X .NE. 0.0) F = SQRT(X)*ALOG(X)                               F   0140
C                                                                       F   0160
C  COUNT THE NUMBER OF TIMES F WAS CALLED                               F   0180
      NMEVAL = NMEVAL + 1                                               F   0200
      RETURN                                                            F   0220
      END                                                               F   0240
C$TEST QBLA                                                             QBLA0000
C***********************************************************************QBLA0020
C                                                                       QBLA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM RQUAD                             QBLA0060
C                                                                       QBLA0080
C***********************************************************************QBLA0100
      EXTERNAL F                                                        QBLA0120
      COMMON /COUNTS/NMEVAL                                             QBLA0140
      INTEGER NMEVAL,IWRITE,I1MACH                                      QBLA0160
      REAL F,RESULT,ERROR                                               QBLA0180
C                                                                       QBLA0200
C  INITIALIZE COUNT TO ZERO                                             QBLA0220
      NMEVAL = 0                                                        QBLA0240
C                                                                       QBLA0260
C  SET OUTPUT UNIT TO IWRITE                                            QBLA0280
      IWRITE = I1MACH(2)                                                QBLA0300
C                                                                       QBLA0320
      CALL RQUAD(F, 0.0, 1.0, 0.0, 1.0E-7, RESULT, ERROR)               QBLA0340
C                                                                       QBLA0360
      WRITE (IWRITE, 9996)                                              QBLA0380
 9996 FORMAT(13X, 42H THE INTEGRAL OF EXP(X) BETWEEN 0 AND 1 IS)        QBLA0400
      WRITE (IWRITE, 9997) RESULT, ERROR                                QBLA0420
 9997 FORMAT(1H0,11X, 1PE15.8, 20H WITH RELATIVE ERROR, 1PE9.2)         QBLA0440
      WRITE (IWRITE,9998) NMEVAL                                        QBLA0460
 9998 FORMAT(1H0, 13X,1H(,I2,38H FUNCTION EVALUATIONS WERE REQUIRED TO) QBLA0480
      WRITE (IWRITE,9999)                                               QBLA0500
 9999 FORMAT(17X, 26H   PERFORM THE QUADRATURE) )                       QBLA0520
      STOP                                                              QBLA0540
      END                                                               QBLA0560
      REAL FUNCTION F(X)                                                F   0000
      COMMON /COUNTS/NMEVAL                                             F   0020
      INTEGER NMEVAL                                                    F   0040
      REAL X                                                            F   0060
C                                                                       F   0080
C  COMPUTE THE INTEGRAND                                                F   0100
      F = EXP( X )                                                      F   0120
C                                                                       F   0140
C  COUNT THE NUMBER OF TIMES F WAS CALLED                               F   0160
      NMEVAL = NMEVAL + 1                                               F   0180
      RETURN                                                            F   0200
      END                                                               F   0220
C$TEST SPLF                                                             SPLF0000
C***********************************************************************SPLF0020
C                                                                       SPLF0040
C  EXAMPLE OF USE OF THE PORT PROGRAM SPLNI                             SPLF0060
C                                                                       SPLF0080
C***********************************************************************SPLF0100
      INTEGER K,I,N,IWRITE,I1MACH,NT                                    SPLF0120
      REAL X(51),Y(51),T(100),A(100),SINT,TINT                          SPLF0140
C                                                                       SPLF0160
      K = 4                                                             SPLF0180
C                                                                       SPLF0200
C MAKE THE ABSCISSAE FOR THE FIT.                                       SPLF0220
C                                                                       SPLF0240
      CALL UMD(0.0E0,3.14E0,51,X)                                       SPLF0260
C                                                                       SPLF0280
C MAKE THE DATA.                                                        SPLF0300
C                                                                       SPLF0320
      DO 1000 I = 1, 51                                                 SPLF0340
      Y(I) = SIN(X(I))                                                  SPLF0360
 1000 CONTINUE                                                          SPLF0380
C                                                                       SPLF0400
C MAKE THE MESH.                                                        SPLF0420
C                                                                       SPLF0440
      N = 2                                                             SPLF0460
C                                                                       SPLF0480
      CALL MNPB(X,51,N,K,T,NT)                                          SPLF0500
C                                                                       SPLF0520
C DO THE FIT.                                                           SPLF0540
C                                                                       SPLF0560
      CALL DL2SF(X,Y,51,K,T,NT,A)                                       SPLF0580
C                                                                       SPLF0600
C EVALUATE THE SPLINE INTEGRAL AND THE TRUE INTEGRAL.                   SPLF0620
C                                                                       SPLF0640
      CALL SPLNI(K,T,NT,A,T(NT),1,SINT)                                 SPLF0660
C                                                                       SPLF0680
      TINT = 1.0E0-COS(3.14E0)                                          SPLF0700
C                                                                       SPLF0720
      IWRITE = I1MACH(2)                                                SPLF0740
      WRITE(IWRITE,1003) SINT,TINT                                      SPLF0760
 1003 FORMAT(18H SPLINE INTEGRAL =,E20.8//                              SPLF0780
     1   18H TRUE INTEGRAL   =,E20.8)                                   SPLF0800
C                                                                       SPLF0820
      STOP                                                              SPLF0840
C                                                                       SPLF0860
      END                                                               SPLF0880
C$TEST CDEX                                                             CDEX0000
C***********************************************************************CDEX0020
C                                                                       CDEX0040
C  EXAMPLE OF USE OF THE PORT PROGRAM CDEXP                             CDEX0060
C                                                                       CDEX0080
C***********************************************************************CDEX0100
      DOUBLE PRECISION A(2),EXPON(2)                                    CDEX0120
      IWRITE = I1MACH(2)                                                CDEX0140
C                                                                       CDEX0160
      A(1) = 3.D0                                                       CDEX0180
      A(2) = -1.D0                                                      CDEX0200
      CALL CDEXP(A,EXPON)                                               CDEX0220
C                                                                       CDEX0240
      WRITE(IWRITE,9999) A, EXPON                                       CDEX0260
 9999 FORMAT (18H THE EXPONENTIAL (,1PD10.4,2H, ,1PD11.4,8H) IS    //   CDEX0280
     1           4H   (,2PD25.18,2H, ,2PD26.18,1H))                     CDEX0300
C                                                                       CDEX0320
      STOP                                                              CDEX0340
      END                                                               CDEX0360
C$TEST CDLG                                                             CDLG0000
C***********************************************************************CDLG0020
C                                                                       CDLG0040
C  EXAMPLE OF USE OF THE PORT PROGRAM CDLOG                             CDLG0060
C                                                                       CDLG0080
C***********************************************************************CDLG0100
      DOUBLE PRECISION A(2),LOG(2)                                      CDLG0120
      IWRITE = I1MACH(2)                                                CDLG0140
C                                                                       CDLG0160
      A(1) = 2.D0                                                       CDLG0180
      A(2) = -1.D0                                                      CDLG0200
      CALL CDLOG(A,LOG)                                                 CDLG0220
C                                                                       CDLG0240
      WRITE(IWRITE,9999) A, LOG                                         CDLG0260
 9999 FORMAT (13H THE LOG OF (,1PD10.4,2H, ,1PD11.4,8H) IS    //        CDLG0280
     1           4H   (,1PD24.18,2H, ,1PD25.18,1H))                     CDLG0300
C                                                                       CDLG0320
      STOP                                                              CDLG0340
      END                                                               CDLG0360
C$TEST CPLA                                                             CPLA0000
C***********************************************************************CPLA0020
C                                                                       CPLA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM CPOLY                             CPLA0060
C                                                                       CPLA0080
C***********************************************************************CPLA0100
      INTEGER IWRITE,I1MACH,K                                           CPLA0120
      REAL CR(4), CI(4), ZR(3), ZI(3)                                   CPLA0140
C                                                                       CPLA0160
      CR(1) = 2.0                                                       CPLA0180
      CI(1) = 0.0                                                       CPLA0200
C                                                                       CPLA0220
      CR(2) = -8.0                                                      CPLA0240
      CI(2) = 13.0                                                      CPLA0260
C                                                                       CPLA0280
      CR(3) = 3.0                                                       CPLA0300
      CI(3) = 74.0                                                      CPLA0320
C                                                                       CPLA0340
      CR(4) = 135.0                                                     CPLA0360
      CI(4) = 105.0                                                     CPLA0380
C                                                                       CPLA0400
      CALL CPOLY(3, CR, CI, ZR, ZI)                                     CPLA0420
C                                                                       CPLA0440
      IWRITE = I1MACH(2)                                                CPLA0460
      WRITE(IWRITE,99) (ZR(K),ZI(K),K = 1,3)                            CPLA0480
  99  FORMAT(1H ,1P2E15.7)                                              CPLA0500
C                                                                       CPLA0520
      STOP                                                              CPLA0540
      END                                                               CPLA0560
C$TEST RPAD                                                             RPAD0000
C***********************************************************************RPAD0020
C                                                                       RPAD0040
C  EXAMPLE OF USE OF THE PORT PROGRAM DRPOLY                            RPAD0060
C                                                                       RPAD0080
C***********************************************************************RPAD0100
       INTEGER IWRITE,I1MACH,K                                          RPAD0120
       DOUBLE PRECISION COEFF(6), ZR(5), ZI(5)                          RPAD0140
C                                                                       RPAD0160
      COEFF(1) = 8.D0                                                   RPAD0180
      COEFF(2) = -84.D0                                                 RPAD0200
      COEFF(3) = 9.D0                                                   RPAD0220
      COEFF(4) = - 589.D0                                               RPAD0240
      COEFF(5) = 331.D0                                                 RPAD0260
      COEFF(6) = -2915.D0                                               RPAD0280
C                                                                       RPAD0300
      CALL DRPOLY( 5, COEFF, ZR, ZI )                                   RPAD0320
C                                                                       RPAD0340
      IWRITE = I1MACH(2)                                                RPAD0360
      WRITE(IWRITE,99) (ZR(K),ZI(K),K = 1,5)                            RPAD0380
  99  FORMAT(1H0,1P2E27.18)                                             RPAD0400
      STOP                                                              RPAD0420
      END                                                               RPAD0440
C$TEST MLLR                                                             MLLR0000
C***********************************************************************MLLR0020
C                                                                       MLLR0040
C  EXAMPLE OF USE OF THE PORT PROGRAM MULLR                             MLLR0060
C                                                                       MLLR0080
C***********************************************************************MLLR0100
      INTEGER ITER, MAXITR, IWRITE                                      MLLR0120
      REAL EPSF, EPSZ                                                   MLLR0140
      COMPLEX MULLR, TESTF, Z1, Z2, Z3, ZANS                            MLLR0160
      COMPLEX CEXP, CSIN                                                MLLR0180
      EXTERNAL TESTF                                                    MLLR0200
C                                                                       MLLR0220
C SET UP THE INITIAL GUESSES AND TOLERANCES                             MLLR0240
C                                                                       MLLR0260
      Z1 = CMPLX(2.0, 1.0)                                              MLLR0280
      Z2 = CMPLX(5.0, 4.0)                                              MLLR0300
      Z3 = CMPLX(3.0, 2.0)                                              MLLR0320
C                                                                       MLLR0340
      EPSZ = .00001                                                     MLLR0360
      EPSF = .000001                                                    MLLR0380
      MAXITR = 50                                                       MLLR0400
C                                                                       MLLR0420
      ZANS = MULLR(TESTF, Z1, Z2, Z3, EPSZ, EPSF, MAXITR, ITER)         MLLR0440
C                                                                       MLLR0460
C WRITE IWRITE THE ANSWER AND THE NUMBER OF ITERATIONS                  MLLR0480
C                                                                       MLLR0500
      IWRITE = I1MACH(2)                                                MLLR0520
      WRITE (IWRITE, 999) ZANS, ITER                                    MLLR0540
 999    FORMAT(1H ,12HTHE ZERO IS ,2F11.8, 3X,                          MLLR0560
     1     I3,21H ITERATIONS WERE USED)                                 MLLR0580
C                                                                       MLLR0600
C                                                                       MLLR0620
      STOP                                                              MLLR0640
      END                                                               MLLR0660
      COMPLEX FUNCTION TESTF(Z)                                         MLLR0680
C                                                                       MLLR0700
      COMPLEX Z                                                         MLLR0720
C                                                                       MLLR0740
       TESTF = Z*CEXP(Z) - CSIN(Z)                                      MLLR0760
C                                                                       MLLR0780
      RETURN                                                            MLLR0800
      END                                                               MLLR0820
C$TEST ZERA                                                             ZERA0000
C***********************************************************************ZERA0020
C                                                                       ZERA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM ZERO                              ZERA0060
C                                                                       ZERA0080
C***********************************************************************ZERA0100
      EXTERNAL F                                                        ZERA0120
      INTEGER IWRITE,I1MACH                                             ZERA0140
      REAL A,B,F,T,X,ZERO                                               ZERA0160
C                                                                       ZERA0180
      IWRITE = I1MACH(2)                                                ZERA0200
      A = 1.0                                                           ZERA0220
      B = 3.0                                                           ZERA0240
      T = 1.0E-7                                                        ZERA0260
      X=ZERO(F,A,B,T)                                                   ZERA0280
C                                                                       ZERA0300
      WRITE (IWRITE,9999) X                                             ZERA0320
 9999 FORMAT (17H THE ROOT IS X = ,1PE15.8)                             ZERA0340
C                                                                       ZERA0360
      STOP                                                              ZERA0380
      END                                                               ZERA0400
C                                                                       ZERA0420
      REAL FUNCTION F(X)                                                F   0000
      REAL X                                                            F   0020
      F=X*X - 4.                                                        F   0040
      RETURN                                                            F   0060
      END                                                               F   0080
C$TEST ZONA                                                             ZONA0000
C***********************************************************************ZONA0020
C                                                                       ZONA0040
C  EXAMPLE OF USE OF THE PORT PROGRAM ZONE                              ZONA0060
C                                                                       ZONA0080
C***********************************************************************ZONA0100
      EXTERNAL ROSEN                                                    ZONA0120
      INTEGER IWRITE, I1MACH                                            ZONA0140
      REAL X(2), FNORM                                                  ZONA0160
      IWRITE = I1MACH(2)                                                ZONA0180
C                                                                       ZONA0200
      X(1) = -1.2                                                       ZONA0220
      X(2) = +1.0                                                       ZONA0240
C                                                                       ZONA0260
      CALL ZONE( ROSEN, 2, X, 1.E-2, 100, FNORM )                       ZONA0280
C                                                                       ZONA0300
      WRITE ( IWRITE, 9999 ) X(1), X(2), FNORM                          ZONA0320
 9999 FORMAT ( 1P3E15.6 )                                               ZONA0340
      STOP                                                              ZONA0360
      END                                                               ZONA0380
      SUBROUTINE ROSEN ( N, X, F )                                      ROSE0000
      INTEGER N                                                         ROSE0020
      REAL X(2), F(2)                                                   ROSE0040
      F(1) = 10.0* ( X(2) - X(1)**2 )                                   ROSE0060
      F(2) = 1.0 - X(1)                                                 ROSE0080
      RETURN                                                            ROSE0100
      END                                                               ROSE0120
C$TEST ZONB                                                             ZONB0000
C***********************************************************************ZONB0020
C                                                                       ZONB0040
C  EXAMPLE OF USE OF THE PORT PROGRAM ZONEJ                             ZONB0060
C                                                                       ZONB0080
C***********************************************************************ZONB0100
      EXTERNAL ROSEN,MYJAC                                              ZONB0120
      INTEGER IWRITE,I1MACH                                             ZONB0140
      REAL X(2), FNORM                                                  ZONB0160
      IWRITE  =  I1MACH(2)                                              ZONB0180
C                                                                       ZONB0200
      X(1)  =  -1.2                                                     ZONB0220
      X(2)  =  +1.0                                                     ZONB0240
C                                                                       ZONB0260
      CALL ZONEJ( ROSEN, MYJAC, 2, X, 1.E-2, 100, FNORM )               ZONB0280
C                                                                       ZONB0300
      WRITE ( IWRITE, 9999 ) X(1), X(2), FNORM                          ZONB0320
 9999 FORMAT ( 1P3E15.6 )                                               ZONB0340
      STOP                                                              ZONB0360
      END                                                               ZONB0380
      SUBROUTINE ROSEN ( N, X, F )                                      ROSE0000
      INTEGER N                                                         ROSE0020
      REAL X(2), F(2)                                                   ROSE0040
      F(1)  =  10.0 * ( X(2) - X(1)**2 )                                ROSE0060
      F(2)  =  1.0 - X(1)                                               ROSE0080
      RETURN                                                            ROSE0100
      END                                                               ROSE0120
      SUBROUTINE MYJAC(ROSEN, N, X, F, DFDX, JUSED)                     MYJA0000
      EXTERNAL  ROSEN                                                   MYJA0020
      INTEGER N,JUSED                                                   MYJA0040
      REAL X(2), F(2), DFDX(2,2)                                        MYJA0060
C                                                                       MYJA0080
C  JACOBIAN OF ROSEN AT X                                               MYJA0100
C                                                                       MYJA0120
      DFDX(1,1)  =  -20.0*X(1)                                          MYJA0140
      DFDX(1,2)  =   10.0                                               MYJA0160
      DFDX(2,1)  =  -1.0                                                MYJA0180
      DFDX(2,2)  =   0.0                                                MYJA0200
      JUSED = 1                                                         MYJA0220
      RETURN                                                            MYJA0240
      END                                                               MYJA0260
C$TEST RNRM                                                             RNRM0000
C***********************************************************************RNRM0020
C                                                                       RNRM0040
C  EXAMPLE OF USE OF THE PORT PROGRAM RNORM                             RNRM0060
C                                                                       RNRM0080
C***********************************************************************RNRM0100
C  RNORM - FIRST 10 RANDOM DEVIATES                                     RNRM0120
C                                                                       RNRM0140
      REAL X                                                            RNRM0160
      IWRITE = I1MACH(2)                                                RNRM0180
C                                                                       RNRM0200
      DO 10 K=1,10                                                      RNRM0220
      X = RNORM(0)                                                      RNRM0240
      WRITE (IWRITE,99) X                                               RNRM0260
 99     FORMAT(1H ,F11.8)                                               RNRM0280
 10   CONTINUE                                                          RNRM0300
C                                                                       RNRM0320
      STOP                                                              RNRM0340
      END                                                               RNRM0360
C$TEST RANC                                                             RANC0000
C***********************************************************************RANC0020
C                                                                       RANC0040
C  EXAMPLE OF USE OF THE PORT PROGRAM RANBYT                            RANC0060
C                                                                       RANC0080
C***********************************************************************RANC0100
      INTEGER IBYTE(4),IWRITE,I1MACH,K                                  RANC0120
      REAL R,RAND,UNI                                                   RANC0140
C                                                                       RANC0160
C  SET THE CORRECT OUTPUT UNIT                                          RANC0180
C                                                                       RANC0200
      IWRITE = I1MACH(2)                                                RANC0220
C                                                                       RANC0240
C  PRINT OUT THE FIRST FIVE UNIFORM RANDOM VARIATES                     RANC0260
C                                                                       RANC0280
      DO 1  K = 1,5                                                     RANC0300
      RAND = UNI(0)                                                     RANC0320
  1   WRITE (IWRITE, 9997) RAND                                         RANC0340
 9997 FORMAT(1H , E15.8)                                                RANC0360
C                                                                       RANC0380
C  NOW RESET TO THE ORIGINAL SEEDS                                      RANC0400
C  AND SEE HOW THE VARIATES LOOK AS BIT PATTERNS                        RANC0420
C  (WRITTEN IN OCTAL WITH INTEGER VALUES GIVEN UNDERNEATH)              RANC0440
C                                                                       RANC0460
      CALL RANSET(12345,1073)                                           RANC0480
      DO 2  K = 1,5                                                     RANC0500
      CALL RANBYT(R,IBYTE)                                              RANC0520
      WRITE (IWRITE, 9998) R, IBYTE                                     RANC0540
 9998 FORMAT(1H0, E15.8, 4(3X, O3))                                     RANC0560
C                                                                       RANC0580
      WRITE(IWRITE, 9999) IBYTE                                         RANC0600
 9999 FORMAT(16X, 4(3X, I3))                                            RANC0620
  2   CONTINUE                                                          RANC0640
C                                                                       RANC0660
      STOP                                                              RANC0680
      END                                                               RANC0700
C$TEST EXTR                                                             EXTR0000
C***********************************************************************EXTR0020
C                                                                       EXTR0040
C  EXAMPLE OF USE OF THE PORT PROGRAM EXTRMX                            EXTR0060
C                                                                       EXTR0080
C***********************************************************************EXTR0100
       INTEGER  IWRITE,IEXT(100),NEX,IMAX,IMIN,IMAG                     EXTR0120
       INTEGER  I1MACH,I,J                                              EXTR0140
       REAL     PI,STEP,X,F(100)                                        EXTR0160
C                                                                       EXTR0180
       IWRITE = I1MACH(2)                                               EXTR0200
       PI = 3.1415926532                                                EXTR0220
       STEP = 2.0*PI/99.0                                               EXTR0240
       DO 10 I=1,100                                                    EXTR0260
          X = STEP*FLOAT(I-1)                                           EXTR0280
  10      F(I) = EXP(-X)*COS(X)                                         EXTR0300
C                                                                       EXTR0320
       CALL EXTRMR(100,F,NEX,IEXT,IMAX,IMIN,IMAG)                       EXTR0340
C                                                                       EXTR0360
       WRITE(IWRITE,20)                                                 EXTR0380
  20   FORMAT(6X,9HEXTREMALS/5X,1HX,10X,4HF(X))                         EXTR0400
       DO 30 J=1,NEX                                                    EXTR0420
          I =IEXT(J)                                                    EXTR0440
          X = STEP*FLOAT(I-1)                                           EXTR0460
  30      WRITE(IWRITE,40) X,F(I)                                       EXTR0480
  40   FORMAT(2F10.5)                                                   EXTR0500
       STOP                                                             EXTR0520
       END                                                              EXTR0540
C$TEST FMTR                                                             FMTR0000
C***********************************************************************FMTR0020
C                                                                       FMTR0040
C  EXAMPLE OF USE OF THE PORT PROGRAM FRMATT                            FMTR0060
C                                                                       FMTR0080
C***********************************************************************FMTR0100
C  EXAMPLE PROGRAM TO FIND THE CORRECT FORMAT SPECIFICATIONS            FMTR0120
C  AND THEN PRINT OUT AN INTEGER, REAL AND DOUBLE-PRECISION ARRAY.      FMTR0140
C                                                                       FMTR0160
       INTEGER K, XINT(9), IWIDTH, IWRITE                               FMTR0180
       INTEGER WSP, MANTSP, WDP, MANTDP                                 FMTR0200
       REAL XREAL(9)                                                    FMTR0220
       DOUBLE PRECISION DFLOAT, XDP(9)                                  FMTR0240
C                                                                       FMTR0260
       IWRITE = I1MACH(2)                                               FMTR0280
C                                                                       FMTR0300
       DO 10 K=1,9                                                      FMTR0320
        XINT(K) = K                                                     FMTR0340
        XREAL(K) = FLOAT(K)                                             FMTR0360
        XDP(K) = DFLOAT(K)                                              FMTR0380
  10   CONTINUE                                                         FMTR0400
C                                                                       FMTR0420
       CALL FRMATI(IWIDTH)                                              FMTR0440
       CALL FRMATR(WSP, MANTSP)                                         FMTR0460
       CALL FRMATD(WDP, MANTDP)                                         FMTR0480
C                                                                       FMTR0500
C  TAKE ONE OFF THE MANTISSA WIDTH TO ALLOW FOR 1PEW.D FORMAT.          FMTR0520
C                                                                       FMTR0540
       MANTSP = MANTSP - 1                                              FMTR0560
       MANTDP = MANTDP - 1                                              FMTR0580
C                                                                       FMTR0600
       CALL APRNTI(XINT,  9, IWRITE, 80, IWIDTH)                        FMTR0620
       CALL APRNTR(XREAL, 9, IWRITE, 80, WSP, MANTSP)                   FMTR0640
       CALL APRNTD(XDP,   9, IWRITE, 80, WDP, MANTDP)                   FMTR0660
C                                                                       FMTR0680
       STOP                                                             FMTR0700
       END                                                              FMTR0720
C$TEST XKHI                                                             XKHI0000
C***********************************************************************XKHI0020
C                                                                       XKHI0040
C  EXAMPLE OF USE OF THE PORT PROGRAM IXKTH                             XKHI0060
C                                                                       XKHI0080
C***********************************************************************XKHI0100
C                                                                       XKHI0120
      COMMON/CSTAK/DSTAK(500)                                           XKHI0140
      INTEGER IWRITE, N, K                                              XKHI0160
      INTEGER X(10), XK                                                 XKHI0180
      INTEGER ISTAK(1000)                                               XKHI0200
      DOUBLE PRECISION DSTAK                                            XKHI0220
C                                                                       XKHI0240
      EQUIVALENCE (DSTAK(1),ISTAK(1))                                   XKHI0260
C                                                                       XKHI0280
C  SET OUTPUT UNIT TO IWRITE .                                          XKHI0300
      IWRITE = I1MACH(2)                                                XKHI0320
C                                                                       XKHI0340
      N = 8                                                             XKHI0360
      X(1) = 3.                                                         XKHI0380
      X(2) = 2.                                                         XKHI0400
      X(3) = 9.                                                         XKHI0420
      X(4) = 7.                                                         XKHI0440
      X(5) = 8.                                                         XKHI0460
      X(6) = 8.                                                         XKHI0480
      X(7) = 5.                                                         XKHI0500
      X(8) = 8.                                                         XKHI0520
C                                                                       XKHI0540
      WRITE (IWRITE,98)                                                 XKHI0560
 98    FORMAT(1H0,15H  K       IXKTH,//)                                XKHI0580
C                                                                       XKHI0600
      DO 10 K=1,8                                                       XKHI0620
      XK = IXKTH(N,K,X)                                                 XKHI0640
      WRITE (IWRITE,99) K, XK                                           XKHI0660
 99    FORMAT(1H ,I3,I10)                                               XKHI0680
 10   CONTINUE                                                          XKHI0700
      STOP                                                              XKHI0720
      END                                                               XKHI0740
C$TEST XKTH                                                             XKTH0000
C***********************************************************************XKTH0020
C                                                                       XKTH0040
C  EXAMPLE OF USE OF THE PORT PROGRAM XKTH                              XKTH0060
C                                                                       XKTH0080
C***********************************************************************XKTH0100
C                                                                       XKTH0120
      COMMON/CSTAK/DSTAK(500)                                           XKTH0140
      INTEGER IWRITE, I1MACH, N, K                                      XKTH0160
      REAL X(10), XK, XKTH                                              XKTH0180
      REAL RSTAK(1000)                                                  XKTH0200
      DOUBLE PRECISION DSTAK                                            XKTH0220
C                                                                       XKTH0240
      EQUIVALENCE (DSTAK(1),RSTAK(1))                                   XKTH0260
C                                                                       XKTH0280
C  SET OUTPUT UNIT TO IWRITE .                                          XKTH0300
      IWRITE = I1MACH(2)                                                XKTH0320
C                                                                       XKTH0340
      N = 8                                                             XKTH0360
      X(1) = 3.                                                         XKTH0380
      X(2) = 2.                                                         XKTH0400
      X(3) = 9.                                                         XKTH0420
      X(4) = 7.                                                         XKTH0440
      X(5) = 8.                                                         XKTH0460
      X(6) = 8.                                                         XKTH0480
      X(7) = 5.                                                         XKTH0500
      X(8) = 8.                                                         XKTH0520
C                                                                       XKTH0540
      WRITE (IWRITE,98)                                                 XKTH0560
 98    FORMAT(1H0,14H  K       XKTH//)                                  XKTH0580
C                                                                       XKTH0600
      DO 10 K=1,8                                                       XKTH0620
      XK = XKTH(N,K,X)                                                  XKTH0640
      WRITE (IWRITE,99) K, XK                                           XKTH0660
 99    FORMAT(1H ,I3,F10.1)                                             XKTH0680
 10   CONTINUE                                                          XKTH0700
      STOP                                                              XKTH0720
      END                                                               XKTH0740
C$TEST XKHD                                                             XKHD0000
C***********************************************************************XKHD0020
C                                                                       XKHD0040
C  EXAMPLE OF USE OF THE PORT PROGRAM DXKTH                             XKHD0060
C                                                                       XKHD0080
C***********************************************************************XKHD0100
C                                                                       XKHD0120
      COMMON/CSTAK/DSTAK(500)                                           XKHD0140
      INTEGER IWRITE, N, K                                              XKHD0160
      DOUBLE PRECISION X(10), XK, DXKTH                                 XKHD0180
      DOUBLE PRECISION DSTAK                                            XKHD0200
C                                                                       XKHD0220
C  SET OUTPUT UNIT TO IWRITE .                                          XKHD0240
      IWRITE = I1MACH(2)                                                XKHD0260
C                                                                       XKHD0280
      N = 8                                                             XKHD0300
      X(1) = 3.                                                         XKHD0320
      X(2) = 2.                                                         XKHD0340
      X(3) = 9.                                                         XKHD0360
      X(4) = 7.                                                         XKHD0380
      X(5) = 8.                                                         XKHD0400
      X(6) = 8.                                                         XKHD0420
      X(7) = 5.                                                         XKHD0440
      X(8) = 8.                                                         XKHD0460
C                                                                       XKHD0480
      WRITE (IWRITE,98)                                                 XKHD0500
 98    FORMAT(1H0,14H  K       XKTH//)                                  XKHD0520
C                                                                       XKHD0540
      DO 10 K=1,8                                                       XKHD0560
      XK = DXKTH(N,K,X)                                                 XKHD0580
      WRITE (IWRITE,99) K, XK                                           XKHD0600
 99    FORMAT(1H ,I3,D25.14)                                            XKHD0620
 10   CONTINUE                                                          XKHD0640
      STOP                                                              XKHD0660
      END                                                               XKHD0680
C$TEST APNR                                                             APNR0000
C***********************************************************************APNR0020
C                                                                       APNR0040
C  EXAMPLE OF USE OF THE PORT APRNTX ROUTINES                           APNR0060
C                                                                       APNR0080
C***********************************************************************APNR0100
      LOGICAL A(25)                                                     APNR0120
      INTEGER B(25), IWRITE, I1MACH                                     APNR0140
      REAL C(25)                                                        APNR0160
      DOUBLE PRECISION D(25)                                            APNR0180
      COMPLEX E(25)                                                     APNR0200
C                                                                       APNR0220
      IWRITE = I1MACH(2)                                                APNR0240
      WRITE(IWRITE, 10)                                                 APNR0260
   10 FORMAT(14H0LOGICAL ARRAY )                                        APNR0280
      CALL SETL(25, .FALSE., A)                                         APNR0300
      CALL APRNTL(A, 25, IWRITE, 80)                                    APNR0320
C                                                                       APNR0340
      WRITE(IWRITE, 20)                                                 APNR0360
   20 FORMAT(14H0INTEGER ARRAY )                                        APNR0380
      CALL SETI(25, -1, B)                                              APNR0400
      CALL APRNTI(B, 25, IWRITE, 80, 4)                                 APNR0420
C                                                                       APNR0440
      WRITE(IWRITE, 30)                                                 APNR0460
   30 FORMAT(11H0REAL ARRAY )                                           APNR0480
      CALL SETR(25, 1.0, C)                                             APNR0500
      CALL APRNTR(C, 25, IWRITE, 80, 12, 4)                             APNR0520
C                                                                       APNR0540
      WRITE(IWRITE, 40)                                                 APNR0560
   40 FORMAT(23H0DOUBLE PRECISION ARRAY )                               APNR0580
      CALL SETD(25, 1.0D0, D)                                           APNR0600
      CALL APRNTD(D, 25, IWRITE, 80, 12, 4)                             APNR0620
C                                                                       APNR0640
      WRITE(IWRITE, 50)                                                 APNR0660
   50 FORMAT(14H0COMPLEX ARRAY )                                        APNR0680
      CALL SETC(25, CMPLX(1.0, -1.0), E)                                APNR0700
      CALL APRNTC(E, 25, IWRITE, 80, 12, 4)                             APNR0720
C                                                                       APNR0740
      STOP                                                              APNR0760
      END                                                               APNR0780
C$TEST ERRK                                                             ERRK0000
C***********************************************************************ERRK0020
C                                                                       ERRK0040
C  EXAMPLE OF USE OF THE PORT PROGRAM STKDMP                            ERRK0060
C                                                                       ERRK0080
C***********************************************************************ERRK0100
C     SAMPLE USE OF THE STACK DUMP                                      ERRK0120
      INTEGER IPTR, ISTKGT                                              ERRK0140
C                                                                       ERRK0160
      COMMON  /CSTAK/   DSTAK                                           ERRK0180
      DOUBLE PRECISION  DSTAK(500)                                      ERRK0200
      INTEGER           ISTAK(1000)                                     ERRK0220
      LOGICAL           LSTAK(1000)                                     ERRK0240
      REAL              RSTAK(1000)                                     ERRK0260
      COMPLEX           CMSTAK(500)                                     ERRK0280
      EQUIVALENCE (DSTAK(1), ISTAK(1))                                  ERRK0300
      EQUIVALENCE (DSTAK(1), LSTAK(1))                                  ERRK0320
      EQUIVALENCE (DSTAK(1), RSTAK(1))                                  ERRK0340
      EQUIVALENCE (DSTAK(1), CMSTAK(1))                                 ERRK0360
C                                                                       ERRK0380
      IPTR = ISTKGT(25, 1)                                              ERRK0400
      CALL SETL(25, .FALSE., LSTAK(IPTR))                               ERRK0420
      IPTR = ISTKGT(25, 2)                                              ERRK0440
      CALL SETI(25, -1, ISTAK(IPTR))                                    ERRK0460
      IPTR = ISTKGT(25, 3)                                              ERRK0480
      CALL SETR(25, 1.0, RSTAK(IPTR))                                   ERRK0500
      IPTR = ISTKGT(25, 4)                                              ERRK0520
      CALL SETD(25, 1.0D0, DSTAK(IPTR))                                 ERRK0540
      IPTR = ISTKGT(25, 5)                                              ERRK0560
      CALL SETC(25, CMPLX(1.0, -1.0), CMSTAK(IPTR))                     ERRK0580
      IPTR = ISTKGT(25, 5)                                              ERRK0600
      CALL SETC(25, CMPLX(1.0, -1.0), CMSTAK(IPTR))                     ERRK0620
      CALL ISTKRL(1)                                                    ERRK0640
C                                                                       ERRK0660
      CALL STKDMP                                                       ERRK0680
      STOP                                                              ERRK0700
      END                                                               ERRK0720
C************END OF PORT 3 EXAMPLE PROGRAMS*****************************ZZZZ0000
